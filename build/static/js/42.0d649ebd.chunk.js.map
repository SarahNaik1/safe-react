{"version":3,"sources":["components/forms/Field/index.tsx","components/forms/TextField/index.tsx","assets/icons/qrcode.svg","components/ScanQRModal/style.ts","components/ScanQRModal/index.tsx","components/ScanQRModal/ScanQRWrapper/index.tsx","components/forms/SelectField/index.tsx","components/layout/Heading/index.tsx","components/layout/Heading/index.module.scss","components/Stepper/stepperContext.tsx","components/forms/AddressInput/index.tsx","components/NetworkLabel/NetworkLabel.tsx","components/layout/Page/index.tsx","components/layout/Page/index.module.scss","components/Stepper/Stepper.tsx","components/StepperForm/StepperForm.tsx","logic/hooks/useMnemonicName.ts","logic/hooks/useMnemonicName.dict.ts","routes/CreateSafePage/fields/createSafeFields.tsx","routes/CreateSafePage/steps/NameNewSafeStep.tsx","routes/CreateSafePage/steps/OwnersAndConfirmationsNewSafeStep.tsx","logic/hooks/useEstimateSafeCreationGas.tsx","routes/CreateSafePage/steps/ReviewNewSafeStep.tsx","logic/safe/transactions/txMonitor.ts","routes/opening/components/Footer.tsx","routes/opening/steps.ts","routes/opening/assets/safe-created.svg","routes/opening/assets/vault-error.svg","routes/opening/assets/creation-process.gif","routes/opening/utils/getSafeAddressFromLogs.ts","routes/opening/index.tsx","routes/CreateSafePage/components/SafeCreationProcess.tsx","routes/CreateSafePage/steps/SelectWalletAndNetworkStep.tsx","stubs/CreateSafePageStubs.tsx","routes/CreateSafePage/CreateSafePage.tsx"],"names":["GnoField","props","overflowStyle","overflow","width","useStyles","makeStyles","createStyles","root","paddingTop","lg","paddingBottom","lineHeight","TextField","input","name","onChange","value","restInput","inputAdornment","meta","multiline","rows","testId","text","rest","classes","helperText","undefined","showError","touched","pristine","valid","hasError","error","modifiedSinceLastSubmit","submitError","errorMessage","isInactiveAndPristineOrUntouched","active","isInvalidAndUntouched","disableUnderline","inputRoot","statusClasses","inputProps","autoComplete","inputRootProps","className","InputProps","style","styles","heading","padding","justifyContent","maxHeight","boxSizing","loaderContainer","height","close","color","secondaryText","detailsContainer","backgroundColor","background","buttonRow","button","marginLeft","sm","ScanQRModal","isOpen","onClose","onScan","useState","fileUploadModalOpen","setFileUploadModalOpen","setError","cameraBlocked","setCameraBlocked","scannerRef","React","openImageDialog","current","useEffect","onFileScannedResolve","successData","console","Modal","description","handleClose","open","title","Row","align","grow","Paragraph","noMargin","size","IconButton","disableRipple","onClick","Hairline","Col","layout","middle","Block","margin","legacyMode","onError","err","data","ref","facingMode","Button","minWidth","variant","qrCodeBtn","cursor","ScanQRWrapper","handleScan","qrModalOpen","setQrModalOpen","closeQrModal","Img","alt","role","src","QRIcon","SelectInput","disableError","formControlProps","label","renderValue","dirtySinceLastSubmit","htmlFor","cx","classNames","bind","Heading","children","tag","truncate","capitalize","module","exports","StepperContext","createContext","useStepper","context","useContext","Object","keys","length","Error","StepperProvider","onFinish","store","disableNextButton","stepsComponents","currentStep","setCurrentStep","steps","Children","toArray","CurrentStepComponent","nextButtonType","nextButtonLabel","isSubmitButton","isFirstStep","isLastStep","customNextButtonLabel","state","onClickPreviousStep","history","goBack","step","onClickNextStep","Provider","AddressInput","placeholder","fieldMutator","validators","defaultValue","disabled","currentInput","setCurrentInput","resolutions","setResolutions","resolvedAddress","isResolving","sanitizedValidators","useCallback","val","parsed","parsePrefixedAddress","composeValidators","address","allValidators","useMemo","required","mustBeEthereumAddress","onValueChange","rawVal","trimSpaces","isValidEnsName","isValidCryptoDomainName","prev","getAddressFromDomain","then","resolverAddr","formattedAddress","checksumAddress","catch","logError","Errors","_101","message","checkedAddress","adornment","endAdornment","position","component","spellCheck","validate","NetworkLabel","networkInfo","flexGrow","selectedNetwork","getChainInfo","StyledLabel","theme","chainName","styled","span","extraSmallFontSize","xs","border","textColor","fontColor","Page","page","StepperComponent","Stepper","activeStep","orientation","map","index","isStepLabelClickable","currentComponent","backButtonLabel","StepLabel","stepLabel","StepContent","Paper","elevation","controlStyle","center","backButton","type","nextButton","maxWidth","boxShadow","borderRadius","marginRight","fontWeight","boldFont","palette","secondary","main","StepElement","StepperForm","onSubmit","initialValues","setValidate","onSubmitForm","setOnSubmitForm","filter","Boolean","list","ComponentStep","values","handleSubmit","submitting","StepFormElement","animals","trim","split","adjectives","getRandomItem","arr","Math","floor","random","useMnemonicName","noun","setName","adj","getRandomName","useMnemonicSafeName","networkName","getChainName","toLowerCase","FIELD_CREATE_CUSTOM_SAFE_NAME","FIELD_CREATE_SUGGESTED_SAFE_NAME","FIELD_SAFE_OWNERS_LIST","FIELD_SAFE_OWNER_ENS_LIST","FIELD_NEW_SAFE_THRESHOLD","FIELD_MAX_OWNER_NUMBER","FIELD_NEW_SAFE_PROXY_SALT","FIELD_NEW_SAFE_GAS_LIMIT","FIELD_NEW_SAFE_GAS_PRICE","FIELD_NEW_SAFE_CREATION_TX_HASH","FIELD_CUSTOMER_ACCOUNT","FIELD_HSBC_SAFE_OWNERS_LIST","FIELD_HSBC_SAFE_OWNER_ENS_LIST","SAFE_PENDING_CREATION_STORAGE_KEY","NameNewSafeStep","ownersWithENSName","setOwnersWithENSName","provider","useSelector","providerNameSelector","createNewSafeForm","useForm","getState","getInitialOwnerENSNames","a","formValues","owners","Promise","all","addressFieldName","reverseENSLookup","ensName","ensDomain","removeTld","ownersWithENSNameRecord","reduce","acc","change","BlockWithPadding","FieldContainer","Field","Link","href","rel","target","OwnersAndConfirmationsNewSafeStep","createSafeForm","addressBook","currentNetworkAddressBookAsMap","createSafeFormValues","formErrors","errors","hsbcOwners","hsbcSafeOwnerENSList","threshold","maxOwnerNumber","getENSName","newOwnersWithENSName","assign","RowHeader","hsbcNameFieldName","hsbcAddressFieldName","hasOwnerAddressError","hsbcOwnerAddress","ParagraphWithMargin","InputAdornment","CheckIconAddressAdornment","nameFieldName","ownerAddress","showDeleteIcon","ownerName","OwnerNameField","minMaxLength","addressName","OwnersIconsContainer","ButtonHelper","ownersUpdated","owner","updatedMaxOwnerNumbers","onClickRemoveOwner","dataTestId","tooltip","OwnerContainer","newEmptyOwner","SelectField","minValue","_","option","MenuItem","StyledParagraph","ownersAndConfirmationsNewSafeStepValidations","addresses","forEach","slice","includes","ADDRESS_REPEATED_ERROR","THRESHOLD_ERROR","CheckCircle","estimateGas","userAccount","numOwners","safeCreationSalt","estimateGasForDeployingSafe","calculateGasPrice","gasEstimation","gasPrice","estimatedGasCosts","parseInt","nativeCurrency","getNativeCurrency","gasCost","fromTokenUnit","decimals","gasCostFormatted","formatAmount","gasLimit","ReviewNewSafeStep","defaultSafeValue","safeName","numberOfOwners","totalOwners","ownerAddresses","setGasEstimation","userAccountSelector","addressesSerialized","JSON","stringify","addressesList","parse","useEstimateSafeCreationGas","DetailsContainer","SafeNameParagraph","weight","TableContainer","TitleContainer","Fragment","OwnersAddressesContainer","PrefixedEthHashInfo","hash","showAvatar","showCopyBtn","explorerUrl","getExplorerInfo","DescriptionContainer","symbol","findSpeedupTx","sender","nonce","web3","getWeb3ReadOnly","eth","getBlock","latestBlock","replacementTransaction","transactions","find","transaction","sameAddress","from","sameString","txMonitor","options","tries","resolve","reject","maxRetries","CodedException","_805","monitorFn","params","getTransaction","getTransactionReceipt","firstTxReceipt","replacementTx","replacementReceipt","setTimeout","delay","StyledText","Text","ButtonWithMargin","FooterContainer","div","LoaderText","GenericFooter","safeCreationTxHash","getHashedExplorerUrl","match","exec","explorerDomain","as","ErrorFooter","onCancel","onRetry","id","instruction","footerComponent","continueButtonDisabled","onContinue","abiDecoder","addABI","getProxyFactoryDeployment","version","LATEST_SAFE_VERSION","abi","getNewSafeAddressFromLogs","logs","proxyCreationEvent","decodeLogs","proxyInformation","events","SafeDeployment","FooterComponent","creationTxHash","onSuccess","submittedPromise","loading","setLoading","stepIndex","setStepIndex","setSafeCreationTxHash","createdSafeAddress","setCreatedSafeAddress","intervalStarted","setIntervalStarted","waitingSafeDeployed","setWaitingSafeDeployed","setContinueButtonDisabled","dispatch","useDispatch","confirmationStep","isConfirmationStep","showSnackbarError","isTxPendingError","enqueueSnackbar","NOTIFICATIONS","TX_PENDING_MSG","CREATE_SAFE_FAILED_MSG","_800","onRetryTx","handlePromise","receipt","transactionHash","isTxMined","txHash","getWeb3","blockNumber","status","interval","setInterval","clearInterval","awaitUntilSafeIsDeployed","safeAddress","ProxyCreation","returnValues","proxy","getCode","EMPTY_DATA","LoaderContainer","Wrapper","Title","Nav","activeStepIndex","Body","BodyImage","VaultErrorSvg","VaultLoading","SuccessSvg","BodyDescription","CardTitle","BodyInstruction","FullParagraph","inversecolors","toString","$stepIndex","BodyFooter","BackButton","colors","white","connected","InlinePrefixedEthHashInfo","goToWelcomePage","push","WELCOME_ROUTE","sleep","ms","parseError","prefix","startsWith","json","pop","actualMessage","e","SafeCreationProcess","creationTxPromise","setCreationTxPromise","trackEvent","useAnalytics","userAddressAccount","chainId","currentChainId","showModal","setShowModal","modalData","setModalData","showCouldNotLoadModal","setShowCouldNotLoadModal","newSafeAddress","setNewSafeAddress","createNewSafe","safeCreationFormValues","loadFromStorage","confirmations","deploymentTx","getSafeDeploymentTransaction","sendParams","createSendParams","ethGasLimit","ethGasPriceInGWei","send","once","saveToStorage","encodeABI","txReceipt","log","onSafeCreated","ownersAddressBookEntry","makeAddressBookEntry","safeAddressBookEntry","addressBookSafeLoad","USER_EVENTS","CREATE_SAFE","backOff","getSafeInfo","startingDelay","maxDelay","numOfAttempts","retry","info","buildSafe","safeProps","addOrUpdateSafe","removeFromStorage","onClickModalButton","pathname","generateSafeRoute","SAFE_ROUTES","ASSETS_BALANCES","shortName","getShortName","tx","body","EmphasisLabel","footer","ButtonContainer","Container","SwitchNetworkContainer","StyledDialogTitle","DialogTitle","StyledDialogContent","DialogContent","NetworkLabelItem","SelectWalletAndNetworkStep","isNetworkSelectorPopupOpen","setIsNetworkSelectorPopupOpen","isWalletConnected","isWrongNetwork","shouldSwitchWalletChain","openNetworkSelectorPopup","onNetworkSwitch","setChainId","ConnectButton","WalletSwitch","Dialog","disableTypography","Typography","dividers","List","getChains","network","STUB_HSBC_SAFE_OWNERS","CreateSafePage","safePendingToBeCreated","setSafePendingToBeCreated","isLoading","setIsLoading","providerName","checkIfSafeIsPendingToBeCreated","userWalletAddress","location","useLocation","safeRandomName","initialFormValues","setInitialFormValues","initialValuesFromUrl","userAddress","suggestedSafeName","hsbcSafeOwners","query","queryString","search","arrayFormat","owneraddresses","ownernames","isOwnersPresentInTheUrl","ownersFromUrl","Array","isArray","ownersNamesFromUrl","userAddressName","ownerNames","thresholdFromURl","Number","isValidThresholdInTheUrl","isNaN","ownerAddressFields","ownerNameFields","Date","now","hsbcOwner","hsbcSafeOwner","hsbcAddressFields","hsbcAddress","hsbcNameFields","hsbcOwnerName","getInitialValues","BackIcon","newSafeFormValues"],"mappings":"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","file":"static/js/42.0d649ebd.chunk.js","sourcesContent":["import { Field } from 'react-final-form'\n\nconst GnoField = (props: any): React.ReactElement => <Field {...props} />\n\nexport default GnoField\n","import MuiTextField from '@material-ui/core/TextField'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\n\nimport { lg } from 'src/theme/variables'\n\n// Neded for solving a fix in Windows browsers\nconst overflowStyle = {\n  overflow: 'hidden',\n  width: '100%',\n}\n\nconst styles = () =>\n  createStyles({\n    root: {\n      paddingTop: lg,\n      paddingBottom: '12px',\n      lineHeight: 0,\n    },\n  })\n\nconst useStyles = makeStyles(styles)\n\ntype Props = {\n  input: {\n    name: string\n    onChange?: () => void\n    value: string\n    placeholder: string\n    type: string\n  }\n  meta: {\n    touched?: boolean\n    pristine?: boolean\n    valid?: boolean\n    error?: string\n    modifiedSinceLastSubmit?: boolean\n    submitError?: boolean\n    active?: boolean\n  }\n  inputAdornment?: { endAdornment: React.ReactElement } | undefined\n  multiline: boolean\n  rows?: string\n  testId: string\n  text: string\n  disabled?: boolean\n  rowsMax?: number\n  className?: string\n}\n\nconst TextField = (props: Props): React.ReactElement => {\n  const {\n    input: { name, onChange, value, ...restInput },\n    inputAdornment,\n    meta,\n    multiline,\n    rows,\n    testId,\n    text,\n    ...rest\n  } = props\n  const classes = useStyles()\n  const helperText = value ? text : undefined\n  const showError = (meta.touched || !meta.pristine) && !meta.valid\n  const hasError = !!meta.error || (!meta.modifiedSinceLastSubmit && !!meta.submitError)\n  const errorMessage = meta.error || meta.submitError\n  const isInactiveAndPristineOrUntouched = !meta.active && (meta.pristine || !meta.touched)\n  const isInvalidAndUntouched = typeof meta.error === 'undefined' ? true : !meta.touched\n\n  const disableUnderline = isInactiveAndPristineOrUntouched && isInvalidAndUntouched\n\n  const inputRoot = helperText ? classes.root : ''\n  const statusClasses = meta.valid ? 'isValid' : hasError && showError ? 'isInvalid' : ''\n  const inputProps = {\n    ...restInput,\n    autoComplete: 'off',\n    'data-testid': testId,\n  }\n  const inputRootProps = {\n    ...inputAdornment,\n    className: `${inputRoot} ${statusClasses}`,\n    disableUnderline: disableUnderline,\n  }\n\n  return (\n    <MuiTextField\n      error={hasError && showError}\n      helperText={hasError && showError ? errorMessage : helperText || ' '}\n      inputProps={inputProps} // blank in order to force to have helper text\n      InputProps={inputRootProps}\n      multiline={multiline}\n      name={name}\n      onChange={onChange}\n      rows={rows}\n      style={overflowStyle}\n      value={value}\n      {...rest}\n    />\n  )\n}\n\nexport default TextField\n","export default __webpack_public_path__ + \"static/media/qrcode.fec1b6d8.svg\";","import { background, lg, secondaryText, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: lg,\n    justifyContent: 'space-between',\n    maxHeight: '75px',\n    boxSizing: 'border-box',\n  },\n  loaderContainer: {\n    width: '100%',\n    height: '100%',\n  },\n  close: {\n    height: '25px',\n    width: '25px',\n    color: secondaryText,\n  },\n  detailsContainer: {\n    backgroundColor: background,\n    maxHeight: '450px',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n  button: {\n    '&:last-child': {\n      marginLeft: sm,\n    },\n  },\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport * as React from 'react'\nimport QrReader from 'react-qr-reader'\n\nimport { styles } from './style'\n\nimport Modal from 'src/components/Modal'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { useEffect, useState } from 'react'\n\nconst useStyles = makeStyles(styles)\n\ntype Props = {\n  isOpen: boolean\n  onClose: () => void\n  onScan: (value: string) => void\n}\n\nexport const ScanQRModal = ({ isOpen, onClose, onScan }: Props): React.ReactElement => {\n  const classes = useStyles()\n  const [fileUploadModalOpen, setFileUploadModalOpen] = useState<boolean>(false)\n  const [error, setError] = useState<string | null>(null)\n  const [cameraBlocked, setCameraBlocked] = useState<boolean>(false)\n  const scannerRef: any = React.createRef()\n  const openImageDialog = React.useCallback(() => {\n    scannerRef.current.openImageDialog()\n  }, [scannerRef])\n\n  useEffect(() => {\n    if (!fileUploadModalOpen && cameraBlocked && !error) {\n      setFileUploadModalOpen(true)\n      openImageDialog()\n    }\n  }, [cameraBlocked, openImageDialog, fileUploadModalOpen, setFileUploadModalOpen, error])\n\n  const onFileScannedResolve = (error: Error | null, successData: string | null) => {\n    if (error) {\n      console.error('QR code error', error)\n\n      if (error.name === 'NotAllowedError' || error.name === 'PermissionDismissedError') {\n        setCameraBlocked(true)\n        setFileUploadModalOpen(false)\n      } else {\n        setError('The QR could not be read')\n      }\n      return\n    }\n\n    if (successData) {\n      onScan(successData)\n    } else if (cameraBlocked) {\n      setError('The QR could not be read')\n    }\n  }\n\n  return (\n    <Modal description=\"Receive Tokens Form\" handleClose={onClose} open={isOpen} title=\"Receive Tokens\">\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph noMargin size=\"xl\">\n          Scan QR\n        </Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.close} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Col className={classes.detailsContainer} layout=\"column\" middle=\"xs\">\n        {error && (\n          <Block padding=\"md\" margin=\"md\">\n            {error}\n          </Block>\n        )}\n        <QrReader\n          legacyMode={cameraBlocked}\n          onError={(err: Error) => onFileScannedResolve(err, null)}\n          onScan={(data: string) => onFileScannedResolve(null, data)}\n          ref={scannerRef}\n          style={{ width: '400px', height: '400px' }}\n          facingMode=\"user\"\n        />\n      </Col>\n      <Hairline />\n      <Row align=\"center\" className={classes.buttonRow}>\n        <Button className={classes.button} color=\"secondary\" minWidth={154} onClick={onClose}>\n          Close\n        </Button>\n        <Button\n          className={classes.button}\n          color=\"primary\"\n          minWidth={154}\n          onClick={() => {\n            setCameraBlocked(true)\n            setError(null)\n            setFileUploadModalOpen(false)\n          }}\n          variant=\"contained\"\n        >\n          Upload an image\n        </Button>\n      </Row>\n    </Modal>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport { ReactElement, useState } from 'react'\n\nimport QRIcon from 'src/assets/icons/qrcode.svg'\nimport { ScanQRModal } from 'src/components/ScanQRModal'\nimport Img from 'src/components/layout/Img'\n\nconst useStyles = makeStyles({\n  qrCodeBtn: {\n    cursor: 'pointer',\n  },\n})\n\ntype Props = {\n  handleScan: (dataResult: string, closeQrModal: () => void) => void\n  testId?: string\n}\n\nexport const ScanQRWrapper = ({ handleScan, testId }: Props): ReactElement => {\n  const classes = useStyles()\n  const [qrModalOpen, setQrModalOpen] = useState(false)\n\n  const openQrModal = () => {\n    setQrModalOpen(true)\n  }\n\n  const closeQrModal = () => {\n    setQrModalOpen(false)\n  }\n\n  const onScanFinished = (value: string) => {\n    handleScan(value, closeQrModal)\n  }\n\n  return (\n    <>\n      <Img\n        alt=\"Scan QR\"\n        className={classes.qrCodeBtn}\n        height={20}\n        onClick={() => openQrModal()}\n        role=\"button\"\n        src={QRIcon}\n        testId={testId || 'qr-icon'}\n      />\n      {qrModalOpen && <ScanQRModal isOpen={qrModalOpen} onClose={closeQrModal} onScan={onScanFinished} />}\n    </>\n  )\n}\n","import FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\n\nconst style = {\n  minWidth: '100%',\n}\n\nconst SelectInput = ({\n  classes,\n  disableError,\n  formControlProps,\n  input: { name, onChange, value, ...restInput },\n  label,\n  meta,\n  renderValue,\n  ...rest\n}) => {\n  const showError = ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) && meta.touched && !disableError\n  const inputProps = {\n    ...restInput,\n    name,\n  }\n\n  return (\n    <FormControl {...formControlProps} error={showError} style={style}>\n      <InputLabel htmlFor={name}>{label}</InputLabel>\n      <Select\n        classes={classes}\n        inputProps={inputProps}\n        onChange={onChange}\n        renderValue={renderValue}\n        value={value}\n        {...rest}\n      />\n      {showError && <FormHelperText>{meta.error || meta.submitError}</FormHelperText>}\n    </FormControl>\n  )\n}\n\nexport default SelectInput\n","import classNames from 'classnames/bind'\nimport * as React from 'react'\n\nimport styles from './index.module.scss'\n\nimport { capitalize } from 'src/utils/css'\n\nconst cx = classNames.bind(styles)\n\nconst Heading = (props) => {\n  const { align, children, className = '', color, margin, tag, testId, truncate, ...rest } = props\n\n  const classes = cx(className, 'heading', align, tag, margin ? capitalize(margin, 'margin') : undefined, color, {\n    truncate,\n  })\n\n  return React.createElement(tag, { ...rest, className: classes, 'data-testid': testId || '' }, children)\n}\n\nexport default Heading\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Heading_heading__3Wz9P\",\"h1\":\"Heading_h1__MXfCA\",\"h2\":\"Heading_h2__3X6Ts\",\"h3\":\"Heading_h3__1k2fD\",\"h4\":\"Heading_h4__1YCmR\",\"center\":\"Heading_center__28MHY\",\"right\":\"Heading_right__1fQM1\",\"truncate\":\"Heading_truncate__2Lq93\",\"marginSm\":\"Heading_marginSm__13YwX\",\"marginMd\":\"Heading_marginMd__2AnZN\",\"marginLg\":\"Heading_marginLg__2ZfEq\",\"marginXl\":\"Heading_marginXl__3RHt7\",\"soft\":\"Heading_soft__2Zu43\",\"medium\":\"Heading_medium__2X8Z-\",\"dark\":\"Heading_dark__Ds2QB\",\"fancy\":\"Heading_fancy__1Wx6l\",\"warning\":\"Heading_warning__2lrZC\",\"primary\":\"Heading_primary__2hOk2\",\"secondary\":\"Heading_secondary__37lKs\",\"disabled\":\"Heading_disabled__30DjG\",\"error\":\"Heading_error__t5ujr\",\"white\":\"Heading_white__2gkIK\"};","import { useContext, ReactElement, useState, Children, createContext } from 'react'\nimport { history } from 'src/routes/routes'\n\nconst StepperContext = createContext({})\n\nfunction useStepper(): any {\n  const context = useContext(StepperContext)\n\n  const hasContextDefined = Object.keys(context).length > 0\n\n  if (!hasContextDefined) {\n    throw new Error('useStepper must be used within a StepperProvider!')\n  }\n\n  return context\n}\n\ntype StepperProviderTypes = {\n  onFinish?: () => void\n  store?: any\n  disableNextButton?: boolean\n  stepsComponents: ReactElement[]\n  children: ReactElement\n  testId?: string\n}\n\nfunction StepperProvider({\n  onFinish,\n  store,\n  disableNextButton,\n  stepsComponents,\n  children,\n  testId,\n}: StepperProviderTypes): ReactElement {\n  const [currentStep, setCurrentStep] = useState(0)\n\n  const steps = Children.toArray(stepsComponents)\n  const CurrentStepComponent: any = steps[currentStep]\n\n  const nextButtonType = CurrentStepComponent.props.nextButtonType\n  const nextButtonLabel = CurrentStepComponent.props.nextButtonLabel\n\n  const isSubmitButton = nextButtonType === 'submit'\n  const isFirstStep = currentStep === 0\n  const isLastStep = currentStep > steps.length - 2\n  const customNextButtonLabel = nextButtonLabel\n\n  const onClickPreviousStep = () => {\n    if (isFirstStep) {\n      history.goBack()\n    } else {\n      setCurrentStep((step) => step - 1)\n    }\n  }\n\n  const onClickNextStep = () => {\n    if (isSubmitButton) {\n      return\n    }\n\n    if (isLastStep) {\n      onFinish?.()\n      return\n    }\n\n    setCurrentStep((step) => step + 1)\n  }\n\n  const state = {\n    currentStep,\n    setCurrentStep,\n    steps,\n\n    CurrentStepComponent,\n\n    isFirstStep,\n    isLastStep,\n\n    onClickPreviousStep,\n    onClickNextStep,\n\n    disableNextButton,\n    nextButtonType,\n    customNextButtonLabel,\n\n    testId,\n\n    ...store,\n  }\n\n  return <StepperContext.Provider value={state}>{children}</StepperContext.Provider>\n}\n\nexport { useStepper, StepperProvider }\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { Field } from 'react-final-form'\nimport { OnChange } from 'react-final-form-listeners'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport TextField from 'src/components/forms/TextField'\nimport { Validator, composeValidators, mustBeEthereumAddress, required } from 'src/components/forms/validator'\nimport { trimSpaces } from 'src/utils/strings'\nimport { getAddressFromDomain } from 'src/logic/wallets/getWeb3'\nimport { isValidEnsName, isValidCryptoDomainName } from 'src/logic/wallets/ethAddresses'\nimport { checksumAddress } from 'src/utils/checksumAddress'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { parsePrefixedAddress } from 'src/utils/prefixedAddress'\n\nexport interface AddressInputProps {\n  fieldMutator: (address: string) => void\n  name?: string\n  text?: string\n  placeholder?: string\n  inputAdornment?: { endAdornment: React.ReactElement } | undefined | false\n  testId: string\n  validators?: Validator[]\n  defaultValue?: string\n  disabled?: boolean\n  spellCheck?: boolean\n  className?: string\n}\n\nconst AddressInput = ({\n  className = '',\n  name = 'recipientAddress',\n  text = 'Recipient*',\n  placeholder = 'Recipient*',\n  fieldMutator,\n  testId,\n  inputAdornment,\n  validators = [],\n  defaultValue,\n  disabled,\n}: AddressInputProps): React.ReactElement => {\n  const [currentInput, setCurrentInput] = useState<string>('')\n  const [resolutions, setResolutions] = useState<Record<string, string | undefined>>({})\n  const resolvedAddress = resolutions[currentInput]\n  const isResolving = resolvedAddress === ''\n\n  // External validators must receive an unprefixed address\n  const sanitizedValidators = useCallback(\n    (val: string) => {\n      const parsed = parsePrefixedAddress(val)\n      return composeValidators(...validators)(parsed.address)\n    },\n    [validators],\n  )\n\n  // Internal validators + externally passed validators\n  const allValidators = useMemo(\n    () => composeValidators(required, mustBeEthereumAddress, sanitizedValidators),\n    [sanitizedValidators],\n  )\n\n  const onValueChange = useCallback(\n    (rawVal: string) => {\n      const address = trimSpaces(rawVal)\n\n      setCurrentInput(rawVal)\n\n      // A crypto domain name\n      if (isValidEnsName(address) || isValidCryptoDomainName(address)) {\n        setResolutions((prev) => ({ ...prev, [rawVal]: '' }))\n\n        getAddressFromDomain(address)\n          .then((resolverAddr) => {\n            const formattedAddress = checksumAddress(resolverAddr)\n            setResolutions((prev) => ({ ...prev, [rawVal]: formattedAddress }))\n          })\n          .catch((err) => {\n            setResolutions((prev) => ({ ...prev, [rawVal]: undefined }))\n            logError(Errors._101, err.message)\n          })\n      } else {\n        // A regular address hash\n        if (!mustBeEthereumAddress(address)) {\n          const parsed = parsePrefixedAddress(address)\n          const checkedAddress = checksumAddress(parsed.address) || parsed.address\n\n          // Field mutator (parent component) always gets an unprefixed address\n          fieldMutator(checkedAddress)\n        }\n      }\n    },\n    [setCurrentInput, setResolutions, fieldMutator],\n  )\n\n  useEffect(() => {\n    if (resolvedAddress) {\n      onValueChange(resolvedAddress)\n    }\n  }, [resolvedAddress, onValueChange])\n\n  const adornment = isResolving\n    ? {\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <CircularProgress size=\"16px\" />\n          </InputAdornment>\n        ),\n      }\n    : inputAdornment\n\n  return (\n    <>\n      <Field\n        className={className}\n        component={TextField as any}\n        defaultValue={defaultValue}\n        disabled={disabled}\n        inputAdornment={adornment}\n        name={name}\n        placeholder={placeholder}\n        text={text}\n        spellCheck={false}\n        validate={allValidators}\n        inputProps={{\n          'data-testid': testId,\n        }}\n      />\n\n      <OnChange name={name}>{onValueChange}</OnChange>\n    </>\n  )\n}\n\nexport default AddressInput\n","import { ReactElement } from 'react'\nimport styled from 'styled-components'\nimport { ChainInfo } from '@gnosis.pm/safe-react-gateway-sdk'\n\nimport { getChainInfo } from 'src/config'\nimport { border, extraSmallFontSize, sm, xs, fontColor } from 'src/theme/variables'\n\ntype Props = {\n  networkInfo?: ChainInfo\n  onClick?: () => void\n  flexGrow?: boolean\n}\n\nfunction NetworkLabel({ networkInfo, onClick, flexGrow }: Props): ReactElement {\n  const selectedNetwork = networkInfo || getChainInfo()\n\n  return (\n    <StyledLabel onClick={onClick} flexGrow={flexGrow} {...selectedNetwork.theme}>\n      {selectedNetwork.chainName}\n    </StyledLabel>\n  )\n}\n\nexport default NetworkLabel\n\ntype StyledLabelTypes = {\n  backgroundColor: string\n  textColor: string\n  onClick?: () => void\n  flexGrow?: boolean\n}\n\nconst StyledLabel = styled.span<StyledLabelTypes>`\n  position: relative;\n  bottom: 2px;\n  line-height: normal;\n  display: inline-block;\n  min-width: 70px;\n  font-size: ${extraSmallFontSize};\n  padding: ${xs} ${sm};\n  background-color: ${({ backgroundColor }) => backgroundColor ?? border};\n  color: ${({ textColor }) => textColor ?? fontColor};\n  cursor: ${({ onClick }) => (onClick ? 'pointer' : 'inherit')};\n  text-align: center;\n  border-radius: 3px;\n  text-transform: capitalize;\n  flex-grow: ${({ flexGrow }) => (flexGrow ? 1 : 'initial')};\n`\n","import classNames from 'classnames/bind'\n\nimport styles from './index.module.scss'\n\nconst cx = classNames.bind(styles)\n\nconst Page = ({ align, children, overflow }: any) => (\n  <main className={cx(styles.page, align, { overflow })}>{children}</main>\n)\n\nexport default Page\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Page_page__G6hb0\",\"center\":\"Page_center__1dwJ9\",\"overflow\":\"Page_overflow__30EmX\"};","import { ReactElement } from 'react'\nimport StepperMUI from '@material-ui/core/Stepper'\nimport StepMUI from '@material-ui/core/Step'\nimport StepContent from '@material-ui/core/StepContent'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport Paper from '@material-ui/core/Paper'\nimport { makeStyles } from '@material-ui/core/'\n\nimport Hairline from 'src/components/layout/Hairline'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Row from 'src/components/layout/Row'\nimport { boldFont, lg, sm } from 'src/theme/variables'\nimport { StepperProvider, useStepper } from './stepperContext'\n\ntype StepperProps = {\n  children: ReactElement[]\n  onFinish?: () => void\n  disableNextButton?: boolean\n  nextButtonType?: string\n  testId?: string\n}\n\nfunction StepperComponent(): ReactElement {\n  const {\n    currentStep,\n    setCurrentStep,\n    steps,\n\n    onClickPreviousStep,\n    onClickNextStep,\n\n    disableNextButton,\n    nextButtonType,\n\n    testId,\n  } = useStepper()\n\n  return (\n    <StepperMUI data-testid={testId} activeStep={currentStep} orientation=\"vertical\">\n      {steps.map(function Step(step, index) {\n        const isFirstStep = index === 0\n        const isStepLabelClickable = currentStep > index\n        const classes = useStyles({ isStepLabelClickable })\n\n        function onClickLabel() {\n          if (isStepLabelClickable) {\n            setCurrentStep(index)\n          }\n        }\n\n        const currentComponent = steps[index]\n\n        const backButtonLabel = isFirstStep ? 'Cancel' : 'Back'\n        const customNextButtonLabel = currentComponent.props.nextButtonLabel\n\n        const nextButtonLabel = customNextButtonLabel || 'Next'\n\n        return (\n          <StepMUI key={step.props.label}>\n            <StepLabel onClick={onClickLabel} className={classes.stepLabel}>\n              {step.props.label}\n            </StepLabel>\n            <StepContent>\n              <Paper className={classes.root} elevation={1}>\n                {currentComponent}\n                <Hairline />\n                <Row align=\"center\" grow className={classes.controlStyle}>\n                  <Col center=\"xs\" xs={12}>\n                    <Button onClick={onClickPreviousStep} size=\"small\" className={classes.backButton} type=\"button\">\n                      {backButtonLabel}\n                    </Button>\n                    <Button\n                      onClick={onClickNextStep}\n                      color=\"primary\"\n                      type={nextButtonType || 'button'}\n                      disabled={disableNextButton || step.props.disableNextButton}\n                      size=\"small\"\n                      className={classes.nextButton}\n                      variant=\"contained\"\n                    >\n                      {nextButtonLabel}\n                    </Button>\n                  </Col>\n                </Row>\n              </Paper>\n            </StepContent>\n          </StepMUI>\n        )\n      })}\n    </StepperMUI>\n  )\n}\n\nexport default function Stepper(props: StepperProps): ReactElement {\n  return (\n    <StepperProvider stepsComponents={props.children} {...props}>\n      <StepperComponent />\n    </StepperProvider>\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: '10px 0 10px 10px',\n    maxWidth: '770px',\n    boxShadow: '0 0 10px 0 rgba(33,48,77,0.10)',\n  },\n  controlStyle: {\n    backgroundColor: 'white',\n    padding: lg,\n    borderRadius: sm,\n  },\n  backButton: {\n    marginRight: sm,\n    fontWeight: boldFont,\n    color: theme.palette.secondary.main,\n  },\n  nextButton: {\n    fontWeight: boldFont,\n  },\n  stepLabel: {\n    cursor: ({ isStepLabelClickable }: any) => (isStepLabelClickable ? 'pointer' : 'inherit'),\n  },\n}))\n\nexport type StepElementProps = {\n  label: string\n  children: JSX.Element\n  nextButtonLabel?: string\n  nextButtonType?: string\n  disableNextButton?: boolean\n}\n\nexport type StepElementType = (props: StepElementProps) => ReactElement\n\nexport function StepElement({ children }: StepElementProps): ReactElement {\n  return children\n}\n","import React, { JSXElementConstructor, ReactElement, useMemo, useState } from 'react'\nimport { useEffect } from 'react'\nimport { Form } from 'react-final-form'\nimport { Validator } from '../forms/validator'\nimport Stepper, { StepElement, StepElementType } from '../Stepper/Stepper'\nimport { useStepper } from '../Stepper/stepperContext'\n\ntype StepperFormProps = {\n  testId: string\n  onSubmit: (values) => void\n  initialValues?: any\n  children: (JSX.Element | false | null)[]\n}\n\nfunction StepperForm({ children, onSubmit, testId, initialValues }: StepperFormProps): ReactElement {\n  const [validate, setValidate] = useState<(values) => Validator>()\n  const [onSubmitForm, setOnSubmitForm] = useState<(values) => void>()\n  const steps = useMemo(\n    () =>\n      React.Children.toArray(children)\n        .filter(Boolean)\n        .map((step: ReactElement, index, list) => {\n          function ComponentStep() {\n            const { setCurrentStep } = useStepper()\n            useEffect(() => {\n              const isLastStep = index === list.length - 1\n              setValidate(() => step.props.validate)\n              if (isLastStep) {\n                setOnSubmitForm(() => (values) => onSubmit(values))\n              } else {\n                setOnSubmitForm(() => () => {\n                  setCurrentStep((step) => step + 1)\n                })\n              }\n            }, [setCurrentStep])\n            return step.props.children\n          }\n\n          return (\n            <StepElement key={step.props.label} nextButtonType={'submit'} {...step.props}>\n              <ComponentStep />\n            </StepElement>\n          )\n        }),\n    [children, onSubmit],\n  )\n  return (\n    <Form\n      onSubmit={(values) => onSubmitForm?.(values)}\n      initialValues={initialValues}\n      validate={(values) => validate?.(values)}\n    >\n      {({ handleSubmit, submitting }) => (\n        <form data-testid={testId} onSubmit={handleSubmit}>\n          <Stepper disableNextButton={submitting} nextButtonType={'submit'}>\n            {steps}\n          </Stepper>\n        </form>\n      )}\n    </Form>\n  )\n}\n\nexport default StepperForm\n\nexport type StepFormElementProps = {\n  label: string\n  validate?: (values) => Record<string, unknown> | Promise<Record<string, string>>\n  nextButtonLabel?: string\n  children: ReactElement<any, string | JSXElementConstructor<any>>\n  disableNextButton?: boolean\n}\nexport type StepFormElementType = (props: StepFormElementProps) => StepElementType[]\n\nexport function StepFormElement({ children }: StepFormElementProps): ReactElement {\n  return children\n}\n","import { useEffect, useState } from 'react'\n\nimport { getChainName } from 'src/config'\nimport { animalsDict, adjectivesDict } from './useMnemonicName.dict'\n\nconst animals: string[] = animalsDict.trim().split(/\\s+/)\nconst adjectives: string[] = adjectivesDict.trim().split(/\\s+/)\n\nconst getRandomItem = <T>(arr: T[]): T => {\n  return arr[Math.floor(arr.length * Math.random())]\n}\n\nexport const getRandomName = (noun = getRandomItem<string>(animals)): string => {\n  const adj = getRandomItem<string>(adjectives)\n  return `${adj}-${noun}`\n}\n\nexport const useMnemonicName = (noun?: string): string => {\n  const [name, setName] = useState<string>('')\n\n  useEffect(() => {\n    setName(getRandomName(noun))\n  }, [noun])\n\n  return name\n}\n\nexport const useMnemonicSafeName = (): string => {\n  const networkName = getChainName().toLowerCase()\n  return useMnemonicName(`${networkName}-safe`)\n}\n","/**\n * The word lists are from https://github.com/mmkal/ts/tree/main/packages/memorable-moniker/src/dict\n */\nexport const animalsDict = `\naardvark\nalbatross\nalligator\nalpaca\nant\nanteater\nantelope\nape\narmadillo\nbaboon\nbadger\nbarracuda\nbat\nbear\nbeaver\nbee\nbinturong\nbird\nbison\nbluebird\nboar\nbobcat\nbuffalo\nbutterfly\ncamel\ncapybara\ncaracal\ncaribou\ncassowary\ncat\ncaterpillar\ncattle\nchameleon\nchamois\ncheetah\nchicken\nchimpanzee\nchinchilla\nchough\ncoati\ncobra\ncockroach\ncod\ncormorant\ncougar\ncoyote\ncrab\ncrane\ncricket\ncrocodile\ncrow\ncuckoo\ncurlew\ndeer\ndegu\ndhole\ndingo\ndinosaur\ndog\ndogfish\ndolphin\ndonkey\ndotterel\ndove\ndragonfly\nduck\ndugong\ndunlin\neagle\nechidna\neel\neland\nelephant\nelk\nemu\nfalcon\nferret\nfinch\nfish\nflamingo\nfly\nfox\nfrog\ngaur\ngazelle\ngecko\ngerbil\ngiraffe\ngnat\ngnu\ngoat\ngoldfinch\ngoosander\ngoose\ngorilla\ngoshawk\ngrasshopper\ngrouse\nguanaco\nguinea-pig\ngull\nhamster\nhare\nhawk\nhedgehog\nheron\nherring\nhippopotamus\nhoatzin\nhoopoe\nhornet\nhorse\nhuman\nhummingbird\nhyena\nibex\nibis\niguana\nimpala\njackal\njaguar\njay\njellyfish\njerboa\nkangaroo\nkingfisher\nkinkajou\nkoala\nkomodo-dragon\nkookaburra\nkouprey\nkudu\nlapwing\nlark\nlemur\nleopard\nlion\nlizard\nllama\nlobster\nlocust\nloris\nlouse\nlynx\nlyrebird\nmacaque\nmacaw\nmagpie\nmallard\nmammoth\nmanatee\nmandrill\nmarmoset\nmarmot\nmeerkat\nmink\nmole\nmongoose\nmonkey\nmoose\nmosquito\nmouse\nmyna\nnarwhal\nnewt\nnightingale\noctopus\nokapi\nopossum\norangutan\noryx\nostrich\notter\nowl\noyster\npanther\nparrot\npanda\npartridge\npeafowl\npelican\npenguin\npheasant\npig\npigeon\npika\npolar-bear\npony\nporcupine\nporpoise\npug\nquail\nquelea\nquetzal\nrabbit\nraccoon\nram\nrat\nraven\nred-deer\nred-panda\nreindeer\nrhea\nrhinoceros\nrook\nsalamander\nsalmon\nsand-dollar\nsandpiper\nsardine\nsea-lion\nseahorse\nseal\nshark\nsheep\nshrew\nsiamang\nskunk\nsloth\nsnail\nsnake\nspider\nsquid\nsquirrel\nstarling\nstegosaurus\nswan\ntamarin\ntapir\ntarsier\ntermite\ntiger\ntoad\ntoucan\nturaco\nturkey\nturtle\numbrellabird\nvinegaroon\nviper\nvulture\nwallaby\nwalrus\nwasp\nwaxwing\nweasel\nwhale\nwobbegong\nwolf\nwolverine\nwombat\nwoodpecker\nworm\nwren\nyak\nzebra\n`\n\nexport const adjectivesDict = `\nadmirable\nenergetic\nlucky\naffable\nenjoyable\nmagnificent\naffectionate\nenthusiastic\nmarvelous\nagreeable\neuphoric\nmeritorious\namazing\nexcellent\nmerry\namiable\nexceptional\nmild-mannered\namused\nexcited\nnice\namusing\nextraordinary\nnoble\nanimated\nexultant\noutstanding\nappreciative\nfabulous\noverjoyed\nastonishing\nfaithful\npassionate\nauthentic\nfantastic\npeaceful\nbelievable\nfervent\nplacid\nbenevolent\nfortunate\npleasant\nblissful\nfriendly\npleasing\nbouncy\nfun\npleasurable\nbrilliant\ngenuine\npositive\nbubbly\nglad\npraiseworthy\nbuoyant\nglorious\nprominent\ncalm\ngood\nproud\ncharming\ngood-humored\nrelaxed\ncheerful\ngood-natured\nreliable\ncheery\ngracious\nrespectable\nclever\ngrateful\nsharp\ncomfortable\ngreat\nsincere\ncomical\nhappy\nspirited\ncommendable\nheartfelt\nsplendid\nconfident\nhonest\nsuperb\ncongenial\nhonorable\nsuperior\ncontent\nhopeful\nterrific\ncordial\nhumorous\nthankful\ncourteous\nincredible\ntremendous\ndedicated\ninspirational\ntriumphant\ndelighted\njolly\ntrustworthy\ndelightful\njovial\ntrusty\ndependable\njoyful\ntruthful\ndevoted\njoyous\nuplifting\ndocile\njubilant\nvictorious\ndynamic\nkeen\nvigorous\neager\nkind\nvirtuous\nearnest\nlaudable\nvivacious\neasygoing\nlaughing\nwhimsical\nebullient\nlikable\nwitty\necstatic\nlively\nwonderful\nelated\nlovely\nworthy\nemphatic\nloving\nzealous\nenchanting\nloyal\nzestful\n`\n","export const FIELD_CREATE_CUSTOM_SAFE_NAME = 'customSafeName'\nexport const FIELD_CREATE_SUGGESTED_SAFE_NAME = 'suggestedSafeName'\nexport const FIELD_SAFE_OWNERS_LIST = 'owners'\nexport const FIELD_SAFE_OWNER_ENS_LIST = 'safeOwnerENSList'\nexport const FIELD_NEW_SAFE_THRESHOLD = 'newSafeThreshold'\nexport const FIELD_MAX_OWNER_NUMBER = 'maxOwnerNumber'\nexport const FIELD_NEW_SAFE_PROXY_SALT = 'safeCreationSalt'\nexport const FIELD_NEW_SAFE_GAS_LIMIT = 'gasLimit'\nexport const FIELD_NEW_SAFE_GAS_PRICE = 'gasPrice'\nexport const FIELD_NEW_SAFE_CREATION_TX_HASH = 'safeCreationTxHash'\nexport const FIELD_CUSTOMER_ACCOUNT = 'customerAccount'\nexport const FIELD_HSBC_SAFE_OWNERS_LIST = 'hsbcOwners'\nexport const FIELD_HSBC_SAFE_OWNER_ENS_LIST = 'hsbcSafeOwnerENSList'\n\nexport type OwnerFieldItem = {\n  nameFieldName: string\n  addressFieldName: string\n}\n\nexport type HsbcOwnerFieldItem = {\n  hsbcNameFieldName: string\n  hsbcAddressFieldName: string\n}\n\nexport type CreateSafeFormValues = {\n  [FIELD_CREATE_SUGGESTED_SAFE_NAME]: string\n  [FIELD_CREATE_CUSTOM_SAFE_NAME]?: string\n  [FIELD_NEW_SAFE_THRESHOLD]: number\n  [FIELD_SAFE_OWNERS_LIST]: Array<OwnerFieldItem>\n  [FIELD_SAFE_OWNER_ENS_LIST]: Record<string, string>\n  [FIELD_MAX_OWNER_NUMBER]: number\n  [FIELD_NEW_SAFE_PROXY_SALT]: number\n  [FIELD_NEW_SAFE_GAS_LIMIT]: number\n  [FIELD_NEW_SAFE_GAS_PRICE]: string\n  [FIELD_NEW_SAFE_CREATION_TX_HASH]?: string\n  [FIELD_CUSTOMER_ACCOUNT]: string\n  [FIELD_HSBC_SAFE_OWNERS_LIST]: Array<HsbcOwnerFieldItem>\n  [FIELD_HSBC_SAFE_OWNER_ENS_LIST]: Record<string, string>\n}\n\nexport const SAFE_PENDING_CREATION_STORAGE_KEY = 'NEW_SAFE_PENDING_CREATION_STORAGE_KEY'\n","import { ReactElement, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useForm } from 'react-final-form'\nimport styled from 'styled-components'\n\nimport Block from 'src/components/layout/Block'\nimport { lg, secondary } from 'src/theme/variables'\nimport Col from 'src/components/layout/Col'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Field from 'src/components/forms/Field'\nimport TextField from 'src/components/forms/TextField'\nimport { providerNameSelector } from 'src/logic/wallets/store/selectors'\nimport {\n  FIELD_CREATE_CUSTOM_SAFE_NAME,\n  FIELD_CREATE_SUGGESTED_SAFE_NAME,\n  FIELD_SAFE_OWNER_ENS_LIST,\n  FIELD_SAFE_OWNERS_LIST,\n  FIELD_CUSTOMER_ACCOUNT,\n} from '../fields/createSafeFields'\nimport { useStepper } from 'src/components/Stepper/stepperContext'\nimport NetworkLabel from 'src/components/NetworkLabel/NetworkLabel'\nimport { removeTld, reverseENSLookup } from 'src/logic/wallets/getWeb3'\nimport { STUB_HSBC_CUSTOMERS } from '../../../stubs/CreateSafePageStubs'\n\nexport const nameNewSafeStepLabel = 'Name'\n\nfunction NameNewSafeStep(): ReactElement {\n  const [ownersWithENSName, setOwnersWithENSName] = useState<Record<string, string>>({})\n  const provider = useSelector(providerNameSelector)\n\n  const { setCurrentStep } = useStepper()\n\n  useEffect(() => {\n    if (!provider) {\n      setCurrentStep(0)\n    }\n  }, [provider, setCurrentStep])\n\n  const createNewSafeForm = useForm()\n  const formValues = createNewSafeForm.getState().values\n\n  useEffect(() => {\n    const getInitialOwnerENSNames = async () => {\n      const formValues = createNewSafeForm.getState().values\n      const owners = formValues[FIELD_SAFE_OWNERS_LIST]\n      const ownersWithENSName = await Promise.all(\n        owners.map(async ({ addressFieldName }) => {\n          const address = formValues[addressFieldName]\n          const ensName = await reverseENSLookup(address)\n          const ensDomain = removeTld(ensName)\n          return {\n            address,\n            name: ensDomain,\n          }\n        }),\n      )\n\n      const ownersWithENSNameRecord = ownersWithENSName.reduce<Record<string, string>>((acc, { address, name }) => {\n        return {\n          ...acc,\n          [address]: name,\n        }\n      }, {})\n\n      setOwnersWithENSName(ownersWithENSNameRecord)\n    }\n    getInitialOwnerENSNames()\n  }, [createNewSafeForm])\n\n  useEffect(() => {\n    if (ownersWithENSName) {\n      createNewSafeForm.change(FIELD_SAFE_OWNER_ENS_LIST, ownersWithENSName)\n    }\n  }, [ownersWithENSName, createNewSafeForm])\n\n  return (\n    <BlockWithPadding data-testid={'create-safe-name-step'}>\n      <label htmlFor={FIELD_CUSTOMER_ACCOUNT}>Customer account number</label>\n      <FieldContainer margin=\"lg\">\n        <Col xs={11}>\n          <Field\n            component={TextField}\n            name={FIELD_CUSTOMER_ACCOUNT}\n            placeholder=\"000-000000-000\"\n            text=\"Account Number\"\n            type=\"text\"\n            testId=\"customer-account\"\n          />\n        </Col>\n      </FieldContainer>\n      <label htmlFor={FIELD_CREATE_CUSTOM_SAFE_NAME}>Name of the new Safe</label>\n      <FieldContainer margin=\"lg\">\n        <Col xs={11}>\n          <Field\n            component={TextField}\n            name={FIELD_CREATE_CUSTOM_SAFE_NAME}\n            placeholder=\"Customer name\"\n            text=\"Safe name\"\n            type=\"text\"\n            testId=\"create-safe-name-field\"\n          />\n        </Col>\n      </FieldContainer>\n      <Block margin=\"lg\">\n        <Paragraph color=\"primary\" noMargin size=\"lg\">\n          By continuing you consent with the{' '}\n          <Link href=\"https://gnosis-safe.io/terms\" rel=\"noopener noreferrer\" target=\"_blank\">\n            terms of use\n          </Link>{' '}\n          and{' '}\n          <Link href=\"https://gnosis-safe.io/privacy\" rel=\"noopener noreferrer\" target=\"_blank\">\n            privacy policy\n          </Link>\n          . Most importantly, you confirm that your funds are held securely in the Gnosis Safe, a smart contract on the\n          Ethereum blockchain. These funds cannot be accessed by Gnosis at any point.\n        </Paragraph>\n      </Block>\n    </BlockWithPadding>\n  )\n}\n\nexport default NameNewSafeStep\n\nconst BlockWithPadding = styled(Block)`\n  padding: ${lg};\n`\n\nconst FieldContainer = styled(Block)`\n  display: flex;\n  max-width: 480px;\n  margin-top: 12px;\n`\n\nconst Link = styled.a`\n  color: ${secondary};\n`\n","import { useEffect, ReactElement, Fragment } from 'react'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport CheckCircle from '@material-ui/icons/CheckCircle'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { Icon, Link, Text } from '@gnosis.pm/safe-react-components'\nimport { useForm } from 'react-final-form'\n\nimport Block from 'src/components/layout/Block'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport AddressInput from 'src/components/forms/AddressInput'\nimport Button from 'src/components/layout/Button'\nimport Field from 'src/components/forms/Field'\nimport ButtonHelper from 'src/components/ButtonHelper'\nimport SelectField from 'src/components/forms/SelectField'\nimport { useStepper } from 'src/components/Stepper/stepperContext'\nimport { providerNameSelector } from 'src/logic/wallets/store/selectors'\nimport { disabled, extraSmallFontSize, lg, sm, xs } from 'src/theme/variables'\nimport Hairline from 'src/components/layout/Hairline'\nimport Row from 'src/components/layout/Row'\nimport Col from 'src/components/layout/Col'\nimport TextField from 'src/components/forms/TextField'\nimport {\n  ADDRESS_REPEATED_ERROR,\n  composeValidators,\n  minMaxLength,\n  minValue,\n  required,\n  THRESHOLD_ERROR,\n} from 'src/components/forms/validator'\nimport {\n  FIELD_MAX_OWNER_NUMBER,\n  FIELD_NEW_SAFE_THRESHOLD,\n  FIELD_SAFE_OWNER_ENS_LIST,\n  FIELD_SAFE_OWNERS_LIST,\n  FIELD_HSBC_SAFE_OWNERS_LIST,\n  FIELD_HSBC_SAFE_OWNER_ENS_LIST,\n} from '../fields/createSafeFields'\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\nimport { currentNetworkAddressBookAsMap } from 'src/logic/addressBook/store/selectors'\nimport NetworkLabel from 'src/components/NetworkLabel/NetworkLabel'\nimport { removeTld, reverseENSLookup } from 'src/logic/wallets/getWeb3'\n\nexport const ownersAndConfirmationsNewSafeStepLabel = 'Owners and Confirmations'\n\nfunction OwnersAndConfirmationsNewSafeStep(): ReactElement {\n  const provider = useSelector(providerNameSelector)\n  const { setCurrentStep } = useStepper()\n\n  useEffect(() => {\n    if (!provider) {\n      setCurrentStep(0)\n    }\n  }, [provider, setCurrentStep])\n\n  const createSafeForm = useForm()\n  const addressBook = useSelector(currentNetworkAddressBookAsMap)\n\n  const createSafeFormValues = createSafeForm.getState().values\n  const formErrors = createSafeForm.getState().errors || {}\n\n  const owners = createSafeFormValues[FIELD_SAFE_OWNERS_LIST]\n  const ownersWithENSName = createSafeFormValues[FIELD_SAFE_OWNER_ENS_LIST]\n  const hsbcOwners = createSafeFormValues[FIELD_HSBC_SAFE_OWNERS_LIST]\n  const hsbcSafeOwnerENSList = createSafeFormValues[FIELD_HSBC_SAFE_OWNER_ENS_LIST]\n  const threshold = createSafeFormValues[FIELD_NEW_SAFE_THRESHOLD]\n  const maxOwnerNumber = createSafeFormValues[FIELD_MAX_OWNER_NUMBER]\n\n  function onClickAddNewOwner() {\n    const newEmptyOwner = {\n      nameFieldName: `owner-name-${maxOwnerNumber}`,\n      addressFieldName: `owner-address-${maxOwnerNumber}`,\n    }\n    createSafeForm.change(FIELD_SAFE_OWNERS_LIST, [...owners, newEmptyOwner])\n    const updatedMaxOwnerNumbers = maxOwnerNumber + 1\n    createSafeForm.change(FIELD_MAX_OWNER_NUMBER, updatedMaxOwnerNumbers)\n  }\n\n  function onClickRemoveOwner({ addressFieldName }) {\n    const ownersUpdated = owners.filter((owner) => owner.addressFieldName !== addressFieldName)\n    createSafeForm.change(FIELD_SAFE_OWNERS_LIST, ownersUpdated)\n    createSafeForm.change(addressFieldName, undefined)\n\n    const updatedMaxOwnerNumbers = maxOwnerNumber - 1\n    createSafeForm.change(FIELD_MAX_OWNER_NUMBER, updatedMaxOwnerNumbers)\n\n    // Updated Threshold validation to include hsbc wallets\n    const hasToUpdateThreshold = threshold > ownersUpdated.length + hsbcOwners.length\n    if (hasToUpdateThreshold) {\n      createSafeForm.change(FIELD_NEW_SAFE_THRESHOLD, threshold - 1)\n    }\n  }\n\n  const getENSName = async (address: string): Promise<void> => {\n    const ensName = await reverseENSLookup(address)\n    const ensDomain = removeTld(ensName)\n    const newOwnersWithENSName: Record<string, string> = Object.assign(ownersWithENSName, {\n      [address]: ensDomain,\n    })\n    createSafeForm.change(FIELD_SAFE_OWNER_ENS_LIST, newOwnersWithENSName)\n  }\n\n  return (\n    <>\n      <Block margin=\"md\" padding=\"md\">\n        <RowHeader>\n          {hsbcOwners.map(({ hsbcNameFieldName, hsbcAddressFieldName }) => {\n            const hasOwnerAddressError = formErrors[hsbcAddressFieldName]\n            const hsbcOwnerAddress = createSafeFormValues[hsbcAddressFieldName]\n            const hsbcOwnerName = hsbcSafeOwnerENSList[hsbcOwnerAddress] || 'HSBC Owner'\n\n            const handleScan = async (address: string, closeQrModal: () => void): Promise<void> => {\n              await getENSName(address)\n              createSafeForm.change(hsbcAddressFieldName, address)\n              closeQrModal()\n            }\n\n            return (\n              <Fragment key={hsbcAddressFieldName}>\n                <ParagraphWithMargin color=\"primary\" noMargin size=\"lg\">\n                  {createSafeFormValues[hsbcNameFieldName]}\n                </ParagraphWithMargin>\n                <Col xs={12}>\n                  <AddressInput\n                    fieldMutator={async (address) => {\n                      createSafeForm.change(hsbcAddressFieldName, address)\n                    }}\n                    inputAdornment={\n                      !hasOwnerAddressError && {\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <CheckIconAddressAdornment data-testid={`${hsbcAddressFieldName}-valid-adornment`} />\n                          </InputAdornment>\n                        ),\n                      }\n                    }\n                    name={hsbcAddressFieldName}\n                    placeholder=\"Owner Address*\"\n                    text=\"Owner Address\"\n                    testId={hsbcAddressFieldName}\n                    disabled={true}\n                  />\n                </Col>\n              </Fragment>\n            )\n          })}\n        </RowHeader>\n      </Block>\n      <Hairline />\n      <RowHeader>\n        <Col xs={3}>NAME</Col>\n        <Col xs={7}>ADDRESS</Col>\n      </RowHeader>\n      <Hairline />\n      <Block margin=\"md\" padding=\"md\">\n        <RowHeader>\n          {owners.map(({ nameFieldName, addressFieldName }) => {\n            const hasOwnerAddressError = formErrors[addressFieldName]\n            const ownerAddress = createSafeFormValues[addressFieldName]\n            const showDeleteIcon = addressFieldName !== 'owner-address-0' // we hide de delete icon for the first owner\n            const ownerName = ownersWithENSName[ownerAddress] || 'Owner Name'\n\n            const handleScan = async (address: string, closeQrModal: () => void): Promise<void> => {\n              await getENSName(address)\n              createSafeForm.change(addressFieldName, address)\n              closeQrModal()\n            }\n\n            return (\n              <Fragment key={addressFieldName}>\n                <Col xs={3}>\n                  <OwnerNameField\n                    component={TextField}\n                    name={nameFieldName}\n                    placeholder={ownerName}\n                    text=\"Owner Name\"\n                    type=\"text\"\n                    validate={minMaxLength(0, 50)}\n                    testId={nameFieldName}\n                  />\n                </Col>\n                <Col xs={7}>\n                  <AddressInput\n                    fieldMutator={async (address) => {\n                      await getENSName(address)\n                      createSafeForm.change(addressFieldName, address)\n                      const addressName = addressBook[address]?.name\n                      if (addressName) {\n                        createSafeForm.change(nameFieldName, addressName)\n                      }\n                    }}\n                    inputAdornment={\n                      !hasOwnerAddressError && {\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <CheckIconAddressAdornment data-testid={`${addressFieldName}-valid-adornment`} />\n                          </InputAdornment>\n                        ),\n                      }\n                    }\n                    name={addressFieldName}\n                    placeholder=\"Owner Address*\"\n                    text=\"Owner Address\"\n                    testId={addressFieldName}\n                  />\n                </Col>\n                <OwnersIconsContainer xs={1} center=\"xs\" middle=\"xs\">\n                  <ScanQRWrapper handleScan={handleScan} testId={`${addressFieldName}-scan-QR`} />\n                </OwnersIconsContainer>\n                {showDeleteIcon && (\n                  <OwnersIconsContainer xs={1} center=\"xs\" middle=\"xs\">\n                    <ButtonHelper\n                      onClick={() => onClickRemoveOwner({ addressFieldName })}\n                      dataTestId={`${addressFieldName}-remove-button`}\n                    >\n                      <Icon size=\"sm\" type=\"delete\" color=\"icon\" tooltip=\"Delete Owner\" />\n                    </ButtonHelper>\n                  </OwnersIconsContainer>\n                )}\n              </Fragment>\n            )\n          })}\n        </RowHeader>\n        <OwnerContainer align=\"center\" grow>\n          <Button color=\"secondary\" data-testid=\"add-new-owner\" onClick={onClickAddNewOwner}>\n            <Paragraph noMargin size=\"lg\">\n              + Add another owner\n            </Paragraph>\n          </Button>\n        </OwnerContainer>\n        <BlockWithPadding>\n          <Block>\n            <Paragraph>Any transaction requires the confirmation of:</Paragraph>\n          </Block>\n          <OwnerContainer align=\"center\" grow>\n            <Col xs={1}>\n              <Field\n                component={SelectField}\n                data-testid=\"threshold-selector-input\"\n                name={FIELD_NEW_SAFE_THRESHOLD}\n                validate={composeValidators(required, minValue(2))}\n              >\n                {[...owners, ...hsbcOwners].map((_, option) => (\n                  <MenuItem\n                    key={`threshold-selector-option-${option}`}\n                    value={option + 1}\n                    data-testid={`threshold-selector-option-${option + 1}`}\n                  >\n                    {option + 1}\n                  </MenuItem>\n                ))}\n              </Field>\n            </Col>\n            <Col xs={11}>\n              <StyledParagraph noMargin>out of {owners.length + hsbcOwners.length} owner(s)</StyledParagraph>\n            </Col>\n          </OwnerContainer>\n        </BlockWithPadding>\n      </Block>\n    </>\n  )\n}\n\nexport default OwnersAndConfirmationsNewSafeStep\n\nexport const ownersAndConfirmationsNewSafeStepValidations = (values: {\n  [FIELD_SAFE_OWNERS_LIST]: Array<Record<string, string>>\n  [FIELD_NEW_SAFE_THRESHOLD]: number\n}): Record<string, string> => {\n  const errors = {}\n\n  const owners = values[FIELD_SAFE_OWNERS_LIST]\n  const hsbcOwners = values[FIELD_HSBC_SAFE_OWNERS_LIST]\n  const threshold = values[FIELD_NEW_SAFE_THRESHOLD]\n  const addresses = owners.map(({ addressFieldName }) => values[addressFieldName])\n\n  // we check repeated addresses\n  owners.forEach(({ addressFieldName }, index) => {\n    const address = values[addressFieldName]\n    const previousOwners = addresses.slice(0, index)\n    const isRepeated = previousOwners.includes(address)\n    if (isRepeated) {\n      errors[addressFieldName] = ADDRESS_REPEATED_ERROR\n    }\n  })\n\n  const isValidThreshold = !!threshold && threshold <= owners.length + hsbcOwners.length\n  if (!isValidThreshold) {\n    errors[FIELD_NEW_SAFE_THRESHOLD] = THRESHOLD_ERROR\n  }\n\n  return errors\n}\n\nconst BlockWithPadding = styled(Block)`\n  padding: ${lg};\n`\n\nconst ParagraphWithMargin = styled(Paragraph)`\n  margin-bottom: 12px;\n`\n\nconst StyledLink = styled(Link)`\n  padding: 0 ${xs};\n  & svg {\n    position: relative;\n    top: 1px;\n    left: ${xs};\n    height: 14px;\n    width: 14px;\n  }\n`\nconst RowHeader = styled(Row)`\n  padding: ${sm} ${lg};\n  font-size: ${extraSmallFontSize};\n  color: ${disabled};\n`\n\nconst OwnerNameField = styled(Field)`\n  margin-right: ${sm};\n  margin-bottom: ${sm};\n`\nconst CheckIconAddressAdornment = styled(CheckCircle)`\n  color: #03ae60;\n  height: 20px;\n`\n\nconst OwnersIconsContainer = styled(Col)`\n  height: 56px;\n  max-width: 32px;\n  cursor: pointer;\n`\n\nconst OwnerContainer = styled(Row)`\n  justify-content: center;\n`\n\nconst StyledParagraph = styled(Paragraph)`\n  padding-left: 12px;\n`\n","import { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { estimateGasForDeployingSafe } from 'src/logic/contracts/safeContracts'\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\n\nimport { calculateGasPrice } from 'src/logic/wallets/ethTransactions'\nimport { userAccountSelector } from '../wallets/store/selectors'\nimport { getNativeCurrency } from 'src/config'\n\ntype EstimateSafeCreationGasProps = {\n  addresses: string[]\n  numOwners: number\n  safeCreationSalt: number\n}\n\ntype SafeCreationEstimationResult = {\n  gasEstimation: number // Amount of gas needed for execute or approve the transaction\n  gasCostFormatted: string // Cost of gas in format '< | > 100'\n  gasLimit: number // Minimum gas requited to execute the Tx\n  gasPrice: string\n}\n\nconst estimateGas = async (\n  userAccount: string,\n  numOwners: number,\n  safeCreationSalt: number,\n  addresses: string[],\n): Promise<SafeCreationEstimationResult> => {\n  const [gasEstimation, gasPrice] = await Promise.all([\n    estimateGasForDeployingSafe(addresses, numOwners, userAccount, safeCreationSalt),\n    calculateGasPrice(),\n  ])\n  const estimatedGasCosts = gasEstimation * parseInt(gasPrice, 10)\n  const nativeCurrency = getNativeCurrency()\n  const gasCost = fromTokenUnit(estimatedGasCosts, nativeCurrency.decimals)\n  const gasCostFormatted = formatAmount(gasCost)\n\n  return {\n    gasPrice,\n    gasEstimation,\n    gasCostFormatted,\n    gasLimit: gasEstimation,\n  }\n}\n\nexport const useEstimateSafeCreationGas = ({\n  addresses,\n  numOwners,\n  safeCreationSalt,\n}: EstimateSafeCreationGasProps): SafeCreationEstimationResult => {\n  const [gasEstimation, setGasEstimation] = useState<SafeCreationEstimationResult>({\n    gasEstimation: 0,\n    gasCostFormatted: '< 0.001',\n    gasLimit: 0,\n    gasPrice: '0',\n  })\n  const userAccount = useSelector(userAccountSelector)\n  // Serialize the addresses array so that it doesn't trigger the effect due to the dependencies\n  const addressesSerialized = JSON.stringify(addresses)\n\n  useEffect(() => {\n    const addressesList = JSON.parse(addressesSerialized)\n    if (!addressesList.length || !numOwners || !userAccount) {\n      return\n    }\n\n    estimateGas(userAccount, numOwners, safeCreationSalt, addressesList)?.then(setGasEstimation)\n  }, [numOwners, safeCreationSalt, addressesSerialized, userAccount])\n\n  return gasEstimation\n}\n","import React, { ReactElement, useEffect } from 'react'\nimport { useForm } from 'react-final-form'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport TableContainer from '@material-ui/core/TableContainer'\n\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { background, border, lg, sm } from 'src/theme/variables'\nimport {\n  FIELD_CREATE_CUSTOM_SAFE_NAME,\n  FIELD_CREATE_SUGGESTED_SAFE_NAME,\n  FIELD_NEW_SAFE_GAS_LIMIT,\n  FIELD_NEW_SAFE_GAS_PRICE,\n  FIELD_NEW_SAFE_PROXY_SALT,\n  FIELD_NEW_SAFE_THRESHOLD,\n  FIELD_SAFE_OWNER_ENS_LIST,\n  FIELD_SAFE_OWNERS_LIST,\n  FIELD_HSBC_SAFE_OWNERS_LIST,\n} from '../fields/createSafeFields'\nimport { getExplorerInfo, getNativeCurrency } from 'src/config'\nimport { useEstimateSafeCreationGas } from 'src/logic/hooks/useEstimateSafeCreationGas'\nimport NetworkLabel from 'src/components/NetworkLabel/NetworkLabel'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { useStepper } from 'src/components/Stepper/stepperContext'\nimport { providerNameSelector } from 'src/logic/wallets/store/selectors'\n\nexport const reviewNewSafeStepLabel = 'Review'\n\nfunction ReviewNewSafeStep(): ReactElement | null {\n  const provider = useSelector(providerNameSelector)\n\n  const { setCurrentStep } = useStepper()\n\n  useEffect(() => {\n    if (!provider) {\n      setCurrentStep(0)\n    }\n  }, [provider, setCurrentStep])\n\n  const createSafeForm = useForm()\n  const createSafeFormValues = createSafeForm.getState().values\n\n  const defaultSafeValue = createSafeFormValues[FIELD_CREATE_SUGGESTED_SAFE_NAME]\n  const safeName = createSafeFormValues[FIELD_CREATE_CUSTOM_SAFE_NAME] || defaultSafeValue\n  const threshold = createSafeFormValues[FIELD_NEW_SAFE_THRESHOLD]\n  const owners = createSafeFormValues[FIELD_SAFE_OWNERS_LIST]\n  const hsbcOwners = createSafeFormValues[FIELD_HSBC_SAFE_OWNERS_LIST]\n  const ownersWithENSName = createSafeFormValues[FIELD_SAFE_OWNER_ENS_LIST]\n  const numberOfOwners = owners.length\n  const totalOwners = owners.length + hsbcOwners.length\n  const safeCreationSalt = createSafeFormValues[FIELD_NEW_SAFE_PROXY_SALT]\n  const ownerAddresses = owners.map(({ addressFieldName }) => createSafeFormValues[addressFieldName])\n  const hsbcOwnerAddresses = hsbcOwners.map(({ addressFieldName }) => createSafeFormValues[addressFieldName])\n  const { gasCostFormatted, gasLimit, gasPrice } = useEstimateSafeCreationGas({\n    addresses: ownerAddresses,\n    numOwners: numberOfOwners,\n    safeCreationSalt,\n  })\n  const nativeCurrency = getNativeCurrency()\n\n  useEffect(() => {\n    createSafeForm.change(FIELD_NEW_SAFE_GAS_LIMIT, gasLimit)\n    createSafeForm.change(FIELD_NEW_SAFE_GAS_PRICE, gasPrice)\n  }, [gasLimit, gasPrice, createSafeForm])\n\n  return (\n    <Row data-testid={'create-safe-review-step'}>\n      <Col xs={4} layout=\"column\">\n        <DetailsContainer>\n          <Block margin=\"lg\">\n            <Paragraph color=\"primary\" noMargin size=\"lg\">\n              Details\n            </Paragraph>\n          </Block>\n          <Block margin=\"lg\">\n            <Paragraph color=\"disabled\" noMargin size=\"sm\">\n              Name of new Safe\n            </Paragraph>\n            <SafeNameParagraph\n              color=\"primary\"\n              noMargin\n              size=\"md\"\n              weight=\"bolder\"\n              data-testid=\"create-safe-review-safe-name\"\n            >\n              {safeName}\n            </SafeNameParagraph>\n          </Block>\n          <Block margin=\"lg\">\n            <Paragraph color=\"disabled\" noMargin size=\"sm\">\n              Any transaction requires the confirmation of:\n            </Paragraph>\n            <Paragraph\n              color=\"primary\"\n              noMargin\n              size=\"md\"\n              weight=\"bolder\"\n              data-testid={'create-safe-review-threshold-label'}\n            >\n              {`${threshold} out of ${totalOwners} owners`}\n            </Paragraph>\n          </Block>\n        </DetailsContainer>\n      </Col>\n      <Col layout=\"column\" xs={8}>\n        <TableContainer>\n          <TitleContainer>\n            <Paragraph color=\"primary\" noMargin size=\"lg\">\n              {`${numberOfOwners} Customer safe owners`}\n            </Paragraph>\n          </TitleContainer>\n          <Hairline />\n          {owners.map(({ nameFieldName, addressFieldName }) => {\n            const ownerAddress = createSafeFormValues[addressFieldName]\n            const ownerName = createSafeFormValues[nameFieldName] || ownersWithENSName[ownerAddress]\n            return (\n              <React.Fragment key={`owner-${addressFieldName}`}>\n                <OwnersAddressesContainer>\n                  <Col align=\"center\" xs={12} data-testid={`create-safe-owner-details-${ownerAddress}`}>\n                    <PrefixedEthHashInfo\n                      hash={ownerAddress}\n                      name={ownerName}\n                      showAvatar\n                      showCopyBtn\n                      explorerUrl={getExplorerInfo(ownerAddress)}\n                    />\n                  </Col>\n                </OwnersAddressesContainer>\n                <Hairline />\n              </React.Fragment>\n            )\n          })}\n        </TableContainer>\n      </Col>\n      <DescriptionContainer align=\"center\">\n        <Paragraph color=\"primary\" noMargin size=\"lg\">\n          You&apos;re about to create a new Safe on <NetworkLabel /> and will have to confirm a transaction with your\n          currently connected wallet. The creation will cost approximately {gasCostFormatted} {nativeCurrency.symbol}.\n          The exact amount will be determined by your wallet.\n        </Paragraph>\n      </DescriptionContainer>\n    </Row>\n  )\n}\n\nexport default ReviewNewSafeStep\n\nconst DetailsContainer = styled(Block)`\n  padding: ${lg};\n  border-right: solid 1px ${border};\n  height: 100%;\n`\n\nconst SafeNameParagraph = styled(Paragraph)`\n  text-overflow: ellipsis;\n  overflow: hidden;\n`\nconst TitleContainer = styled(Block)`\n  padding: ${lg};\n`\n\nconst OwnersAddressesContainer = styled(Row)`\n  align-items: center;\n  min-width: fit-content;\n  padding: ${sm};\n  padding-left: ${lg};\n`\nconst DescriptionContainer = styled(Row)`\n  background-color: ${background};\n  padding: ${lg};\n  text-align: center;\n`\n","import { Transaction, TransactionReceipt } from 'web3-core'\n\nimport { getWeb3ReadOnly } from 'src/logic/wallets/getWeb3'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { sameString } from 'src/utils/strings'\nimport { CodedException, Errors } from 'src/logic/exceptions/CodedException'\n\ntype TxMonitorProps = {\n  sender: string\n  hash: string\n  data: string\n  nonce?: number\n  gasPrice?: string\n}\n\ntype TxMonitorOptions = {\n  delay?: number\n  maxRetries?: number\n}\n\nconst MAX_RETRIES = 720\nconst DEFAULT_DELAY = 5000\n\nasync function findSpeedupTx({ sender, hash, nonce, data }: TxMonitorProps): Promise<Transaction | undefined> {\n  const web3 = getWeb3ReadOnly()\n  const latestBlock = await web3.eth.getBlock('latest', true)\n\n  const replacementTransaction = latestBlock.transactions.find((transaction) => {\n    // TODO: use gasPrice, timestamp or another better way to differentiate\n    return (\n      sameAddress(transaction.from, sender) &&\n      transaction.nonce === nonce &&\n      !sameString(transaction.hash, hash) &&\n      // if `data` differs, then it's a replacement tx, not a speedup\n      sameString(transaction.input, data)\n    )\n  })\n\n  return replacementTransaction\n}\n\n/**\n * Recursively inspects a pending tx. Until it's found, and returns the mined tx receipt\n *\n * @param {object} txParams\n * @param {string} txParams.sender\n * @param {string} txParams.hash\n * @param {string} txParams.data\n * @param {number | undefined} txParams.nonce\n * @param {string | undefined} txParams.gasPrice\n * @param {object} options\n * @param {number} options.delay\n * @returns {Promise<TransactionReceipt>}\n */\nexport const txMonitor = (\n  { sender, hash, data, nonce, gasPrice }: TxMonitorProps,\n  options?: TxMonitorOptions,\n  tries = 0,\n): Promise<TransactionReceipt> => {\n  const web3 = getWeb3ReadOnly()\n  return new Promise<TransactionReceipt>((resolve, reject) => {\n    const { maxRetries = MAX_RETRIES } = options || {}\n    if (tries > maxRetries) {\n      reject(new CodedException(Errors._805, 'max retries reached'))\n      return\n    }\n\n    const monitorFn = async (): Promise<unknown> => {\n      // Case 1: this block is accessed for the first time, no nonce\n      if (nonce == null || gasPrice == null) {\n        let params: TxMonitorProps = { sender, hash, data }\n        try {\n          // Find the nonce for the current tx\n          const transaction = await web3.eth.getTransaction(hash)\n          if (transaction) {\n            params = { ...params, nonce: transaction.nonce, gasPrice: transaction.gasPrice }\n          }\n        } catch (e) {\n          // ignore error\n        }\n\n        return txMonitor(params, options, tries + 1)\n          .then(resolve)\n          .catch(reject)\n      }\n\n      // Case 2: the nonce exists, try to get the receipt for the original tx\n      try {\n        const firstTxReceipt = await web3.eth.getTransactionReceipt(hash)\n        if (firstTxReceipt) {\n          return resolve(firstTxReceipt)\n        }\n      } catch (e) {\n        // proceed to case 3\n      }\n\n      // Case 3: original tx not found, try to find a sped-up tx\n      try {\n        const replacementTx = await findSpeedupTx({ sender, hash, nonce, data })\n\n        if (replacementTx) {\n          const replacementReceipt = await web3.eth.getTransactionReceipt(replacementTx.hash)\n\n          // goal achieved\n          if (replacementReceipt) {\n            return resolve(replacementReceipt)\n          }\n\n          // tx exists but no receipt yet, it's pending\n          return txMonitor(\n            {\n              sender,\n              nonce,\n              hash: replacementTx.hash,\n              data: replacementTx.input,\n              gasPrice: replacementTx.gasPrice,\n            },\n            options,\n            tries + 1,\n          )\n            .then(resolve)\n            .catch(reject)\n        }\n      } catch (e) {\n        // ignore error\n      }\n\n      // Neither the original nor a replacement transactions were found, try again\n      txMonitor({ sender, hash, data, nonce, gasPrice }, options, tries + 1)\n        .then(resolve)\n        .catch(reject)\n    }\n\n    setTimeout(monitorFn, options?.delay ?? DEFAULT_DELAY)\n  })\n}\n","import { ReactElement, SyntheticEvent } from 'react'\nimport styled from 'styled-components'\n\nimport { Icon, Link, Loader, Text } from '@gnosis.pm/safe-react-components'\n\nimport Button from 'src/components/layout/Button'\nimport { getHashedExplorerUrl } from 'src/config'\nimport Hairline from 'src/components/layout/Hairline'\n\nconst StyledText = styled(Text)`\n  display: inline-flex;\n  a {\n    margin-left: 4px;\n  }\n  svg {\n    position: relative;\n    top: 4px;\n    left: 4px;\n  }\n`\nconst ButtonWithMargin = styled(Button)`\n  margin-right: 16px;\n`\nconst FooterContainer = styled.div`\n  width: 100%;\n  height: 76px;\n\n  button {\n    margin-top: 24px;\n  }\n`\n\nconst LoaderText = styled.span`\n  margin-left: 10px;\n`\n\nexport const GenericFooter = ({ safeCreationTxHash }: { safeCreationTxHash: string }): ReactElement => {\n  const explorerUrl = getHashedExplorerUrl(safeCreationTxHash)\n  const match = /(http|https):\\/\\/(\\w+\\.\\w+)\\/.*/i.exec(explorerUrl)\n  const explorerDomain = match !== null ? match[2] : 'Network Explorer'\n\n  return (\n    <span>\n      <Text size=\"xl\">This process should take a couple of minutes.</Text>\n      <StyledText size=\"xl\">\n        Follow the progress on{' '}\n        <Link\n          href={explorerUrl}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          data-testid=\"safe-create-explorer-link\"\n          title=\"More info about this in Etherscan\"\n        >\n          <Text size=\"xl\" as=\"span\" color=\"primary\">\n            {explorerDomain}\n          </Text>\n          <Icon size=\"sm\" type=\"externalLink\" color=\"primary\" />\n        </Link>\n      </StyledText>\n    </span>\n  )\n}\n\nexport const ContinueFooter = ({\n  continueButtonDisabled,\n  onContinue,\n}: {\n  continueButtonDisabled: boolean\n  onContinue: (event: SyntheticEvent) => void\n}): ReactElement => (\n  <FooterContainer>\n    <Hairline />\n    <Button\n      color=\"primary\"\n      disabled={continueButtonDisabled}\n      onClick={onContinue}\n      variant=\"contained\"\n      data-testid=\"continue-btn\"\n    >\n      {continueButtonDisabled ? (\n        <>\n          <Loader size=\"xs\" color=\"secondaryLight\" /> <LoaderText>Loading your Safe</LoaderText>\n        </>\n      ) : (\n        <>Get started</>\n      )}\n    </Button>\n  </FooterContainer>\n)\n\nexport const ErrorFooter = ({\n  onCancel,\n  onRetry,\n}: {\n  onCancel: (event: SyntheticEvent) => void\n  onRetry: (event: SyntheticEvent) => void\n}): ReactElement => (\n  <FooterContainer>\n    <Hairline />\n    <ButtonWithMargin onClick={onCancel} variant=\"contained\">\n      Cancel\n    </ButtonWithMargin>\n    <Button color=\"primary\" onClick={onRetry} variant=\"contained\">\n      Retry\n    </Button>\n  </FooterContainer>\n)\n","import { ContinueFooter, GenericFooter } from './components/Footer'\n\nexport const isConfirmationStep = (stepIndex?: number): boolean => stepIndex === 0\n\nexport const steps = [\n  {\n    id: '1',\n    label: 'Waiting for transaction confirmation',\n    description: undefined,\n    instruction: 'Please confirm the Safe creation in your wallet',\n    footerComponent: null,\n  },\n  {\n    id: '2',\n    label: 'Transaction submitted',\n    description: undefined,\n    instruction: 'Please do not leave the page',\n    footerComponent: GenericFooter,\n  },\n  {\n    id: '3',\n    label: 'Validating transaction',\n    description: undefined,\n    instruction: 'Please do not leave the page',\n    footerComponent: GenericFooter,\n  },\n  {\n    id: '4',\n    label: 'Deploying smart contract',\n    description: undefined,\n    instruction: 'Please do not leave the page',\n    footerComponent: GenericFooter,\n  },\n  {\n    id: '5',\n    label: 'Generating your Safe',\n    description: undefined,\n    instruction: 'Please do not leave the page',\n    footerComponent: GenericFooter,\n  },\n  {\n    id: '6',\n    label: 'Success',\n    description: 'Your Safe was created successfully',\n    instruction: undefined,\n    footerComponent: ContinueFooter,\n  },\n]\n","export default __webpack_public_path__ + \"static/media/safe-created.99c91369.svg\";","export default __webpack_public_path__ + \"static/media/vault-error.17985c86.svg\";","export default __webpack_public_path__ + \"static/media/creation-process.b0164935.gif\";","import abiDecoder from 'abi-decoder'\nimport { getProxyFactoryDeployment } from '@gnosis.pm/safe-deployments'\nimport { Log } from 'web3-core'\nimport { checksumAddress } from 'src/utils/checksumAddress'\n\nimport { LATEST_SAFE_VERSION } from 'src/utils/constants'\n\n// Init abiDecoder with ProxyCreation ABI\nabiDecoder.addABI(\n  getProxyFactoryDeployment({\n    version: LATEST_SAFE_VERSION,\n  })?.abi,\n)\n\nexport const getNewSafeAddressFromLogs = (logs: Log[]): string => {\n  // We find the ProxyCreation event in the logs\n  const proxyCreationEvent = abiDecoder.decodeLogs(logs).find(({ name }) => name === 'ProxyCreation')\n\n  // We extract the proxy creation information from the event parameters\n  const proxyInformation = proxyCreationEvent?.events?.find(({ name }) => name === 'proxy')\n\n  return checksumAddress(proxyInformation?.value || '')\n}\n","import { Loader, Stepper } from '@gnosis.pm/safe-react-components'\nimport { useEffect, useState, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\n\nimport { ErrorFooter } from 'src/routes/opening/components/Footer'\nimport { isConfirmationStep, steps } from './steps'\n\nimport Button from 'src/components/layout/Button'\nimport Heading from 'src/components/layout/Heading'\nimport Img from 'src/components/layout/Img'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { EMPTY_DATA } from 'src/logic/wallets/ethTransactions'\nimport { getWeb3, isTxPendingError } from 'src/logic/wallets/getWeb3'\nimport { background, connected, fontColor } from 'src/theme/variables'\nimport { providerNameSelector } from 'src/logic/wallets/store/selectors'\n\nimport SuccessSvg from './assets/safe-created.svg'\nimport VaultErrorSvg from './assets/vault-error.svg'\nimport VaultLoading from './assets/creation-process.gif'\nimport { TransactionReceipt } from 'web3-core'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { NOTIFICATIONS } from 'src/logic/notifications'\nimport enqueueSnackbar from 'src/logic/notifications/store/actions/enqueueSnackbar'\nimport { getNewSafeAddressFromLogs } from 'src/routes/opening/utils/getSafeAddressFromLogs'\n\nexport const SafeDeployment = ({\n  creationTxHash,\n  onCancel,\n  onRetry,\n  onSuccess,\n  submittedPromise,\n}: Props): React.ReactElement => {\n  const [loading, setLoading] = useState(true)\n  const [stepIndex, setStepIndex] = useState(0)\n  const [safeCreationTxHash, setSafeCreationTxHash] = useState('')\n  const [createdSafeAddress, setCreatedSafeAddress] = useState('')\n\n  const [error, setError] = useState(false)\n  const [intervalStarted, setIntervalStarted] = useState(false)\n  const [waitingSafeDeployed, setWaitingSafeDeployed] = useState(false)\n  const [continueButtonDisabled, setContinueButtonDisabled] = useState(false)\n  const provider = useSelector(providerNameSelector)\n  const dispatch = useDispatch()\n\n  const confirmationStep = isConfirmationStep(stepIndex)\n\n  const navigateToSafe = () => {\n    setContinueButtonDisabled(true)\n    onSuccess(createdSafeAddress)\n  }\n\n  const showSnackbarError = useCallback(\n    (err: Error) => {\n      if (isTxPendingError(err)) {\n        dispatch(enqueueSnackbar({ ...NOTIFICATIONS.TX_PENDING_MSG }))\n      } else {\n        dispatch(\n          enqueueSnackbar({\n            ...NOTIFICATIONS.CREATE_SAFE_FAILED_MSG,\n            message: `${NOTIFICATIONS.CREATE_SAFE_FAILED_MSG.message} – ${err.message}`,\n          }),\n        )\n      }\n    },\n    [dispatch],\n  )\n\n  const onError = useCallback(\n    (error: Error) => {\n      setIntervalStarted(false)\n      setWaitingSafeDeployed(false)\n      setContinueButtonDisabled(false)\n      setError(true)\n      logError(Errors._800, error.message)\n      showSnackbarError(error)\n    },\n    [setIntervalStarted, setWaitingSafeDeployed, setContinueButtonDisabled, setError, showSnackbarError],\n  )\n\n  // discard click event value\n  const onRetryTx = () => {\n    setStepIndex(0)\n    setError(false)\n    onRetry()\n  }\n\n  const getImage = () => {\n    if (error) {\n      return VaultErrorSvg\n    }\n\n    if (stepIndex <= 4) {\n      return VaultLoading\n    }\n\n    return SuccessSvg\n  }\n\n  useEffect(() => {\n    if (provider) {\n      setLoading(false)\n    }\n  }, [provider])\n\n  // creating safe from from submission\n  useEffect(() => {\n    if (submittedPromise === undefined) {\n      return\n    }\n\n    const handlePromise = async () => {\n      setStepIndex(0)\n      try {\n        const receipt = await submittedPromise\n        setSafeCreationTxHash(receipt.transactionHash)\n        setStepIndex(1)\n        setIntervalStarted(true)\n      } catch (err) {\n        onError(err)\n      }\n    }\n\n    handlePromise()\n  }, [submittedPromise, onError])\n\n  // recovering safe creation from txHash\n  useEffect(() => {\n    if (creationTxHash === undefined) {\n      return\n    }\n    setSafeCreationTxHash(creationTxHash)\n    setStepIndex(1)\n    setIntervalStarted(true)\n  }, [creationTxHash])\n\n  useEffect(() => {\n    if (!intervalStarted) {\n      return\n    }\n\n    const isTxMined = async (txHash) => {\n      const web3 = getWeb3()\n\n      const txResult = await web3.eth.getTransaction(txHash)\n      if (txResult.blockNumber === null) {\n        return false\n      }\n\n      const receipt = await web3.eth.getTransactionReceipt(txHash)\n      if (!receipt.status) {\n        throw Error('TX status reverted')\n      }\n\n      return true\n    }\n\n    const interval = setInterval(async () => {\n      if (stepIndex < 4) {\n        setStepIndex(stepIndex + 1)\n      }\n\n      // safe created using the form\n      if (submittedPromise !== undefined) {\n        submittedPromise.then(() => {\n          setStepIndex(4)\n          setWaitingSafeDeployed(true)\n          setIntervalStarted(false)\n        })\n      }\n\n      // safe pending creation recovered from storage\n      if (creationTxHash !== undefined) {\n        try {\n          const res = await isTxMined(creationTxHash)\n          if (res) {\n            setStepIndex(4)\n            setWaitingSafeDeployed(true)\n            setIntervalStarted(false)\n          }\n        } catch (error) {\n          onError(error)\n        }\n      }\n    }, 3000)\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [creationTxHash, submittedPromise, intervalStarted, stepIndex, error, onError])\n\n  useEffect(() => {\n    let interval\n\n    const awaitUntilSafeIsDeployed = async (safeCreationTxHash: string) => {\n      try {\n        const web3 = getWeb3()\n        const receipt = await web3.eth.getTransactionReceipt(safeCreationTxHash)\n\n        let safeAddress\n\n        if (receipt.events) {\n          safeAddress = receipt.events.ProxyCreation.returnValues.proxy\n        } else {\n          // If the node doesn't return the events we try to fetch it from logs\n          safeAddress = getNewSafeAddressFromLogs(receipt.logs)\n        }\n\n        setCreatedSafeAddress(safeAddress)\n\n        interval = setInterval(async () => {\n          const code = await web3.eth.getCode(safeAddress)\n          if (code !== EMPTY_DATA) {\n            setStepIndex(5)\n          }\n        }, 1000)\n      } catch (error) {\n        onError(error)\n      }\n    }\n\n    if (!waitingSafeDeployed) {\n      return\n    }\n\n    if (typeof safeCreationTxHash === 'string') {\n      awaitUntilSafeIsDeployed(safeCreationTxHash)\n    }\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [safeCreationTxHash, waitingSafeDeployed, onError])\n\n  if (loading || stepIndex === undefined) {\n    return (\n      <LoaderContainer data-testid={'create-safe-loader'}>\n        <Loader size=\"md\" />\n      </LoaderContainer>\n    )\n  }\n\n  let FooterComponent\n  if (error) {\n    FooterComponent = ErrorFooter\n  } else if (steps[stepIndex].footerComponent) {\n    FooterComponent = steps[stepIndex].footerComponent\n  }\n\n  return (\n    <Wrapper>\n      <Title tag=\"h2\" testId=\"safe-creation-process-title\">\n        Safe creation process\n      </Title>\n      <Nav>\n        <Stepper activeStepIndex={stepIndex} error={error} orientation=\"vertical\" steps={steps} />\n      </Nav>\n      <Body>\n        <BodyImage>\n          <Img alt=\"Vault\" height={92} src={getImage()} />\n        </BodyImage>\n\n        <BodyDescription>\n          <CardTitle>{steps[stepIndex].description || steps[stepIndex].label}</CardTitle>\n        </BodyDescription>\n\n        {steps[stepIndex].instruction && (\n          <BodyInstruction>\n            <FullParagraph\n              color=\"primary\"\n              inversecolors={confirmationStep.toString()}\n              noMargin\n              size=\"md\"\n              $stepIndex={stepIndex}\n            >\n              {error ? 'You can Cancel or Retry the Safe creation process.' : steps[stepIndex].instruction}\n            </FullParagraph>\n          </BodyInstruction>\n        )}\n\n        <BodyFooter>\n          {FooterComponent ? (\n            <FooterComponent\n              continueButtonDisabled={continueButtonDisabled}\n              onCancel={onCancel}\n              onClick={onRetryTx}\n              onContinue={navigateToSafe}\n              onRetry={onRetryTx}\n              safeCreationTxHash={safeCreationTxHash}\n            />\n          ) : null}\n        </BodyFooter>\n      </Body>\n\n      {stepIndex !== 0 && (\n        <BackButton color=\"primary\" minWidth={140} onClick={onCancel} data-testid=\"safe-creation-back-btn\">\n          Back\n        </BackButton>\n      )}\n    </Wrapper>\n  )\n}\n\ntype Props = {\n  creationTxHash?: string\n  submittedPromise?: Promise<TransactionReceipt>\n  onRetry: () => void\n  onSuccess: (createdSafeAddress: string) => void\n  onCancel: () => void\n}\n\ninterface FullParagraphProps {\n  inversecolors: string\n  $stepIndex: number\n}\n\nconst LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 250px auto;\n  grid-template-rows: 43px auto;\n  margin-bottom: 30px;\n`\n\nconst Title = styled(Heading)`\n  grid-column: 1/3;\n  grid-row: 1;\n  margin: 7px 0 0 0 !important;\n`\n\nconst Nav = styled.div`\n  grid-column: 1;\n  grid-row: 2;\n`\n\nconst Body = styled.div`\n  grid-column: 2;\n  grid-row: 2;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.white};\n  border-radius: 5px;\n  min-width: 700px;\n  padding-top: 70px;\n  box-shadow: 0 0 10px 0 rgba(33, 48, 77, 0.1);\n\n  display: grid;\n  grid-template-rows: 100px 50px 110px 1fr;\n`\n\nconst CardTitle = styled.div`\n  font-size: 20px;\n  padding-top: 10px;\n`\n\nconst FullParagraph = styled(Paragraph)<FullParagraphProps>`\n  background-color: ${({ $stepIndex }) => ($stepIndex === 0 ? connected : background)};\n  color: ${({ theme, $stepIndex }) => ($stepIndex === 0 ? theme.colors.white : fontColor)};\n  padding: 28px;\n  font-size: 20px;\n  margin-bottom: 16px;\n  transition: color 0.3s ease-in-out, background-color 0.3s ease-in-out;\n`\n\nconst BodyImage = styled.div`\n  grid-row: 1;\n`\nconst BodyDescription = styled.div`\n  grid-row: 2;\n`\nconst BodyInstruction = styled.div`\n  grid-row: 3;\n  margin: 27px 0;\n`\nconst BodyFooter = styled.div`\n  grid-row: 4;\n\n  padding: 10px 0;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n`\n\nconst BackButton = styled(Button)`\n  grid-column: 2;\n  margin: 20px auto 0;\n`\n","import { ReactElement, useState, useEffect, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { backOff } from 'exponential-backoff'\nimport { TransactionReceipt } from 'web3-core'\nimport { GenericModal } from '@gnosis.pm/safe-react-components'\nimport styled from 'styled-components'\n\nimport { getSafeDeploymentTransaction } from 'src/logic/contracts/safeContracts'\nimport { txMonitor } from 'src/logic/safe/transactions/txMonitor'\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\nimport { SafeDeployment } from 'src/routes/opening'\nimport { useAnalytics, USER_EVENTS } from 'src/utils/googleAnalytics'\nimport { loadFromStorage, removeFromStorage, saveToStorage } from 'src/utils/storage'\nimport { addOrUpdateSafe } from 'src/logic/safe/store/actions/addOrUpdateSafe'\nimport {\n  SAFE_PENDING_CREATION_STORAGE_KEY,\n  CreateSafeFormValues,\n  FIELD_NEW_SAFE_THRESHOLD,\n  FIELD_SAFE_OWNERS_LIST,\n  FIELD_NEW_SAFE_GAS_LIMIT,\n  FIELD_NEW_SAFE_CREATION_TX_HASH,\n  FIELD_CREATE_SUGGESTED_SAFE_NAME,\n  FIELD_CREATE_CUSTOM_SAFE_NAME,\n  FIELD_NEW_SAFE_PROXY_SALT,\n  FIELD_NEW_SAFE_GAS_PRICE,\n  FIELD_SAFE_OWNER_ENS_LIST,\n} from '../fields/createSafeFields'\nimport { getSafeInfo } from 'src/logic/safe/utils/safeInformation'\nimport { buildSafe } from 'src/logic/safe/store/actions/fetchSafe'\nimport { addressBookSafeLoad } from 'src/logic/addressBook/store/actions'\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport NetworkLabel from 'src/components/NetworkLabel/NetworkLabel'\nimport Button from 'src/components/layout/Button'\nimport { boldFont } from 'src/theme/variables'\nimport { WELCOME_ROUTE, history, generateSafeRoute, SAFE_ROUTES } from 'src/routes/routes'\nimport { getExplorerInfo, getShortName } from 'src/config'\nimport { createSendParams } from 'src/logic/safe/transactions/gas'\nimport { currentChainId } from 'src/logic/config/store/selectors'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\n\nexport const InlinePrefixedEthHashInfo = styled(PrefixedEthHashInfo)`\n  display: inline-flex;\n`\n\ntype ModalDataType = {\n  safeAddress: string\n  safeName?: string\n  safeCreationTxHash?: string\n}\n\nconst goToWelcomePage = () => {\n  history.push(WELCOME_ROUTE)\n}\n\nconst sleep = (ms: number): Promise<void> => new Promise((resolve) => setTimeout(resolve, ms))\n\n/**\n * Parse MM error message, as a workaround for a bug in web3.js that doesn't do it correctly.\n * It returns a formatting error like this:\n *\n * `[ethjs-query] while formatting outputs from RPC '{\"value\":{\"code\":-32000,\"message\":\"intrinsic gas too low\"}}'`\n */\nconst parseError = (err: Error): Error => {\n  const prefix = '[ethjs-query] while formatting outputs from RPC '\n\n  if (!err.message.startsWith(prefix)) return err\n\n  const json = err.message.split(prefix).pop() || ''\n  let actualMessage = ''\n  try {\n    actualMessage = JSON.parse(json.slice(1, -1)).value.message\n  } catch (e) {\n    actualMessage = ''\n  }\n\n  return actualMessage ? new Error(actualMessage) : err\n}\n\nfunction SafeCreationProcess(): ReactElement {\n  const [safeCreationTxHash, setSafeCreationTxHash] = useState<string | undefined>()\n  const [creationTxPromise, setCreationTxPromise] = useState<Promise<TransactionReceipt>>()\n\n  const { trackEvent } = useAnalytics()\n  const dispatch = useDispatch()\n  const userAddressAccount = useSelector(userAccountSelector)\n  const chainId = useSelector(currentChainId)\n\n  const [showModal, setShowModal] = useState(false)\n  const [modalData, setModalData] = useState<ModalDataType>({ safeAddress: '' })\n  const [showCouldNotLoadModal, setShowCouldNotLoadModal] = useState(false)\n  const [newSafeAddress, setNewSafeAddress] = useState<string>('')\n\n  const createNewSafe = useCallback(() => {\n    const safeCreationFormValues = loadFromStorage<CreateSafeFormValues>(SAFE_PENDING_CREATION_STORAGE_KEY)\n\n    if (!safeCreationFormValues) {\n      goToWelcomePage()\n      return\n    }\n\n    setSafeCreationTxHash(safeCreationFormValues[FIELD_NEW_SAFE_CREATION_TX_HASH])\n\n    setCreationTxPromise(\n      new Promise((resolve, reject) => {\n        const confirmations = safeCreationFormValues[FIELD_NEW_SAFE_THRESHOLD]\n        const ownerFields = safeCreationFormValues[FIELD_SAFE_OWNERS_LIST]\n        const ownerAddresses = ownerFields.map(({ addressFieldName }) => safeCreationFormValues[addressFieldName])\n        const safeCreationSalt = safeCreationFormValues[FIELD_NEW_SAFE_PROXY_SALT]\n        const gasLimit = safeCreationFormValues[FIELD_NEW_SAFE_GAS_LIMIT]\n        const gasPrice = safeCreationFormValues[FIELD_NEW_SAFE_GAS_PRICE]\n        const deploymentTx = getSafeDeploymentTransaction(ownerAddresses, confirmations, safeCreationSalt)\n\n        const sendParams = createSendParams(userAddressAccount, {\n          ethGasLimit: gasLimit.toString(),\n          ethGasPriceInGWei: gasPrice,\n        })\n\n        deploymentTx\n          .send(sendParams)\n          .once('transactionHash', (txHash) => {\n            saveToStorage(SAFE_PENDING_CREATION_STORAGE_KEY, {\n              [FIELD_NEW_SAFE_CREATION_TX_HASH]: txHash,\n              ...safeCreationFormValues,\n            })\n\n            // Monitor the latest block to find a potential speed-up tx\n            txMonitor({ sender: userAddressAccount, hash: txHash, data: deploymentTx.encodeABI() })\n              .then((txReceipt) => {\n                console.log('Speed up tx mined:', txReceipt)\n                resolve(txReceipt)\n              })\n              .catch((error) => {\n                reject(parseError(error))\n              })\n          })\n          .then((txReceipt) => {\n            console.log('First tx mined:', txReceipt)\n            resolve(txReceipt)\n          })\n          .catch((error) => {\n            reject(parseError(error))\n          })\n      }),\n    )\n  }, [userAddressAccount])\n\n  useEffect(() => {\n    const safeCreationFormValues = loadFromStorage<CreateSafeFormValues>(SAFE_PENDING_CREATION_STORAGE_KEY)\n    if (!safeCreationFormValues) {\n      goToWelcomePage()\n      return\n    }\n\n    const safeCreationTxHash = safeCreationFormValues[FIELD_NEW_SAFE_CREATION_TX_HASH]\n    if (safeCreationTxHash) {\n      setSafeCreationTxHash(safeCreationTxHash)\n    } else {\n      createNewSafe()\n    }\n  }, [createNewSafe])\n\n  const onSafeCreated = async (newSafeAddress: string): Promise<void> => {\n    const createSafeFormValues = loadFromStorage<CreateSafeFormValues>(SAFE_PENDING_CREATION_STORAGE_KEY)\n\n    if (!createSafeFormValues) {\n      goToWelcomePage()\n      return\n    }\n\n    const safeCreationTxHash = createSafeFormValues[FIELD_NEW_SAFE_CREATION_TX_HASH]\n    const defaultSafeValue = createSafeFormValues[FIELD_CREATE_SUGGESTED_SAFE_NAME]\n    const safeName = createSafeFormValues[FIELD_CREATE_CUSTOM_SAFE_NAME] || defaultSafeValue\n    const owners = createSafeFormValues[FIELD_SAFE_OWNERS_LIST]\n\n    // we update the address book with the owners and the new safe\n    const ownersAddressBookEntry = owners.map(({ nameFieldName, addressFieldName }) => {\n      const ownerAddress = createSafeFormValues[addressFieldName]\n      return makeAddressBookEntry({\n        address: createSafeFormValues[addressFieldName],\n        name: createSafeFormValues[nameFieldName] || createSafeFormValues[FIELD_SAFE_OWNER_ENS_LIST][ownerAddress],\n        chainId,\n      })\n    })\n    const safeAddressBookEntry = makeAddressBookEntry({ address: newSafeAddress, name: safeName, chainId })\n    await dispatch(addressBookSafeLoad([...ownersAddressBookEntry, safeAddressBookEntry]))\n\n    trackEvent(USER_EVENTS.CREATE_SAFE)\n\n    // a default 5s wait before starting to request safe information\n    await sleep(5000)\n\n    try {\n      // exponential delay between attempts for around 4 min\n      await backOff(() => getSafeInfo(newSafeAddress), {\n        startingDelay: 750,\n        maxDelay: 20000,\n        numOfAttempts: 19,\n        retry: (e) => {\n          console.info('waiting for client-gateway to provide safe information', e)\n          return true\n        },\n      })\n    } catch (e) {\n      setNewSafeAddress(newSafeAddress)\n      setShowCouldNotLoadModal(true)\n      return\n    }\n\n    const safeProps = await buildSafe(newSafeAddress)\n    await dispatch(addOrUpdateSafe(safeProps))\n\n    setShowModal(true)\n    setModalData({\n      safeAddress: safeProps.address,\n      safeName,\n      safeCreationTxHash,\n    })\n  }\n\n  const onRetry = (): void => {\n    const safeCreationFormValues = loadFromStorage<CreateSafeFormValues>(SAFE_PENDING_CREATION_STORAGE_KEY)\n\n    if (!safeCreationFormValues) {\n      goToWelcomePage()\n      return\n    }\n\n    setSafeCreationTxHash(undefined)\n    delete safeCreationFormValues.safeCreationTxHash\n    saveToStorage(SAFE_PENDING_CREATION_STORAGE_KEY, safeCreationFormValues)\n    createNewSafe()\n  }\n\n  const onCancel = () => {\n    removeFromStorage(SAFE_PENDING_CREATION_STORAGE_KEY)\n    goToWelcomePage()\n  }\n\n  function onClickModalButton() {\n    removeFromStorage(SAFE_PENDING_CREATION_STORAGE_KEY)\n\n    const { safeName, safeCreationTxHash, safeAddress } = modalData\n    history.push({\n      pathname: generateSafeRoute(SAFE_ROUTES.ASSETS_BALANCES, {\n        shortName: getShortName(),\n        safeAddress,\n      }),\n      state: {\n        name: safeName,\n        tx: safeCreationTxHash,\n      },\n    })\n  }\n\n  return (\n    <>\n      <SafeDeployment\n        creationTxHash={safeCreationTxHash}\n        onCancel={onCancel}\n        onRetry={onRetry}\n        onSuccess={onSafeCreated}\n        submittedPromise={creationTxPromise}\n      />\n      {showModal && (\n        <GenericModal\n          onClose={onClickModalButton}\n          title=\"Safe Created!\"\n          body={\n            <div data-testid=\"safe-created-popup\">\n              <Paragraph>\n                You just created a new Safe on <NetworkLabel />\n              </Paragraph>\n              <Paragraph>\n                You will only be able to use this Safe on <NetworkLabel />\n              </Paragraph>\n              <Paragraph>\n                If you send assets on other networks to this address,{' '}\n                <EmphasisLabel>you will not be able to access them</EmphasisLabel>\n              </Paragraph>\n            </div>\n          }\n          footer={\n            <ButtonContainer>\n              <Button\n                testId=\"safe-created-button\"\n                onClick={onClickModalButton}\n                color=\"primary\"\n                type={'button'}\n                size=\"small\"\n                variant=\"contained\"\n              >\n                Continue\n              </Button>\n            </ButtonContainer>\n          }\n        />\n      )}\n      {showCouldNotLoadModal && newSafeAddress && (\n        <GenericModal\n          onClose={onCancel}\n          title=\"Unable to load the new Safe\"\n          body={\n            <div>\n              <Paragraph>\n                We are currently unable to load the Safe but it was successfully created and can be found <br />\n                under the following address{' '}\n                <InlinePrefixedEthHashInfo\n                  hash={newSafeAddress}\n                  showCopyBtn\n                  explorerUrl={getExplorerInfo(newSafeAddress)}\n                />\n              </Paragraph>\n            </div>\n          }\n          footer={\n            <ButtonContainer>\n              <Button onClick={onCancel} color=\"primary\" type=\"button\" size=\"small\" variant=\"contained\">\n                OK\n              </Button>\n            </ButtonContainer>\n          }\n        />\n      )}\n    </>\n  )\n}\n\nexport default SafeCreationProcess\n\nconst ButtonContainer = styled.div`\n  text-align: center;\n`\n\nconst EmphasisLabel = styled.span`\n  font-weight: ${boldFont};\n`\n","import { ReactElement, useState, useCallback } from 'react'\nimport { useSelector } from 'react-redux'\nimport { ButtonLink } from '@gnosis.pm/safe-react-components'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport List from '@material-ui/core/List'\nimport Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components'\n\nimport Block from 'src/components/layout/Block'\nimport { ChainId } from 'src/config/chain.d'\nimport { setChainId } from 'src/logic/config/utils'\nimport { lg } from 'src/theme/variables'\nimport NetworkLabel from 'src/components/NetworkLabel/NetworkLabel'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { providerNameSelector, shouldSwitchWalletChain } from 'src/logic/wallets/store/selectors'\nimport ConnectButton from 'src/components/ConnectButton'\nimport WalletSwitch from 'src/components/WalletSwitch'\nimport { getChains } from 'src/config/cache/chains'\n\nexport const selectWalletAndNetworkStepLabel = 'Connect wallet & select network'\n\nfunction SelectWalletAndNetworkStep(): ReactElement {\n  const [isNetworkSelectorPopupOpen, setIsNetworkSelectorPopupOpen] = useState(false)\n  const isWalletConnected = !!useSelector(providerNameSelector)\n  const isWrongNetwork = useSelector(shouldSwitchWalletChain)\n\n  function openNetworkSelectorPopup() {\n    setIsNetworkSelectorPopupOpen(true)\n  }\n\n  const onNetworkSwitch = useCallback((chainId: ChainId) => {\n    setChainId(chainId)\n    setIsNetworkSelectorPopupOpen(false)\n  }, [])\n\n  return (\n    <Container data-testid={'select-network-step'}>\n      {isWalletConnected ? (\n        <Paragraph color=\"primary\" noMargin size=\"lg\">\n          Select network on which to create your Safe. The app is currently pointing to{' '}\n          <NetworkLabel onClick={openNetworkSelectorPopup} />\n        </Paragraph>\n      ) : (\n        <Paragraph color=\"primary\" noMargin size=\"lg\">\n          In order to select the network to create your Safe, you need to connect a wallet\n        </Paragraph>\n      )}\n\n      <SwitchNetworkContainer>\n        {isWalletConnected ? (\n          <ButtonLink\n            type=\"button\"\n            onClick={openNetworkSelectorPopup}\n            color=\"primary\"\n            data-testid={'switch-network-link'}\n          >\n            Switch Network\n          </ButtonLink>\n        ) : (\n          <ConnectButton data-testid=\"heading-connect-btn\" />\n        )}\n      </SwitchNetworkContainer>\n\n      {isWalletConnected && isWrongNetwork && (\n        <Paragraph color=\"primary\" size=\"lg\">\n          Your wallet connection must match the selected network. <WalletSwitch />\n        </Paragraph>\n      )}\n\n      <Dialog\n        onClose={() => setIsNetworkSelectorPopupOpen(false)}\n        aria-labelledby=\"select-network\"\n        data-testid={'select-network-popup'}\n        open={isNetworkSelectorPopupOpen}\n      >\n        <StyledDialogTitle disableTypography>\n          <Typography variant={'h5'}>Select Network</Typography>\n          <IconButton aria-label=\"close\" onClick={() => setIsNetworkSelectorPopupOpen(false)}>\n            <CloseIcon />\n          </IconButton>\n        </StyledDialogTitle>\n        <StyledDialogContent dividers>\n          <List component=\"div\">\n            {getChains().map((network) => (\n              <NetworkLabelItem key={network.chainId} role=\"button\" onClick={() => onNetworkSwitch(network.chainId)}>\n                <NetworkLabel networkInfo={network} flexGrow />\n              </NetworkLabelItem>\n            ))}\n          </List>\n        </StyledDialogContent>\n      </Dialog>\n    </Container>\n  )\n}\n\nconst Container = styled(Block)`\n  padding: ${lg};\n`\nconst SwitchNetworkContainer = styled.div`\n  margin: ${lg};\n  display: flex;\n  justify-content: center;\n`\n\nconst StyledDialogTitle = styled(DialogTitle)`\n  display: flex;\n  justify-content: space-between;\n  padding: 16px 24px;\n`\n\nconst StyledDialogContent = styled(DialogContent)`\n  min-width: 500px;\n`\n\nconst NetworkLabelItem = styled.div`\n  display: flex;\n  margin: ${lg} auto;\n  cursor: pointer;\n  max-width: 50%;\n\n  & > span {\n    font-size: 13px;\n  }\n`\n\nexport default SelectWalletAndNetworkStep\n","// Stubbed HSBC Wallet Addresses\nexport const STUB_HSBC_SAFE_OWNERS = [\n  {\n    name: 'HSBC Wallet 1',\n    address: '0xE0fF0574a54c5402fDd18c09310F3E0b2A2b4C95',\n  },\n  {\n    name: 'HSBC Wallet 2',\n    address: '0x6f9a6e832D3632f0e028EB67EA73a9f21DdCe6EE',\n  },\n  {\n    name: 'HSBC Wallet 3',\n    address: '0xf92E2cAfDF7E1C81FB08d709dC2D060FBDC7493E',\n  },\n]\n\n// Stubbed Customers\nexport const STUB_HSBC_CUSTOMERS = [\n  {\n    account: '123456781',\n    name: 'Kylo Ren',\n    safeName: 'light-saber',\n    address: '0xd77AEe0Db54BFCf8020082F8168eC9ED49392c5f',\n  },\n  {\n    account: '123456782',\n    name: 'Darth Vader',\n    safeName: 'death-star',\n    address: '0xd77AEe0Db54BFCf8020082F8168eC9ED49392c5f',\n  },\n  {\n    account: '123456783',\n    name: 'Han Solo',\n    safeName: 'millenium-falcon',\n    address: '0xd77AEe0Db54BFCf8020082F8168eC9ED49392c5f',\n  },\n]\n","import { ReactElement, useEffect, useState } from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\nimport styled from 'styled-components'\nimport { useSelector } from 'react-redux'\nimport queryString from 'query-string'\nimport { useLocation } from 'react-router'\nimport { Loader } from '@gnosis.pm/safe-react-components'\n\nimport Page from 'src/components/layout/Page'\nimport Block from 'src/components/layout/Block'\nimport Row from 'src/components/layout/Row'\nimport Heading from 'src/components/layout/Heading'\nimport { history } from 'src/routes/routes'\nimport { secondary, sm } from 'src/theme/variables'\nimport StepperForm, { StepFormElement } from 'src/components/StepperForm/StepperForm'\nimport NameNewSafeStep, { nameNewSafeStepLabel } from './steps/NameNewSafeStep'\nimport {\n  CreateSafeFormValues,\n  FIELD_CREATE_CUSTOM_SAFE_NAME,\n  FIELD_CREATE_SUGGESTED_SAFE_NAME,\n  FIELD_MAX_OWNER_NUMBER,\n  FIELD_NEW_SAFE_PROXY_SALT,\n  FIELD_NEW_SAFE_THRESHOLD,\n  FIELD_SAFE_OWNER_ENS_LIST,\n  FIELD_SAFE_OWNERS_LIST,\n  SAFE_PENDING_CREATION_STORAGE_KEY,\n  FIELD_HSBC_SAFE_OWNERS_LIST,\n  FIELD_HSBC_SAFE_OWNER_ENS_LIST,\n} from './fields/createSafeFields'\nimport { useMnemonicSafeName } from 'src/logic/hooks/useMnemonicName'\nimport { providerNameSelector, shouldSwitchWalletChain, userAccountSelector } from 'src/logic/wallets/store/selectors'\nimport OwnersAndConfirmationsNewSafeStep, {\n  ownersAndConfirmationsNewSafeStepLabel,\n  ownersAndConfirmationsNewSafeStepValidations,\n} from './steps/OwnersAndConfirmationsNewSafeStep'\nimport { currentNetworkAddressBookAsMap } from 'src/logic/addressBook/store/selectors'\nimport ReviewNewSafeStep, { reviewNewSafeStepLabel } from './steps/ReviewNewSafeStep'\nimport { loadFromStorage, saveToStorage } from 'src/utils/storage'\nimport SafeCreationProcess from './components/SafeCreationProcess'\nimport SelectWalletAndNetworkStep, { selectWalletAndNetworkStepLabel } from './steps/SelectWalletAndNetworkStep'\nimport { STUB_HSBC_SAFE_OWNERS } from '../../stubs/CreateSafePageStubs'\n\nfunction CreateSafePage(): ReactElement {\n  const [safePendingToBeCreated, setSafePendingToBeCreated] = useState<CreateSafeFormValues>()\n  const [isLoading, setIsLoading] = useState<boolean>(true)\n  const providerName = useSelector(providerNameSelector)\n  const isWrongNetwork = useSelector(shouldSwitchWalletChain)\n  const provider = !!providerName && !isWrongNetwork\n\n  useEffect(() => {\n    const checkIfSafeIsPendingToBeCreated = async (): Promise<void> => {\n      setIsLoading(true)\n\n      // Removing the await completely is breaking the tests for a mysterious reason\n      // @TODO: remove the promise\n      const safePendingToBeCreated = await Promise.resolve(\n        loadFromStorage<CreateSafeFormValues>(SAFE_PENDING_CREATION_STORAGE_KEY),\n      )\n\n      if (provider) {\n        setSafePendingToBeCreated(safePendingToBeCreated)\n      }\n      setIsLoading(false)\n    }\n    checkIfSafeIsPendingToBeCreated()\n  }, [provider])\n\n  const userWalletAddress = useSelector(userAccountSelector)\n  const addressBook = useSelector(currentNetworkAddressBookAsMap)\n  const location = useLocation()\n  const safeRandomName = useMnemonicSafeName()\n\n  const showSafeCreationProcess = (newSafeFormValues: CreateSafeFormValues): void => {\n    saveToStorage(SAFE_PENDING_CREATION_STORAGE_KEY, { ...newSafeFormValues })\n    setSafePendingToBeCreated(newSafeFormValues)\n  }\n\n  const [initialFormValues, setInitialFormValues] = useState<CreateSafeFormValues>()\n\n  useEffect(() => {\n    if (provider && userWalletAddress) {\n      const initialValuesFromUrl = getInitialValues(\n        userWalletAddress,\n        addressBook,\n        location,\n        safeRandomName,\n        STUB_HSBC_SAFE_OWNERS,\n      )\n      setInitialFormValues(initialValuesFromUrl)\n    }\n  }, [provider, userWalletAddress, addressBook, location, safeRandomName])\n\n  if (isLoading) {\n    return (\n      <LoaderContainer data-testid={'create-safe-loader'}>\n        <Loader size=\"md\" />\n      </LoaderContainer>\n    )\n  }\n\n  return !!safePendingToBeCreated ? (\n    <SafeCreationProcess />\n  ) : (\n    <Page>\n      <Block>\n        <Row align=\"center\">\n          <BackIcon disableRipple onClick={history.goBack}>\n            <ChevronLeft />\n          </BackIcon>\n          <Heading tag=\"h2\">Create new Safe</Heading>\n        </Row>\n        <StepperForm initialValues={initialFormValues} onSubmit={showSafeCreationProcess} testId={'create-safe-form'}>\n          <StepFormElement\n            label={selectWalletAndNetworkStepLabel}\n            nextButtonLabel=\"Continue\"\n            disableNextButton={!provider}\n          >\n            <SelectWalletAndNetworkStep />\n          </StepFormElement>\n          <StepFormElement label={nameNewSafeStepLabel} nextButtonLabel=\"Continue\">\n            <NameNewSafeStep />\n          </StepFormElement>\n          <StepFormElement\n            label={ownersAndConfirmationsNewSafeStepLabel}\n            nextButtonLabel=\"Continue\"\n            validate={ownersAndConfirmationsNewSafeStepValidations}\n          >\n            <OwnersAndConfirmationsNewSafeStep />\n          </StepFormElement>\n          <StepFormElement label={reviewNewSafeStepLabel} nextButtonLabel=\"Create\">\n            <ReviewNewSafeStep />\n          </StepFormElement>\n        </StepperForm>\n      </Block>\n    </Page>\n  )\n}\n\nexport default CreateSafePage\n\n// updated default threshold to 2\nconst DEFAULT_THRESHOLD_VALUE = 2\n\n// initial values can be present in the URL because the Old MultiSig migration\nfunction getInitialValues(userAddress, addressBook, location, suggestedSafeName, hsbcSafeOwners): CreateSafeFormValues {\n  const query = queryString.parse(location.search, { arrayFormat: 'comma' })\n  const { name, owneraddresses, ownernames, threshold } = query\n\n  // if owners are not present in the URL we use current user account as default owner\n  const isOwnersPresentInTheUrl = !!owneraddresses\n  const ownersFromUrl = Array.isArray(owneraddresses) ? owneraddresses : [owneraddresses]\n  const owners = isOwnersPresentInTheUrl ? ownersFromUrl : [userAddress]\n  // we set the owner names\n  const ownersNamesFromUrl = Array.isArray(ownernames) ? ownernames : [ownernames]\n  const userAddressName = [addressBook[userAddress]?.name || '']\n  const ownerNames = isOwnersPresentInTheUrl ? ownersNamesFromUrl : userAddressName\n\n  const thresholdFromURl = Number(threshold)\n  // Updated Threshold Validation to include HSBC Wallets\n  const isValidThresholdInTheUrl =\n    threshold &&\n    !Number.isNaN(threshold) &&\n    thresholdFromURl <= owners.length + hsbcSafeOwners.length &&\n    thresholdFromURl > 0\n\n  return {\n    [FIELD_CREATE_SUGGESTED_SAFE_NAME]: suggestedSafeName,\n    [FIELD_CREATE_CUSTOM_SAFE_NAME]: name,\n    [FIELD_NEW_SAFE_THRESHOLD]: isValidThresholdInTheUrl ? threshold : DEFAULT_THRESHOLD_VALUE,\n    [FIELD_SAFE_OWNERS_LIST]: owners.map((owner, index) => ({\n      nameFieldName: `owner-name-${index}`,\n      addressFieldName: `owner-address-${index}`,\n    })),\n    [FIELD_SAFE_OWNER_ENS_LIST]: {},\n    // we set owners address values as owner-address-${index} format in the form state\n    ...owners.reduce(\n      (ownerAddressFields, ownerAddress, index) => ({\n        ...ownerAddressFields,\n        [`owner-address-${index}`]: ownerAddress,\n      }),\n      {},\n    ),\n    // we set owners name values as owner-name-${index} format in the form state\n    ...ownerNames.reduce(\n      (ownerNameFields, ownerName, index) => ({\n        ...ownerNameFields,\n        [`owner-name-${index}`]: ownerName,\n      }),\n      {},\n    ),\n    [FIELD_MAX_OWNER_NUMBER]: owners.length,\n    [FIELD_NEW_SAFE_PROXY_SALT]: Date.now(),\n    // Added HSBC Wallets to form state\n    [FIELD_HSBC_SAFE_OWNERS_LIST]: hsbcSafeOwners.map((hsbcOwner, index) => ({\n      hsbcNameFieldName: `hsbc-owner-${index}`,\n      hsbcAddressFieldName: `hsbc-address-${index}`,\n    })),\n    [FIELD_HSBC_SAFE_OWNER_ENS_LIST]: {},\n    // we set hsbc owners address values as hsbc-address-${index} format in the form state\n    ...hsbcSafeOwners\n      .map((hsbcSafeOwner) => hsbcSafeOwner.address)\n      .reduce(\n        (hsbcAddressFields, hsbcAddress, index) => ({\n          ...hsbcAddressFields,\n          [`hsbc-address-${index}`]: hsbcAddress,\n        }),\n        {},\n      ),\n    // we set owners name values as hsbc-owner-${index} format in the form state\n    ...hsbcSafeOwners\n      .map((hsbcSafeOwner) => hsbcSafeOwner.name)\n      .reduce(\n        (hsbcNameFields, hsbcOwnerName, index) => ({\n          ...hsbcNameFields,\n          [`hsbc-owner-${index}`]: hsbcOwnerName,\n        }),\n        {},\n      ),\n  }\n}\n\nconst LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`\n\nconst BackIcon = styled(IconButton)`\n  color: ${secondary};\n  padding: ${sm};\n  margin-right: 5px;\n`\n"],"sourceRoot":""}
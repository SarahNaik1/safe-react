{"version":3,"sources":["../node_modules/react-final-form/dist/react-final-form.es.js","../node_modules/final-form/dist/final-form.es.js"],"names":["_excluded$3","renderComponent","props","lazyProps","name","render","children","component","rest","_objectWithoutPropertiesLoose","React","Object","assign","undefined","Error","useWhenValueChanges","value","callback","isEqual","a","b","previous","React__default","useRef","useEffect","current","shallowEqual","keysA","keys","keysB","length","bHasOwnProperty","prototype","hasOwnProperty","bind","idx","key","isSyntheticEvent","candidate","stopPropagation","ReactFinalFormContext","useLatest","ref","addLazyState","dest","state","forEach","defineProperty","get","enumerable","addLazyFormState","_excluded$2","versions","version$1","all$1","formSubscriptionItems","reduce","result","ReactFinalForm","_ref","debug","_ref$decorators","decorators","destroyOnUnregister","alternateFormApi","form","initialValues","initialValuesEqual","keepDirtyOnReinitialize","mutators","onSubmit","_ref$subscription","subscription","validate","validateOnBlur","config","init","useConstant","f","createForm","pauseValidation","_React$useState","initialState","subscribe","setState","stateRef","isValidationPaused","resumeValidation","unsubscriptions","s","concat","map","decorator","reverse","unsubscribe","setConfig","renderProps","_extends","reset","eventOrValues","handleSubmit","event","preventDefault","submit","Provider","__versions","useForm","componentName","useFormState","_temp","onChange","firstRender","onChangeRef","newState","lazyState","isReactNative","window","navigator","product","useConstantCallback","_len","arguments","args","Array","_key","apply","all","fieldSubscriptionItems","defaultFormat","defaultParse","defaultIsEqual","useField","_config","afterSubmit","allowNull","data","defaultValue","_config$format","format","formatOnBlur","initialValue","multiple","_config$parse","parse","_config$subscription","type","validateFields","_value","configRef","register","silent","registerField","beforeSubmit","_configRef$current","_configRef$current$fo","getFieldState","formatted","change","getValidator","meta","addLazyFieldMetaState","input","checked","isArray","indexOf","onBlur","blur","fieldState","target","currentValue","valueProp","nativeEvent","text","_detypedEvent$target","index","slice","options","option","selected","push","getSelectedValues","getValue","onFocus","focus","_excluded","Field","field","charCodeOfDot","charCodeAt","reEscapeChar","rePropName","RegExp","keysCache","toPath","string","replace","match","expression","quote","subString","trim","stringToPath","getIn","complexKey","path","i","isNaN","_toPropertyKey","arg","hint","prim","Symbol","toPrimitive","res","call","TypeError","String","Number","_toPrimitive","setInRecursor","destroyArrays","_extends2","_result2","_result","numKeys","numericKey","_result3","_array","array","splice","setIn","FORM_ERROR","ARRAY_ERROR","publishFieldState","formState","errors","lastSubmittedValues","submitErrors","submitFailed","submitSucceeded","submitting","values","active","modified","modifiedSinceLastSubmit","touched","validating","visited","error","submitError","initial","pristine","valid","dirty","dirtySinceLastSubmit","invalid","subscriptionFilter","src","shallowEqualKeys","different","shallowEqualKeys$1","filterFieldState","previousState","force","filterFormState","memoize","fn","lastArgs","lastResult","some","isPromise","obj","then","version","tripleEquals","hasAnyError","notifySubscriber","subscriber","lastState","filter","notification","notify","_ref2","entries","entry","notified","subscribers","fieldSubscribers","fields","resetWhileSubmitting","lastFormState","inBatch","validationPaused","validationBlocked","preventNotificationWhileValidationPaused","nextAsyncValidationKey","asyncValidationPromises","changeValue","mutate","after","renameField","from","to","_extends3","api","lastFieldState","getMutatorApi","mutatableState","returnValue","resetFieldState","runValidation","notifyFieldListeners","notifyFormListeners","mutatorsApi","getValidators","validators","validator","fieldChanged","safeFields","fieldKeys","limitedFieldLevelValidation","changedField","recordLevelErrors","fieldLevelErrors","promises","setErrors","errorsOrPromise","runRecordLevelValidation","setError","errorOrPromise","promise","runFieldLevelValidation","hasAsyncValidations","asyncValidationPromiseKey","Promise","processErrors","merged","forEachError","recordLevelError","errorFromParent","hasFieldLevelValidation","fieldLevelError","existing","copy","afterPromise","notifyField","fieldSubscriber","markAllFieldsTouched","calculateNextFormState","safeFieldKeys","foundDirty","dirtyFields","dirtyFieldsSinceLastSubmit","nonNullLastSubmittedValues","nextFormState","hasSubmitErrors","hasValidationErrors","convertToExternalFormState","_safeFieldKeys$reduce","notifying","scheduleNotification","resetModifiedAfterSubmit","batch","getRegisteredFields","getState","initialize","savedDirtyValues","preventNotification","fieldConfig","haveValidator","noValueInFormState","validatorRemoved","hasFieldSubscribers","lastOne","restart","asyncValidationPromisesKeys","console","resolvePromise","completeCalled","complete","resolve","memoized"],"mappings":"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","file":"static/js/0.c3aa6b11.chunk.js","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport * as React from 'react';\nimport React__default from 'react';\nimport { formSubscriptionItems, createForm, version as version$1, fieldSubscriptionItems } from 'final-form';\n\nvar _excluded$3 = [\"render\", \"children\", \"component\"];\n// shared logic between components that use either render prop,\n// children render function, or component prop\nfunction renderComponent(props, lazyProps, name) {\n  var render = props.render,\n      children = props.children,\n      component = props.component,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$3);\n\n  if (component) {\n    return /*#__PURE__*/React.createElement(component, Object.assign(lazyProps, rest, {\n      children: children,\n      render: render\n    }));\n  }\n\n  if (render) {\n    return render(children === undefined ? Object.assign(lazyProps, rest) : // inject children back in\n    Object.assign(lazyProps, rest, {\n      children: children\n    }));\n  }\n\n  if (typeof children !== \"function\") {\n    throw new Error(\"Must specify either a render prop, a render function as children, or a component prop to \" + name);\n  }\n\n  return children(Object.assign(lazyProps, rest));\n}\n\nfunction useWhenValueChanges(value, callback, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = function isEqual(a, b) {\n      return a === b;\n    };\n  }\n\n  var previous = React__default.useRef(value);\n  React__default.useEffect(function () {\n    if (!isEqual(value, previous.current)) {\n      callback();\n      previous.current = value;\n    }\n  });\n}\n\n/**\n * A simple hook to create a constant value that lives for\n * the lifetime of the component.\n *\n * Plagiarized from https://github.com/Andarist/use-constant\n *\n * Do NOT reuse this code unless you know what you're doing.\n * Use Andarist's hook; it's more fault tolerant to things like\n * falsy values.\n *\n * @param {Function} init - A function to generate the value\n */\n\nfunction useConstant(init) {\n  var ref = React__default.useRef();\n\n  if (!ref.current) {\n    ref.current = init();\n  }\n\n  return ref.current;\n}\n\nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== \"object\" || !a || typeof b !== \"object\" || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar isSyntheticEvent = function isSyntheticEvent(candidate) {\n  return !!(candidate && typeof candidate.stopPropagation === \"function\");\n};\n\nvar ReactFinalFormContext = /*#__PURE__*/React.createContext();\n\nfunction useLatest(value) {\n  var ref = React__default.useRef(value);\n  React__default.useEffect(function () {\n    ref.current = value;\n  });\n  return ref;\n}\n\nvar version = \"6.5.7\";\n\nvar addLazyState = function addLazyState(dest, state, keys) {\n  keys.forEach(function (key) {\n    Object.defineProperty(dest, key, {\n      get: function get() {\n        return state[key];\n      },\n      enumerable: true\n    });\n  });\n};\n\nvar addLazyFormState = function addLazyFormState(dest, state) {\n  return addLazyState(dest, state, [\"active\", \"dirty\", \"dirtyFields\", \"dirtySinceLastSubmit\", \"dirtyFieldsSinceLastSubmit\", \"error\", \"errors\", \"hasSubmitErrors\", \"hasValidationErrors\", \"initialValues\", \"invalid\", \"modified\", \"modifiedSinceLastSubmit\", \"pristine\", \"submitError\", \"submitErrors\", \"submitFailed\", \"submitSucceeded\", \"submitting\", \"touched\", \"valid\", \"validating\", \"values\", \"visited\"]);\n};\nvar addLazyFieldMetaState = function addLazyFieldMetaState(dest, state) {\n  return addLazyState(dest, state, [\"active\", \"data\", \"dirty\", \"dirtySinceLastSubmit\", \"error\", \"initial\", \"invalid\", \"length\", \"modified\", \"modifiedSinceLastSubmit\", \"pristine\", \"submitError\", \"submitFailed\", \"submitSucceeded\", \"submitting\", \"touched\", \"valid\", \"validating\", \"visited\"]);\n};\n\nvar _excluded$2 = [\"debug\", \"decorators\", \"destroyOnUnregister\", \"form\", \"initialValues\", \"initialValuesEqual\", \"keepDirtyOnReinitialize\", \"mutators\", \"onSubmit\", \"subscription\", \"validate\", \"validateOnBlur\"];\nvar versions = {\n  \"final-form\": version$1,\n  \"react-final-form\": version\n};\nvar all$1 = formSubscriptionItems.reduce(function (result, key) {\n  result[key] = true;\n  return result;\n}, {});\n\nfunction ReactFinalForm(_ref) {\n  var debug = _ref.debug,\n      _ref$decorators = _ref.decorators,\n      decorators = _ref$decorators === void 0 ? [] : _ref$decorators,\n      destroyOnUnregister = _ref.destroyOnUnregister,\n      alternateFormApi = _ref.form,\n      initialValues = _ref.initialValues,\n      initialValuesEqual = _ref.initialValuesEqual,\n      keepDirtyOnReinitialize = _ref.keepDirtyOnReinitialize,\n      mutators = _ref.mutators,\n      onSubmit = _ref.onSubmit,\n      _ref$subscription = _ref.subscription,\n      subscription = _ref$subscription === void 0 ? all$1 : _ref$subscription,\n      validate = _ref.validate,\n      validateOnBlur = _ref.validateOnBlur,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded$2);\n\n  var config = {\n    debug: debug,\n    destroyOnUnregister: destroyOnUnregister,\n    initialValues: initialValues,\n    keepDirtyOnReinitialize: keepDirtyOnReinitialize,\n    mutators: mutators,\n    onSubmit: onSubmit,\n    validate: validate,\n    validateOnBlur: validateOnBlur\n  };\n  var form = useConstant(function () {\n    var f = alternateFormApi || createForm(config); // pause validation until children register all fields on first render (unpaused in useEffect() below)\n\n    f.pauseValidation();\n    return f;\n  }); // synchronously register and unregister to query form state for our subscription on first render\n\n  var _React$useState = React.useState(function () {\n    var initialState = {};\n    form.subscribe(function (state) {\n      initialState = state;\n    }, subscription)();\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1]; // save a copy of state that can break through the closure\n  // on the shallowEqual() line below.\n\n\n  var stateRef = useLatest(state);\n  React.useEffect(function () {\n    // We have rendered, so all fields are now registered, so we can unpause validation\n    form.isValidationPaused() && form.resumeValidation();\n    var unsubscriptions = [form.subscribe(function (s) {\n      if (!shallowEqual(s, stateRef.current)) {\n        setState(s);\n      }\n    }, subscription)].concat(decorators ? decorators.map(function (decorator) {\n      return (// this noop ternary is to appease the flow gods\n        // istanbul ignore next\n        decorator(form)\n      );\n    }) : []);\n    return function () {\n      form.pauseValidation(); // pause validation so we don't revalidate on every field deregistration\n\n      unsubscriptions.reverse().forEach(function (unsubscribe) {\n        return unsubscribe();\n      }); // don't need to resume validation here; either unmounting, or will re-run this hook with new deps\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, decorators); // warn about decorator changes\n  // istanbul ignore next\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // You're never supposed to use hooks inside a conditional, but in this\n    // case we can be certain that you're not going to be changing your\n    // NODE_ENV between renders, so this is safe.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useWhenValueChanges(decorators, function () {\n      console.error(\"Form decorators should not change from one render to the next as new values will be ignored\");\n    }, shallowEqual);\n  } // allow updatable config\n\n\n  useWhenValueChanges(debug, function () {\n    form.setConfig(\"debug\", debug);\n  });\n  useWhenValueChanges(destroyOnUnregister, function () {\n    form.destroyOnUnregister = !!destroyOnUnregister;\n  });\n  useWhenValueChanges(keepDirtyOnReinitialize, function () {\n    form.setConfig(\"keepDirtyOnReinitialize\", keepDirtyOnReinitialize);\n  });\n  useWhenValueChanges(initialValues, function () {\n    form.setConfig(\"initialValues\", initialValues);\n  }, initialValuesEqual || shallowEqual);\n  useWhenValueChanges(mutators, function () {\n    form.setConfig(\"mutators\", mutators);\n  });\n  useWhenValueChanges(onSubmit, function () {\n    form.setConfig(\"onSubmit\", onSubmit);\n  });\n  useWhenValueChanges(validate, function () {\n    form.setConfig(\"validate\", validate);\n  });\n  useWhenValueChanges(validateOnBlur, function () {\n    form.setConfig(\"validateOnBlur\", validateOnBlur);\n  });\n\n  var handleSubmit = function handleSubmit(event) {\n    if (event) {\n      // sometimes not true, e.g. React Native\n      if (typeof event.preventDefault === \"function\") {\n        event.preventDefault();\n      }\n\n      if (typeof event.stopPropagation === \"function\") {\n        // prevent any outer forms from receiving the event too\n        event.stopPropagation();\n      }\n    }\n\n    return form.submit();\n  };\n\n  var renderProps = {\n    form: _extends({}, form, {\n      reset: function reset(eventOrValues) {\n        if (isSyntheticEvent(eventOrValues)) {\n          // it's a React SyntheticEvent, call reset with no arguments\n          form.reset();\n        } else {\n          form.reset(eventOrValues);\n        }\n      }\n    }),\n    handleSubmit: handleSubmit\n  };\n  addLazyFormState(renderProps, state);\n  return /*#__PURE__*/React.createElement(ReactFinalFormContext.Provider, {\n    value: form\n  }, renderComponent(_extends({}, rest, {\n    __versions: versions\n  }), renderProps, \"ReactFinalForm\"));\n}\n\nfunction useForm(componentName) {\n  var form = React.useContext(ReactFinalFormContext);\n\n  if (!form) {\n    throw new Error((componentName || \"useForm\") + \" must be used inside of a <Form> component\");\n  }\n\n  return form;\n}\n\nfunction useFormState(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      onChange = _ref.onChange,\n      _ref$subscription = _ref.subscription,\n      subscription = _ref$subscription === void 0 ? all$1 : _ref$subscription;\n\n  var form = useForm(\"useFormState\");\n  var firstRender = React.useRef(true);\n  var onChangeRef = React.useRef(onChange);\n  onChangeRef.current = onChange; // synchronously register and unregister to query field state for our subscription on first render\n\n  var _React$useState = React.useState(function () {\n    var initialState = {};\n    form.subscribe(function (state) {\n      initialState = state;\n    }, subscription)();\n\n    if (onChange) {\n      onChange(initialState);\n    }\n\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  React.useEffect(function () {\n    return form.subscribe(function (newState) {\n      if (firstRender.current) {\n        firstRender.current = false;\n      } else {\n        setState(newState);\n\n        if (onChangeRef.current) {\n          onChangeRef.current(newState);\n        }\n      }\n    }, subscription);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  var lazyState = {};\n  addLazyFormState(lazyState, state);\n  return lazyState;\n}\n\nvar _excluded$1 = [\"onChange\", \"subscription\"];\n\nfunction FormSpy(_ref) {\n  var onChange = _ref.onChange,\n      subscription = _ref.subscription,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n\n  var reactFinalForm = useForm(\"FormSpy\");\n  var state = useFormState({\n    onChange: onChange,\n    subscription: subscription\n  });\n\n  if (onChange) {\n    return null;\n  }\n\n  var renderProps = {\n    form: _extends({}, reactFinalForm, {\n      reset: function reset(eventOrValues) {\n        if (isSyntheticEvent(eventOrValues)) {\n          // it's a React SyntheticEvent, call reset with no arguments\n          reactFinalForm.reset();\n        } else {\n          reactFinalForm.reset(eventOrValues);\n        }\n      }\n    })\n  };\n  return renderComponent(_extends({}, rest, renderProps), state, \"FormSpy\");\n}\n\nvar isReactNative = typeof window !== \"undefined\" && window.navigator && window.navigator.product && window.navigator.product === \"ReactNative\";\n\nvar getSelectedValues = function getSelectedValues(options) {\n  var result = [];\n\n  if (options) {\n    for (var index = 0; index < options.length; index++) {\n      var option = options[index];\n\n      if (option.selected) {\n        result.push(option.value);\n      }\n    }\n  }\n\n  return result;\n};\n\nvar getValue = function getValue(event, currentValue, valueProp, isReactNative) {\n  if (!isReactNative && event.nativeEvent && event.nativeEvent.text !== undefined) {\n    return event.nativeEvent.text;\n  }\n\n  if (isReactNative && event.nativeEvent) {\n    return event.nativeEvent.text;\n  }\n\n  var detypedEvent = event;\n  var _detypedEvent$target = detypedEvent.target,\n      type = _detypedEvent$target.type,\n      value = _detypedEvent$target.value,\n      checked = _detypedEvent$target.checked;\n\n  switch (type) {\n    case \"checkbox\":\n      if (valueProp !== undefined) {\n        // we are maintaining an array, not just a boolean\n        if (checked) {\n          // add value to current array value\n          return Array.isArray(currentValue) ? currentValue.concat(valueProp) : [valueProp];\n        } else {\n          // remove value from current array value\n          if (!Array.isArray(currentValue)) {\n            return currentValue;\n          }\n\n          var index = currentValue.indexOf(valueProp);\n\n          if (index < 0) {\n            return currentValue;\n          } else {\n            return currentValue.slice(0, index).concat(currentValue.slice(index + 1));\n          }\n        }\n      } else {\n        // it's just a boolean\n        return !!checked;\n      }\n\n    case \"select-multiple\":\n      return getSelectedValues(event.target.options);\n\n    default:\n      return value;\n  }\n};\n\n/**\n * Creates a callback, even with closures, that will be\n * instance === for the lifetime of the component, always\n * calling the most recent version of the function and its\n * closures.\n */\n\nfunction useConstantCallback(callback) {\n  var ref = React.useRef(callback);\n  React.useEffect(function () {\n    ref.current = callback;\n  });\n  return React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return ref.current.apply(null, args);\n  }, []);\n}\n\nvar all = fieldSubscriptionItems.reduce(function (result, key) {\n  result[key] = true;\n  return result;\n}, {});\n\nvar defaultFormat = function defaultFormat(value, name) {\n  return value === undefined ? \"\" : value;\n};\n\nvar defaultParse = function defaultParse(value, name) {\n  return value === \"\" ? undefined : value;\n};\n\nvar defaultIsEqual = function defaultIsEqual(a, b) {\n  return a === b;\n};\n\nfunction useField(name, config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  var _config = config,\n      afterSubmit = _config.afterSubmit,\n      allowNull = _config.allowNull,\n      component = _config.component,\n      data = _config.data,\n      defaultValue = _config.defaultValue,\n      _config$format = _config.format,\n      format = _config$format === void 0 ? defaultFormat : _config$format,\n      formatOnBlur = _config.formatOnBlur,\n      initialValue = _config.initialValue,\n      multiple = _config.multiple,\n      _config$parse = _config.parse,\n      parse = _config$parse === void 0 ? defaultParse : _config$parse,\n      _config$subscription = _config.subscription,\n      subscription = _config$subscription === void 0 ? all : _config$subscription,\n      type = _config.type,\n      validateFields = _config.validateFields,\n      _value = _config.value;\n  var form = useForm(\"useField\");\n  var configRef = useLatest(config);\n\n  var register = function register(callback, silent) {\n    return (// avoid using `state` const in any closures created inside `register`\n      // because they would refer `state` from current execution context\n      // whereas actual `state` would defined in the subsequent `useField` hook\n      // execution\n      // (that would be caused by `setState` call performed in `register` callback)\n      form.registerField(name, callback, subscription, {\n        afterSubmit: afterSubmit,\n        beforeSubmit: function beforeSubmit() {\n          var _configRef$current = configRef.current,\n              beforeSubmit = _configRef$current.beforeSubmit,\n              formatOnBlur = _configRef$current.formatOnBlur,\n              _configRef$current$fo = _configRef$current.format,\n              format = _configRef$current$fo === void 0 ? defaultFormat : _configRef$current$fo;\n\n          if (formatOnBlur) {\n            var _ref = form.getFieldState(name),\n                value = _ref.value;\n\n            var formatted = format(value, name);\n\n            if (formatted !== value) {\n              form.change(name, formatted);\n            }\n          }\n\n          return beforeSubmit && beforeSubmit();\n        },\n        data: data,\n        defaultValue: defaultValue,\n        getValidator: function getValidator() {\n          return configRef.current.validate;\n        },\n        initialValue: initialValue,\n        isEqual: function isEqual(a, b) {\n          return (configRef.current.isEqual || defaultIsEqual)(a, b);\n        },\n        silent: silent,\n        validateFields: validateFields\n      })\n    );\n  };\n\n  var firstRender = React.useRef(true); // synchronously register and unregister to query field state for our subscription on first render\n\n  var _React$useState = React.useState(function () {\n    var initialState = {}; // temporarily disable destroyOnUnregister\n\n    // temporarily disable destroyOnUnregister\n    var destroyOnUnregister = form.destroyOnUnregister;\n    form.destroyOnUnregister = false;\n    register(function (state) {\n      initialState = state;\n    }, true)(); // return destroyOnUnregister to its original value\n\n    // return destroyOnUnregister to its original value\n    form.destroyOnUnregister = destroyOnUnregister;\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  React.useEffect(function () {\n    return register(function (state) {\n      if (firstRender.current) {\n        firstRender.current = false;\n      } else {\n        setState(state);\n      }\n    }, false);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [name, data, defaultValue, // If we want to allow inline fat-arrow field-level validation functions, we\n  // cannot reregister field every time validate function !==.\n  // validate,\n  initialValue // The validateFields array is often passed as validateFields={[]}, creating\n  // a !== new array every time. If it needs to be changed, a rerender/reregister\n  // can be forced by changing the key prop\n  // validateFields\n  ]);\n  var meta = {};\n  addLazyFieldMetaState(meta, state);\n  var input = {\n    name: name,\n\n    get value() {\n      var value = state.value;\n\n      if (formatOnBlur) {\n        if (component === \"input\") {\n          value = defaultFormat(value);\n        }\n      } else {\n        value = format(value, name);\n      }\n\n      if (value === null && !allowNull) {\n        value = \"\";\n      }\n\n      if (type === \"checkbox\" || type === \"radio\") {\n        return _value;\n      } else if (component === \"select\" && multiple) {\n        return value || [];\n      }\n\n      return value;\n    },\n\n    get checked() {\n      var value = state.value;\n\n      if (type === \"checkbox\") {\n        value = format(value, name);\n\n        if (_value === undefined) {\n          return !!value;\n        } else {\n          return !!(Array.isArray(value) && ~value.indexOf(_value));\n        }\n      } else if (type === \"radio\") {\n        return format(value, name) === _value;\n      }\n\n      return undefined;\n    },\n\n    onBlur: useConstantCallback(function (event) {\n      state.blur();\n\n      if (formatOnBlur) {\n        /**\n         * Here we must fetch the value directly from Final Form because we cannot\n         * trust that our `state` closure has the most recent value. This is a problem\n         * if-and-only-if the library consumer has called `onChange()` immediately\n         * before calling `onBlur()`, but before the field has had a chance to receive\n         * the value update from Final Form.\n         */\n        var fieldState = form.getFieldState(state.name);\n        state.change(format(fieldState.value, state.name));\n      }\n    }),\n    onChange: useConstantCallback(function (event) {\n      // istanbul ignore next\n      if (process.env.NODE_ENV !== \"production\" && event && event.target) {\n        var targetType = event.target.type;\n        var unknown = ~[\"checkbox\", \"radio\", \"select-multiple\"].indexOf(targetType) && !type && component !== \"select\";\n\n        var _value2 = targetType === \"select-multiple\" ? state.value : _value;\n\n        if (unknown) {\n          console.error(\"You must pass `type=\\\"\" + (targetType === \"select-multiple\" ? \"select\" : targetType) + \"\\\"` prop to your Field(\" + name + \") component.\\n\" + (\"Without it we don't know how to unpack your `value` prop - \" + (Array.isArray(_value2) ? \"[\" + _value2 + \"]\" : \"\\\"\" + _value2 + \"\\\"\") + \".\"));\n        }\n      }\n\n      var value = event && event.target ? getValue(event, state.value, _value, isReactNative) : event;\n      state.change(parse(value, name));\n    }),\n    onFocus: useConstantCallback(function (event) {\n      return state.focus();\n    })\n  };\n\n  if (multiple) {\n    input.multiple = multiple;\n  }\n\n  if (type !== undefined) {\n    input.type = type;\n  }\n\n  var renderProps = {\n    input: input,\n    meta: meta\n  }; // assign to force Flow check\n\n  return renderProps;\n}\n\nvar _excluded = [\"afterSubmit\", \"allowNull\", \"beforeSubmit\", \"children\", \"component\", \"data\", \"defaultValue\", \"format\", \"formatOnBlur\", \"initialValue\", \"isEqual\", \"multiple\", \"name\", \"parse\", \"subscription\", \"type\", \"validate\", \"validateFields\", \"value\"];\nvar Field = /*#__PURE__*/React.forwardRef(function Field(_ref, ref) {\n  var afterSubmit = _ref.afterSubmit,\n      allowNull = _ref.allowNull,\n      beforeSubmit = _ref.beforeSubmit,\n      children = _ref.children,\n      component = _ref.component,\n      data = _ref.data,\n      defaultValue = _ref.defaultValue,\n      format = _ref.format,\n      formatOnBlur = _ref.formatOnBlur,\n      initialValue = _ref.initialValue,\n      isEqual = _ref.isEqual,\n      multiple = _ref.multiple,\n      name = _ref.name,\n      parse = _ref.parse,\n      subscription = _ref.subscription,\n      type = _ref.type,\n      validate = _ref.validate,\n      validateFields = _ref.validateFields,\n      value = _ref.value,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var field = useField(name, {\n    afterSubmit: afterSubmit,\n    allowNull: allowNull,\n    beforeSubmit: beforeSubmit,\n    children: children,\n    component: component,\n    data: data,\n    defaultValue: defaultValue,\n    format: format,\n    formatOnBlur: formatOnBlur,\n    initialValue: initialValue,\n    isEqual: isEqual,\n    multiple: multiple,\n    parse: parse,\n    subscription: subscription,\n    type: type,\n    validate: validate,\n    validateFields: validateFields,\n    value: value\n  });\n\n  if (typeof children === \"function\") {\n    return children(_extends({}, field, rest));\n  }\n\n  if (typeof component === \"string\") {\n    // ignore meta, combine input with any other props\n    return /*#__PURE__*/React.createElement(component, _extends({}, field.input, {\n      children: children,\n      ref: ref\n    }, rest));\n  }\n\n  if (!name) {\n    throw new Error(\"prop name cannot be undefined in <Field> component\");\n  }\n\n  return renderComponent(_extends({\n    children: children,\n    component: component,\n    ref: ref\n  }, rest), field, \"Field(\" + name + \")\");\n});\n\nfunction withTypes() {\n  return {\n    Form: ReactFinalForm,\n    FormSpy: FormSpy\n  };\n}\n\nexport { Field, ReactFinalForm as Form, FormSpy, useField, useForm, useFormState, version, withTypes };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\n//      \nvar charCodeOfDot = \".\".charCodeAt(0);\nvar reEscapeChar = /\\\\(\\\\)?/g;\nvar rePropName = RegExp( // Match anything that isn't a dot or bracket.\n\"[^.[\\\\]]+\" + \"|\" + // Or match property names within brackets.\n\"\\\\[(?:\" + // Match a non-string expression.\n\"([^\\\"'][^[]*)\" + \"|\" + // Or match strings (supports escaping characters).\n\"([\\\"'])((?:(?!\\\\2)[^\\\\\\\\]|\\\\\\\\.)*?)\\\\2\" + \")\\\\]\" + \"|\" + // Or match \"\" as the space between consecutive dots or empty brackets.\n\"(?=(?:\\\\.|\\\\[\\\\])(?:\\\\.|\\\\[\\\\]|$))\", \"g\");\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = function stringToPath(string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === charCodeOfDot) {\n    result.push(\"\");\n  }\n\n  string.replace(rePropName, function (match, expression, quote, subString) {\n    var key = match;\n\n    if (quote) {\n      key = subString.replace(reEscapeChar, \"$1\");\n    } else if (expression) {\n      key = expression.trim();\n    }\n\n    result.push(key);\n  });\n  return result;\n};\n\nvar keysCache = {};\n\nvar toPath = function toPath(key) {\n  if (key === null || key === undefined || !key.length) {\n    return [];\n  }\n\n  if (typeof key !== \"string\") {\n    throw new Error(\"toPath() expects a string\");\n  }\n\n  if (keysCache[key] == null) {\n    keysCache[key] = stringToPath(key);\n  }\n\n  return keysCache[key];\n};\n\n//      \n\nvar getIn = function getIn(state, complexKey) {\n  // Intentionally using iteration rather than recursion\n  var path = toPath(complexKey);\n  var current = state;\n\n  for (var i = 0; i < path.length; i++) {\n    var key = path[i];\n\n    if (current === undefined || current === null || typeof current !== \"object\" || Array.isArray(current) && isNaN(key)) {\n      return undefined;\n    }\n\n    current = current[key];\n  }\n\n  return current;\n};\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nvar setInRecursor = function setInRecursor(current, index, path, value, destroyArrays) {\n  if (index >= path.length) {\n    // end of recursion\n    return value;\n  }\n\n  var key = path[index]; // determine type of key\n\n  if (isNaN(key)) {\n    var _extends2;\n\n    // object set\n    if (current === undefined || current === null) {\n      var _ref;\n\n      // recurse\n      var _result2 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // delete or create an object\n\n\n      return _result2 === undefined ? undefined : (_ref = {}, _ref[key] = _result2, _ref);\n    }\n\n    if (Array.isArray(current)) {\n      throw new Error(\"Cannot set a non-numeric property on an array\");\n    } // current exists, so make a copy of all its values, and add/update the new one\n\n\n    var _result = setInRecursor(current[key], index + 1, path, value, destroyArrays);\n\n    if (_result === undefined) {\n      var numKeys = Object.keys(current).length;\n\n      if (current[key] === undefined && numKeys === 0) {\n        // object was already empty\n        return undefined;\n      }\n\n      if (current[key] !== undefined && numKeys <= 1) {\n        // only key we had was the one we are deleting\n        if (!isNaN(path[index - 1]) && !destroyArrays) {\n          // we are in an array, so return an empty object\n          return {};\n        } else {\n          return undefined;\n        }\n      }\n\n      current[key];\n          var _final = _objectWithoutPropertiesLoose(current, [key].map(_toPropertyKey));\n\n      return _final;\n    } // set result in key\n\n\n    return _extends({}, current, (_extends2 = {}, _extends2[key] = _result, _extends2));\n  } // array set\n\n\n  var numericKey = Number(key);\n\n  if (current === undefined || current === null) {\n    // recurse\n    var _result3 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // if nothing returned, delete it\n\n\n    if (_result3 === undefined) {\n      return undefined;\n    } // create an array\n\n\n    var _array = [];\n    _array[numericKey] = _result3;\n    return _array;\n  }\n\n  if (!Array.isArray(current)) {\n    throw new Error(\"Cannot set a numeric property on an object\");\n  } // recurse\n\n\n  var existingValue = current[numericKey];\n  var result = setInRecursor(existingValue, index + 1, path, value, destroyArrays); // current exists, so make a copy of all its values, and add/update the new one\n\n  var array = [].concat(current);\n\n  if (destroyArrays && result === undefined) {\n    array.splice(numericKey, 1);\n\n    if (array.length === 0) {\n      return undefined;\n    }\n  } else {\n    array[numericKey] = result;\n  }\n\n  return array;\n};\n\nvar setIn = function setIn(state, key, value, destroyArrays) {\n  if (destroyArrays === void 0) {\n    destroyArrays = false;\n  }\n\n  if (state === undefined || state === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(state) + \" state\");\n  }\n\n  if (key === undefined || key === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(key) + \" key\");\n  } // Recursive function needs to accept and return State, but public API should\n  // only deal with Objects\n\n\n  return setInRecursor(state, 0, toPath(key), value, destroyArrays);\n};\n\nvar FORM_ERROR = \"FINAL_FORM/form-error\";\nvar ARRAY_ERROR = \"FINAL_FORM/array-error\";\n\n//      \n/**\n * Converts internal field state to published field state\n */\n\nfunction publishFieldState(formState, field) {\n  var errors = formState.errors,\n      initialValues = formState.initialValues,\n      lastSubmittedValues = formState.lastSubmittedValues,\n      submitErrors = formState.submitErrors,\n      submitFailed = formState.submitFailed,\n      submitSucceeded = formState.submitSucceeded,\n      submitting = formState.submitting,\n      values = formState.values;\n  var active = field.active,\n      blur = field.blur,\n      change = field.change,\n      data = field.data,\n      focus = field.focus,\n      modified = field.modified,\n      modifiedSinceLastSubmit = field.modifiedSinceLastSubmit,\n      name = field.name,\n      touched = field.touched,\n      validating = field.validating,\n      visited = field.visited;\n  var value = getIn(values, name);\n  var error = getIn(errors, name);\n\n  if (error && error[ARRAY_ERROR]) {\n    error = error[ARRAY_ERROR];\n  }\n\n  var submitError = submitErrors && getIn(submitErrors, name);\n  var initial = initialValues && getIn(initialValues, name);\n  var pristine = field.isEqual(initial, value);\n  var dirtySinceLastSubmit = !!(lastSubmittedValues && !field.isEqual(getIn(lastSubmittedValues, name), value));\n  var valid = !error && !submitError;\n  return {\n    active: active,\n    blur: blur,\n    change: change,\n    data: data,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    error: error,\n    focus: focus,\n    initial: initial,\n    invalid: !valid,\n    length: Array.isArray(value) ? value.length : undefined,\n    modified: modified,\n    modifiedSinceLastSubmit: modifiedSinceLastSubmit,\n    name: name,\n    pristine: pristine,\n    submitError: submitError,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitting: submitting,\n    touched: touched,\n    valid: valid,\n    value: value,\n    visited: visited,\n    validating: validating\n  };\n}\n\n//      \nvar fieldSubscriptionItems = [\"active\", \"data\", \"dirty\", \"dirtySinceLastSubmit\", \"error\", \"initial\", \"invalid\", \"length\", \"modified\", \"modifiedSinceLastSubmit\", \"pristine\", \"submitError\", \"submitFailed\", \"submitSucceeded\", \"submitting\", \"touched\", \"valid\", \"value\", \"visited\", \"validating\"];\n\n//      \nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== \"object\" || !a || typeof b !== \"object\" || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n//      \nfunction subscriptionFilter (dest, src, previous, subscription, keys, shallowEqualKeys) {\n  var different = false;\n  keys.forEach(function (key) {\n    if (subscription[key]) {\n      dest[key] = src[key];\n\n      if (!previous || (~shallowEqualKeys.indexOf(key) ? !shallowEqual(src[key], previous[key]) : src[key] !== previous[key])) {\n        different = true;\n      }\n    }\n  });\n  return different;\n}\n\n//      \nvar shallowEqualKeys$1 = [\"data\"];\n/**\n * Filters items in a FieldState based on a FieldSubscription\n */\n\nvar filterFieldState = function filterFieldState(state, previousState, subscription, force) {\n  var result = {\n    blur: state.blur,\n    change: state.change,\n    focus: state.focus,\n    name: state.name\n  };\n  var different = subscriptionFilter(result, state, previousState, subscription, fieldSubscriptionItems, shallowEqualKeys$1) || !previousState;\n  return different || force ? result : undefined;\n};\n\n//      \nvar formSubscriptionItems = [\"active\", \"dirty\", \"dirtyFields\", \"dirtyFieldsSinceLastSubmit\", \"dirtySinceLastSubmit\", \"error\", \"errors\", \"hasSubmitErrors\", \"hasValidationErrors\", \"initialValues\", \"invalid\", \"modified\", \"modifiedSinceLastSubmit\", \"pristine\", \"submitting\", \"submitError\", \"submitErrors\", \"submitFailed\", \"submitSucceeded\", \"touched\", \"valid\", \"validating\", \"values\", \"visited\"];\n\n//      \nvar shallowEqualKeys = [\"touched\", \"visited\"];\n/**\n * Filters items in a FormState based on a FormSubscription\n */\n\nfunction filterFormState(state, previousState, subscription, force) {\n  var result = {};\n  var different = subscriptionFilter(result, state, previousState, subscription, formSubscriptionItems, shallowEqualKeys) || !previousState;\n  return different || force ? result : undefined;\n}\n\n//      \n\nvar memoize = function memoize(fn) {\n  var lastArgs;\n  var lastResult;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (!lastArgs || args.length !== lastArgs.length || args.some(function (arg, index) {\n      return !shallowEqual(lastArgs[index], arg);\n    })) {\n      lastArgs = args;\n      lastResult = fn.apply(void 0, args);\n    }\n\n    return lastResult;\n  };\n};\n\nvar isPromise = (function (obj) {\n  return !!obj && (typeof obj === \"object\" || typeof obj === \"function\") && typeof obj.then === \"function\";\n});\n\nvar version = \"4.20.4\";\n\nvar configOptions = [\"debug\", \"initialValues\", \"keepDirtyOnReinitialize\", \"mutators\", \"onSubmit\", \"validate\", \"validateOnBlur\"];\n\nvar tripleEquals = function tripleEquals(a, b) {\n  return a === b;\n};\n\nvar hasAnyError = function hasAnyError(errors) {\n  return Object.keys(errors).some(function (key) {\n    var value = errors[key];\n\n    if (value && typeof value === \"object\" && !(value instanceof Error)) {\n      return hasAnyError(value);\n    }\n\n    return typeof value !== \"undefined\";\n  });\n};\n\nfunction convertToExternalFormState(_ref) {\n  var active = _ref.active,\n      dirtySinceLastSubmit = _ref.dirtySinceLastSubmit,\n      modifiedSinceLastSubmit = _ref.modifiedSinceLastSubmit,\n      error = _ref.error,\n      errors = _ref.errors,\n      initialValues = _ref.initialValues,\n      pristine = _ref.pristine,\n      submitting = _ref.submitting,\n      submitFailed = _ref.submitFailed,\n      submitSucceeded = _ref.submitSucceeded,\n      submitError = _ref.submitError,\n      submitErrors = _ref.submitErrors,\n      valid = _ref.valid,\n      validating = _ref.validating,\n      values = _ref.values;\n  return {\n    active: active,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    modifiedSinceLastSubmit: modifiedSinceLastSubmit,\n    error: error,\n    errors: errors,\n    hasSubmitErrors: !!(submitError || submitErrors && hasAnyError(submitErrors)),\n    hasValidationErrors: !!(error || hasAnyError(errors)),\n    invalid: !valid,\n    initialValues: initialValues,\n    pristine: pristine,\n    submitting: submitting,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitError: submitError,\n    submitErrors: submitErrors,\n    valid: valid,\n    validating: validating > 0,\n    values: values\n  };\n}\n\nfunction notifySubscriber(subscriber, subscription, state, lastState, filter, force) {\n  var notification = filter(state, lastState, subscription, force);\n\n  if (notification) {\n    subscriber(notification);\n    return true;\n  }\n\n  return false;\n}\n\nfunction notify(_ref2, state, lastState, filter, force) {\n  var entries = _ref2.entries;\n  Object.keys(entries).forEach(function (key) {\n    var entry = entries[Number(key)]; // istanbul ignore next\n\n    if (entry) {\n      var subscription = entry.subscription,\n          subscriber = entry.subscriber,\n          notified = entry.notified;\n\n      if (notifySubscriber(subscriber, subscription, state, lastState, filter, force || !notified)) {\n        entry.notified = true;\n      }\n    }\n  });\n}\n\nfunction createForm(config) {\n  if (!config) {\n    throw new Error(\"No config specified\");\n  }\n\n  var debug = config.debug,\n      destroyOnUnregister = config.destroyOnUnregister,\n      keepDirtyOnReinitialize = config.keepDirtyOnReinitialize,\n      initialValues = config.initialValues,\n      mutators = config.mutators,\n      onSubmit = config.onSubmit,\n      validate = config.validate,\n      validateOnBlur = config.validateOnBlur;\n\n  if (!onSubmit) {\n    throw new Error(\"No onSubmit function specified\");\n  }\n\n  var state = {\n    subscribers: {\n      index: 0,\n      entries: {}\n    },\n    fieldSubscribers: {},\n    fields: {},\n    formState: {\n      dirtySinceLastSubmit: false,\n      modifiedSinceLastSubmit: false,\n      errors: {},\n      initialValues: initialValues && _extends({}, initialValues),\n      invalid: false,\n      pristine: true,\n      submitting: false,\n      submitFailed: false,\n      submitSucceeded: false,\n      resetWhileSubmitting: false,\n      valid: true,\n      validating: 0,\n      values: initialValues ? _extends({}, initialValues) : {}\n    },\n    lastFormState: undefined\n  };\n  var inBatch = 0;\n  var validationPaused = false;\n  var validationBlocked = false;\n  var preventNotificationWhileValidationPaused = false;\n  var nextAsyncValidationKey = 0;\n  var asyncValidationPromises = {};\n\n  var clearAsyncValidationPromise = function clearAsyncValidationPromise(key) {\n    return function (result) {\n      delete asyncValidationPromises[key];\n      return result;\n    };\n  };\n\n  var changeValue = function changeValue(state, name, mutate) {\n    var before = getIn(state.formState.values, name);\n    var after = mutate(before);\n    state.formState.values = setIn(state.formState.values, name, after) || {};\n  };\n\n  var renameField = function renameField(state, from, to) {\n    if (state.fields[from]) {\n      var _extends2, _extends3;\n\n      state.fields = _extends({}, state.fields, (_extends2 = {}, _extends2[to] = _extends({}, state.fields[from], {\n        name: to,\n        // rebind event handlers\n        blur: function blur() {\n          return api.blur(to);\n        },\n        change: function change(value) {\n          return api.change(to, value);\n        },\n        focus: function focus() {\n          return api.focus(to);\n        },\n        lastFieldState: undefined\n      }), _extends2));\n      delete state.fields[from];\n      state.fieldSubscribers = _extends({}, state.fieldSubscribers, (_extends3 = {}, _extends3[to] = state.fieldSubscribers[from], _extends3));\n      delete state.fieldSubscribers[from];\n      var value = getIn(state.formState.values, from);\n      state.formState.values = setIn(state.formState.values, from, undefined) || {};\n      state.formState.values = setIn(state.formState.values, to, value);\n      delete state.lastFormState;\n    }\n  }; // bind state to mutators\n\n\n  var getMutatorApi = function getMutatorApi(key) {\n    return function () {\n      // istanbul ignore next\n      if (mutators) {\n        // ^^ causes branch coverage warning, but needed to appease the Flow gods\n        var mutatableState = {\n          formState: state.formState,\n          fields: state.fields,\n          fieldSubscribers: state.fieldSubscribers,\n          lastFormState: state.lastFormState\n        };\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var returnValue = mutators[key](args, mutatableState, {\n          changeValue: changeValue,\n          getIn: getIn,\n          renameField: renameField,\n          resetFieldState: api.resetFieldState,\n          setIn: setIn,\n          shallowEqual: shallowEqual\n        });\n        state.formState = mutatableState.formState;\n        state.fields = mutatableState.fields;\n        state.fieldSubscribers = mutatableState.fieldSubscribers;\n        state.lastFormState = mutatableState.lastFormState;\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n        return returnValue;\n      }\n    };\n  };\n\n  var mutatorsApi = mutators ? Object.keys(mutators).reduce(function (result, key) {\n    result[key] = getMutatorApi(key);\n    return result;\n  }, {}) : {};\n\n  var runRecordLevelValidation = function runRecordLevelValidation(setErrors) {\n    var promises = [];\n\n    if (validate) {\n      var errorsOrPromise = validate(_extends({}, state.formState.values)); // clone to avoid writing\n\n      if (isPromise(errorsOrPromise)) {\n        promises.push(errorsOrPromise.then(setErrors));\n      } else {\n        setErrors(errorsOrPromise);\n      }\n    }\n\n    return promises;\n  };\n\n  var getValidators = function getValidators(field) {\n    return Object.keys(field.validators).reduce(function (result, index) {\n      var validator = field.validators[Number(index)]();\n\n      if (validator) {\n        result.push(validator);\n      }\n\n      return result;\n    }, []);\n  };\n\n  var runFieldLevelValidation = function runFieldLevelValidation(field, setError) {\n    var promises = [];\n    var validators = getValidators(field);\n\n    if (validators.length) {\n      var error;\n      validators.forEach(function (validator) {\n        var errorOrPromise = validator(getIn(state.formState.values, field.name), state.formState.values, validator.length === 0 || validator.length === 3 ? publishFieldState(state.formState, state.fields[field.name]) : undefined);\n\n        if (errorOrPromise && isPromise(errorOrPromise)) {\n          field.validating = true;\n          var promise = errorOrPromise.then(function (error) {\n            if (state.fields[field.name]) {\n              state.fields[field.name].validating = false;\n              setError(error);\n            }\n          }); // errors must be resolved, not rejected\n\n          promises.push(promise);\n        } else if (!error) {\n          // first registered validator wins\n          error = errorOrPromise;\n        }\n      });\n      setError(error);\n    }\n\n    return promises;\n  };\n\n  var runValidation = function runValidation(fieldChanged, callback) {\n    if (validationPaused) {\n      validationBlocked = true;\n      callback();\n      return;\n    }\n\n    var fields = state.fields,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var fieldKeys = Object.keys(safeFields);\n\n    if (!validate && !fieldKeys.some(function (key) {\n      return getValidators(safeFields[key]).length;\n    })) {\n      callback();\n      return; // no validation rules\n    } // pare down field keys to actually validate\n\n\n    var limitedFieldLevelValidation = false;\n\n    if (fieldChanged) {\n      var changedField = safeFields[fieldChanged];\n\n      if (changedField) {\n        var validateFields = changedField.validateFields;\n\n        if (validateFields) {\n          limitedFieldLevelValidation = true;\n          fieldKeys = validateFields.length ? validateFields.concat(fieldChanged) : [fieldChanged];\n        }\n      }\n    }\n\n    var recordLevelErrors = {};\n    var fieldLevelErrors = {};\n    var promises = [].concat(runRecordLevelValidation(function (errors) {\n      recordLevelErrors = errors || {};\n    }), fieldKeys.reduce(function (result, name) {\n      return result.concat(runFieldLevelValidation(fields[name], function (error) {\n        fieldLevelErrors[name] = error;\n      }));\n    }, []));\n    var hasAsyncValidations = promises.length > 0;\n    var asyncValidationPromiseKey = ++nextAsyncValidationKey;\n    var promise = Promise.all(promises).then(clearAsyncValidationPromise(asyncValidationPromiseKey)); // backwards-compat: add promise to submit-blocking promises iff there are any promises to await\n\n    if (hasAsyncValidations) {\n      asyncValidationPromises[asyncValidationPromiseKey] = promise;\n    }\n\n    var processErrors = function processErrors() {\n      var merged = _extends({}, limitedFieldLevelValidation ? formState.errors : {}, recordLevelErrors);\n\n      var forEachError = function forEachError(fn) {\n        fieldKeys.forEach(function (name) {\n          if (fields[name]) {\n            // make sure field is still registered\n            // field-level errors take precedent over record-level errors\n            var recordLevelError = getIn(recordLevelErrors, name);\n            var errorFromParent = getIn(merged, name);\n            var hasFieldLevelValidation = getValidators(safeFields[name]).length;\n            var fieldLevelError = fieldLevelErrors[name];\n            fn(name, hasFieldLevelValidation && fieldLevelError || validate && recordLevelError || (!recordLevelError && !limitedFieldLevelValidation ? errorFromParent : undefined));\n          }\n        });\n      };\n\n      forEachError(function (name, error) {\n        merged = setIn(merged, name, error) || {};\n      });\n      forEachError(function (name, error) {\n        if (error && error[ARRAY_ERROR]) {\n          var existing = getIn(merged, name);\n          var copy = [].concat(existing);\n          copy[ARRAY_ERROR] = error[ARRAY_ERROR];\n          merged = setIn(merged, name, copy);\n        }\n      });\n\n      if (!shallowEqual(formState.errors, merged)) {\n        formState.errors = merged;\n      }\n\n      formState.error = recordLevelErrors[FORM_ERROR];\n    };\n\n    if (hasAsyncValidations) {\n      // async validations are running, ensure validating is true before notifying\n      state.formState.validating++;\n      callback();\n    } // process sync errors\n\n\n    processErrors(); // sync errors have been set. notify listeners while we wait for others\n\n    callback();\n\n    if (hasAsyncValidations) {\n      var afterPromise = function afterPromise() {\n        state.formState.validating--;\n        callback();\n      };\n\n      promise.then(function () {\n        if (nextAsyncValidationKey > asyncValidationPromiseKey) {\n          // if this async validator has been superseded by another, ignore its results\n          return;\n        }\n\n        processErrors();\n      }).then(afterPromise, afterPromise);\n    }\n  };\n\n  var notifyFieldListeners = function notifyFieldListeners(name) {\n    if (inBatch) {\n      return;\n    }\n\n    var fields = state.fields,\n        fieldSubscribers = state.fieldSubscribers,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var notifyField = function notifyField(name) {\n      var field = safeFields[name];\n      var fieldState = publishFieldState(formState, field);\n      var lastFieldState = field.lastFieldState;\n      field.lastFieldState = fieldState;\n      var fieldSubscriber = fieldSubscribers[name];\n\n      if (fieldSubscriber) {\n        notify(fieldSubscriber, fieldState, lastFieldState, filterFieldState, lastFieldState === undefined);\n      }\n    };\n\n    if (name) {\n      notifyField(name);\n    } else {\n      Object.keys(safeFields).forEach(notifyField);\n    }\n  };\n\n  var markAllFieldsTouched = function markAllFieldsTouched() {\n    Object.keys(state.fields).forEach(function (key) {\n      state.fields[key].touched = true;\n    });\n  };\n\n  var hasSyncErrors = function hasSyncErrors() {\n    return !!(state.formState.error || hasAnyError(state.formState.errors));\n  };\n\n  var calculateNextFormState = function calculateNextFormState() {\n    var fields = state.fields,\n        formState = state.formState,\n        lastFormState = state.lastFormState;\n\n    var safeFields = _extends({}, fields);\n\n    var safeFieldKeys = Object.keys(safeFields); // calculate dirty/pristine\n\n    var foundDirty = false;\n    var dirtyFields = safeFieldKeys.reduce(function (result, key) {\n      var dirty = !safeFields[key].isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n      if (dirty) {\n        foundDirty = true;\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    var dirtyFieldsSinceLastSubmit = safeFieldKeys.reduce(function (result, key) {\n      // istanbul ignore next\n      var nonNullLastSubmittedValues = formState.lastSubmittedValues || {}; // || {} is for flow, but causes branch coverage complaint\n\n      if (!safeFields[key].isEqual(getIn(formState.values, key), getIn(nonNullLastSubmittedValues, key))) {\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    formState.pristine = !foundDirty;\n    formState.dirtySinceLastSubmit = !!(formState.lastSubmittedValues && Object.values(dirtyFieldsSinceLastSubmit).some(function (value) {\n      return value;\n    }));\n    formState.modifiedSinceLastSubmit = !!(formState.lastSubmittedValues && // Object.values would treat values as mixed (facebook/flow#2221)\n    Object.keys(safeFields).some(function (value) {\n      return safeFields[value].modifiedSinceLastSubmit;\n    }));\n    formState.valid = !formState.error && !formState.submitError && !hasAnyError(formState.errors) && !(formState.submitErrors && hasAnyError(formState.submitErrors));\n    var nextFormState = convertToExternalFormState(formState);\n\n    var _safeFieldKeys$reduce = safeFieldKeys.reduce(function (result, key) {\n      result.modified[key] = safeFields[key].modified;\n      result.touched[key] = safeFields[key].touched;\n      result.visited[key] = safeFields[key].visited;\n      return result;\n    }, {\n      modified: {},\n      touched: {},\n      visited: {}\n    }),\n        modified = _safeFieldKeys$reduce.modified,\n        touched = _safeFieldKeys$reduce.touched,\n        visited = _safeFieldKeys$reduce.visited;\n\n    nextFormState.dirtyFields = lastFormState && shallowEqual(lastFormState.dirtyFields, dirtyFields) ? lastFormState.dirtyFields : dirtyFields;\n    nextFormState.dirtyFieldsSinceLastSubmit = lastFormState && shallowEqual(lastFormState.dirtyFieldsSinceLastSubmit, dirtyFieldsSinceLastSubmit) ? lastFormState.dirtyFieldsSinceLastSubmit : dirtyFieldsSinceLastSubmit;\n    nextFormState.modified = lastFormState && shallowEqual(lastFormState.modified, modified) ? lastFormState.modified : modified;\n    nextFormState.touched = lastFormState && shallowEqual(lastFormState.touched, touched) ? lastFormState.touched : touched;\n    nextFormState.visited = lastFormState && shallowEqual(lastFormState.visited, visited) ? lastFormState.visited : visited;\n    return lastFormState && shallowEqual(lastFormState, nextFormState) ? lastFormState : nextFormState;\n  };\n\n  var callDebug = function callDebug() {\n    return debug && \"development\" !== \"production\" && debug(calculateNextFormState(), Object.keys(state.fields).reduce(function (result, key) {\n      result[key] = state.fields[key];\n      return result;\n    }, {}));\n  };\n\n  var notifying = false;\n  var scheduleNotification = false;\n\n  var notifyFormListeners = function notifyFormListeners() {\n    if (notifying) {\n      scheduleNotification = true;\n    } else {\n      notifying = true;\n      callDebug();\n\n      if (!inBatch && !(validationPaused && preventNotificationWhileValidationPaused)) {\n        var lastFormState = state.lastFormState;\n        var nextFormState = calculateNextFormState();\n\n        if (nextFormState !== lastFormState) {\n          state.lastFormState = nextFormState;\n          notify(state.subscribers, nextFormState, lastFormState, filterFormState);\n        }\n      }\n\n      notifying = false;\n\n      if (scheduleNotification) {\n        scheduleNotification = false;\n        notifyFormListeners();\n      }\n    }\n  };\n\n  var beforeSubmit = function beforeSubmit() {\n    return Object.keys(state.fields).some(function (name) {\n      return state.fields[name].beforeSubmit && state.fields[name].beforeSubmit() === false;\n    });\n  };\n\n  var afterSubmit = function afterSubmit() {\n    return Object.keys(state.fields).forEach(function (name) {\n      return state.fields[name].afterSubmit && state.fields[name].afterSubmit();\n    });\n  };\n\n  var resetModifiedAfterSubmit = function resetModifiedAfterSubmit() {\n    return Object.keys(state.fields).forEach(function (key) {\n      return state.fields[key].modifiedSinceLastSubmit = false;\n    });\n  }; // generate initial errors\n\n\n  runValidation(undefined, function () {\n    notifyFormListeners();\n  });\n  var api = {\n    batch: function batch(fn) {\n      inBatch++;\n      fn();\n      inBatch--;\n      notifyFieldListeners();\n      notifyFormListeners();\n    },\n    blur: function blur(name) {\n      var fields = state.fields,\n          formState = state.formState;\n      var previous = fields[name];\n\n      if (previous) {\n        // can only blur registered fields\n        delete formState.active;\n        fields[name] = _extends({}, previous, {\n          active: false,\n          touched: true\n        });\n\n        if (validateOnBlur) {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        } else {\n          notifyFieldListeners();\n          notifyFormListeners();\n        }\n      }\n    },\n    change: function change(name, value) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      if (getIn(formState.values, name) !== value) {\n        changeValue(state, name, function () {\n          return value;\n        });\n        var previous = fields[name];\n\n        if (previous) {\n          // only track modified for registered fields\n          fields[name] = _extends({}, previous, {\n            modified: true,\n            modifiedSinceLastSubmit: !!formState.lastSubmittedValues\n          });\n        }\n\n        if (validateOnBlur) {\n          notifyFieldListeners();\n          notifyFormListeners();\n        } else {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        }\n      }\n    },\n\n    get destroyOnUnregister() {\n      return !!destroyOnUnregister;\n    },\n\n    set destroyOnUnregister(value) {\n      destroyOnUnregister = value;\n    },\n\n    focus: function focus(name) {\n      var field = state.fields[name];\n\n      if (field && !field.active) {\n        state.formState.active = name;\n        field.active = true;\n        field.visited = true;\n        notifyFieldListeners();\n        notifyFormListeners();\n      }\n    },\n    mutators: mutatorsApi,\n    getFieldState: function getFieldState(name) {\n      var field = state.fields[name];\n      return field && field.lastFieldState;\n    },\n    getRegisteredFields: function getRegisteredFields() {\n      return Object.keys(state.fields);\n    },\n    getState: function getState() {\n      return calculateNextFormState();\n    },\n    initialize: function initialize(data) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      var safeFields = _extends({}, fields);\n\n      var values = typeof data === \"function\" ? data(formState.values) : data;\n\n      if (!keepDirtyOnReinitialize) {\n        formState.values = values;\n      }\n      /**\n       * Hello, inquisitive code reader! Thanks for taking the time to dig in!\n       *\n       * The following code is the way it is to allow for non-registered deep\n       * field values to be set via initialize()\n       */\n      // save dirty values\n\n\n      var savedDirtyValues = keepDirtyOnReinitialize ? Object.keys(safeFields).reduce(function (result, key) {\n        var field = safeFields[key];\n        var pristine = field.isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n        if (!pristine) {\n          result[key] = getIn(formState.values, key);\n        }\n\n        return result;\n      }, {}) : {}; // update initalValues and values\n\n      formState.initialValues = values;\n      formState.values = values; // restore the dirty values\n\n      Object.keys(savedDirtyValues).forEach(function (key) {\n        formState.values = setIn(formState.values, key, savedDirtyValues[key]);\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n    isValidationPaused: function isValidationPaused() {\n      return validationPaused;\n    },\n    pauseValidation: function pauseValidation(preventNotification) {\n      if (preventNotification === void 0) {\n        preventNotification = true;\n      }\n\n      validationPaused = true;\n      preventNotificationWhileValidationPaused = preventNotification;\n    },\n    registerField: function registerField(name, subscriber, subscription, fieldConfig) {\n      if (subscription === void 0) {\n        subscription = {};\n      }\n\n      if (!state.fieldSubscribers[name]) {\n        state.fieldSubscribers[name] = {\n          index: 0,\n          entries: {}\n        };\n      }\n\n      var index = state.fieldSubscribers[name].index++; // save field subscriber callback\n\n      state.fieldSubscribers[name].entries[index] = {\n        subscriber: memoize(subscriber),\n        subscription: subscription,\n        notified: false\n      };\n\n      if (!state.fields[name]) {\n        // create initial field state\n        state.fields[name] = {\n          active: false,\n          afterSubmit: fieldConfig && fieldConfig.afterSubmit,\n          beforeSubmit: fieldConfig && fieldConfig.beforeSubmit,\n          blur: function blur() {\n            return api.blur(name);\n          },\n          change: function change(value) {\n            return api.change(name, value);\n          },\n          data: fieldConfig && fieldConfig.data || {},\n          focus: function focus() {\n            return api.focus(name);\n          },\n          isEqual: fieldConfig && fieldConfig.isEqual || tripleEquals,\n          lastFieldState: undefined,\n          modified: false,\n          modifiedSinceLastSubmit: false,\n          name: name,\n          touched: false,\n          valid: true,\n          validateFields: fieldConfig && fieldConfig.validateFields,\n          validators: {},\n          validating: false,\n          visited: false\n        };\n      }\n\n      var haveValidator = false;\n      var silent = fieldConfig && fieldConfig.silent;\n\n      var notify = function notify() {\n        if (silent) {\n          notifyFieldListeners(name);\n        } else {\n          notifyFormListeners();\n          notifyFieldListeners();\n        }\n      };\n\n      if (fieldConfig) {\n        haveValidator = !!(fieldConfig.getValidator && fieldConfig.getValidator());\n\n        if (fieldConfig.getValidator) {\n          state.fields[name].validators[index] = fieldConfig.getValidator;\n        }\n\n        var noValueInFormState = getIn(state.formState.values, name) === undefined;\n\n        if (fieldConfig.initialValue !== undefined && (noValueInFormState || getIn(state.formState.values, name) === getIn(state.formState.initialValues, name)) // only initialize if we don't yet have any value for this field\n        ) {\n          state.formState.initialValues = setIn(state.formState.initialValues || {}, name, fieldConfig.initialValue);\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.initialValue);\n          runValidation(undefined, notify);\n        } // only use defaultValue if we don't yet have any value for this field\n\n\n        if (fieldConfig.defaultValue !== undefined && fieldConfig.initialValue === undefined && getIn(state.formState.initialValues, name) === undefined && noValueInFormState) {\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.defaultValue);\n        }\n      }\n\n      if (haveValidator) {\n        runValidation(undefined, notify);\n      } else {\n        notify();\n      }\n\n      return function () {\n        var validatorRemoved = false; // istanbul ignore next\n\n        if (state.fields[name]) {\n          // state.fields[name] may have been removed by a mutator\n          validatorRemoved = !!(state.fields[name].validators[index] && state.fields[name].validators[index]());\n          delete state.fields[name].validators[index];\n        }\n\n        var hasFieldSubscribers = !!state.fieldSubscribers[name];\n\n        if (hasFieldSubscribers) {\n          // state.fieldSubscribers[name] may have been removed by a mutator\n          delete state.fieldSubscribers[name].entries[index];\n        }\n\n        var lastOne = hasFieldSubscribers && !Object.keys(state.fieldSubscribers[name].entries).length;\n\n        if (lastOne) {\n          delete state.fieldSubscribers[name];\n          delete state.fields[name];\n\n          if (validatorRemoved) {\n            state.formState.errors = setIn(state.formState.errors, name, undefined) || {};\n          }\n\n          if (destroyOnUnregister) {\n            state.formState.values = setIn(state.formState.values, name, undefined, true) || {};\n          }\n        }\n\n        if (!silent) {\n          if (validatorRemoved) {\n            runValidation(undefined, function () {\n              notifyFormListeners();\n              notifyFieldListeners();\n            });\n          } else if (lastOne) {\n            // values or errors may have changed\n            notifyFormListeners();\n          }\n        }\n      };\n    },\n    reset: function reset(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n\n      if (state.formState.submitting) {\n        state.formState.resetWhileSubmitting = true;\n      }\n\n      state.formState.submitFailed = false;\n      state.formState.submitSucceeded = false;\n      delete state.formState.submitError;\n      delete state.formState.submitErrors;\n      delete state.formState.lastSubmittedValues;\n      api.initialize(initialValues || {});\n    },\n\n    /**\n     * Resets all field flags (e.g. touched, visited, etc.) to their initial state\n     */\n    resetFieldState: function resetFieldState(name) {\n      state.fields[name] = _extends({}, state.fields[name], {\n        active: false,\n        lastFieldState: undefined,\n        modified: false,\n        touched: false,\n        valid: true,\n        validating: false,\n        visited: false\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n\n    /**\n     * Returns the form to a clean slate; that is:\n     * - Clear all values\n     * - Resets all fields to their initial state\n     */\n    restart: function restart(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n\n      api.batch(function () {\n        for (var name in state.fields) {\n          api.resetFieldState(name);\n          state.fields[name] = _extends({}, state.fields[name], {\n            active: false,\n            lastFieldState: undefined,\n            modified: false,\n            modifiedSinceLastSubmit: false,\n            touched: false,\n            valid: true,\n            validating: false,\n            visited: false\n          });\n        }\n\n        api.reset(initialValues);\n      });\n    },\n    resumeValidation: function resumeValidation() {\n      validationPaused = false;\n      preventNotificationWhileValidationPaused = false;\n\n      if (validationBlocked) {\n        // validation was attempted while it was paused, so run it now\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n      }\n\n      validationBlocked = false;\n    },\n    setConfig: function setConfig(name, value) {\n      switch (name) {\n        case \"debug\":\n          debug = value;\n          break;\n\n        case \"destroyOnUnregister\":\n          destroyOnUnregister = value;\n          break;\n\n        case \"initialValues\":\n          api.initialize(value);\n          break;\n\n        case \"keepDirtyOnReinitialize\":\n          keepDirtyOnReinitialize = value;\n          break;\n\n        case \"mutators\":\n          mutators = value;\n\n          if (value) {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              if (!(key in value)) {\n                delete mutatorsApi[key];\n              }\n            });\n            Object.keys(value).forEach(function (key) {\n              mutatorsApi[key] = getMutatorApi(key);\n            });\n          } else {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              delete mutatorsApi[key];\n            });\n          }\n\n          break;\n\n        case \"onSubmit\":\n          onSubmit = value;\n          break;\n\n        case \"validate\":\n          validate = value;\n          runValidation(undefined, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n          break;\n\n        case \"validateOnBlur\":\n          validateOnBlur = value;\n          break;\n\n        default:\n          throw new Error(\"Unrecognised option \" + name);\n      }\n    },\n    submit: function submit() {\n      var formState = state.formState;\n\n      if (formState.submitting) {\n        return;\n      }\n\n      delete formState.submitErrors;\n      delete formState.submitError;\n      formState.lastSubmittedValues = _extends({}, formState.values);\n\n      if (hasSyncErrors()) {\n        markAllFieldsTouched();\n        resetModifiedAfterSubmit();\n        state.formState.submitFailed = true;\n        notifyFormListeners();\n        notifyFieldListeners();\n        return; // no submit for you!!\n      }\n\n      var asyncValidationPromisesKeys = Object.keys(asyncValidationPromises);\n\n      if (asyncValidationPromisesKeys.length) {\n        // still waiting on async validation to complete...\n        Promise.all(asyncValidationPromisesKeys.map(function (key) {\n          return asyncValidationPromises[Number(key)];\n        })).then(api.submit, console.error);\n        return;\n      }\n\n      var submitIsBlocked = beforeSubmit();\n\n      if (submitIsBlocked) {\n        return;\n      }\n\n      var resolvePromise;\n      var completeCalled = false;\n\n      var complete = function complete(errors) {\n        formState.submitting = false;\n        var resetWhileSubmitting = formState.resetWhileSubmitting;\n\n        if (resetWhileSubmitting) {\n          formState.resetWhileSubmitting = false;\n        }\n\n        if (errors && hasAnyError(errors)) {\n          formState.submitFailed = true;\n          formState.submitSucceeded = false;\n          formState.submitErrors = errors;\n          formState.submitError = errors[FORM_ERROR];\n          markAllFieldsTouched();\n        } else {\n          if (!resetWhileSubmitting) {\n            formState.submitFailed = false;\n            formState.submitSucceeded = true;\n          }\n\n          afterSubmit();\n        }\n\n        notifyFormListeners();\n        notifyFieldListeners();\n        completeCalled = true;\n\n        if (resolvePromise) {\n          resolvePromise(errors);\n        }\n\n        return errors;\n      };\n\n      formState.submitting = true;\n      formState.submitFailed = false;\n      formState.submitSucceeded = false;\n      formState.lastSubmittedValues = _extends({}, formState.values);\n      resetModifiedAfterSubmit(); // onSubmit is either sync, callback or async with a Promise\n\n      var result = onSubmit(formState.values, api, complete);\n\n      if (!completeCalled) {\n        if (result && isPromise(result)) {\n          // onSubmit is async with a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return result.then(complete, function (error) {\n            complete();\n            throw error;\n          });\n        } else if (onSubmit.length >= 3) {\n          // must be async, so we should return a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return new Promise(function (resolve) {\n            resolvePromise = resolve;\n          });\n        } else {\n          // onSubmit is sync\n          complete(result);\n        }\n      }\n    },\n    subscribe: function subscribe(subscriber, subscription) {\n      if (!subscriber) {\n        throw new Error(\"No callback given.\");\n      }\n\n      if (!subscription) {\n        throw new Error(\"No subscription provided. What values do you want to listen to?\");\n      }\n\n      var memoized = memoize(subscriber);\n      var subscribers = state.subscribers;\n      var index = subscribers.index++;\n      subscribers.entries[index] = {\n        subscriber: memoized,\n        subscription: subscription,\n        notified: false\n      };\n      var nextFormState = calculateNextFormState();\n      notifySubscriber(memoized, subscription, nextFormState, nextFormState, filterFormState, true);\n      return function () {\n        delete subscribers.entries[index];\n      };\n    }\n  };\n  return api;\n}\n\nexport { ARRAY_ERROR, FORM_ERROR, configOptions, createForm, fieldSubscriptionItems, formSubscriptionItems, getIn, setIn, version };\n"],"sourceRoot":""}
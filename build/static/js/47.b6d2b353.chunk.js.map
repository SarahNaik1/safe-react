{"version":3,"sources":["routes/safe/components/Transactions/helpers/TxModalWrapper/index.tsx","assets/icons/qrcode.svg","components/ScanQRModal/style.ts","components/ScanQRModal/index.tsx","components/ScanQRModal/ScanQRWrapper/index.tsx","components/forms/SelectField/index.tsx","components/layout/Heading/index.tsx","components/Table/TableHead.tsx","components/layout/Heading/index.module.scss","../node_modules/react-final-form-listeners/dist/react-final-form-listeners.es.js","components/Table/sorting.ts","components/Table/index.tsx","components/forms/AddressInput/index.tsx","../node_modules/@material-ui/core/esm/Toolbar/Toolbar.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/OwnerForm/style.ts","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/OwnerForm/index.tsx","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/Review/style.ts","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/Review/index.tsx","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/ThresholdForm/style.ts","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/ThresholdForm/index.tsx","routes/safe/components/Settings/ManageOwners/AddOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/EditOwnerModal/style.ts","routes/safe/components/Settings/ManageOwners/EditOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/CheckOwner/style.ts","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/CheckOwner/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/Review/style.ts","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/Review/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/ThresholdForm/style.ts","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/ThresholdForm/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/OwnerForm/style.ts","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/OwnerForm/index.tsx","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/Review/style.ts","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/Review/index.tsx","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/dataFetcher.ts","routes/safe/components/Settings/ManageOwners/style.ts","routes/safe/components/Settings/ManageOwners/index.tsx"],"names":["Container","styled","div","lg","md","TxModalWrapper","children","operation","txData","txValue","txTo","txType","onSubmit","onBack","submitText","isConfirmDisabled","useState","manualSafeTxGas","setManualSafeTxGas","manualGasPrice","setManualGasPrice","manualMaxPrioFee","setManualMaxPrioFee","manualGasLimit","setManualGasLimit","manualSafeNonce","setManualSafeNonce","executionApproved","setExecutionApproved","safeAddress","extractSafeAddress","isSpendingLimitTx","isSpendingLimit","useEstimateTransactionGas","txRecipient","txAmount","safeTxGas","gasCostFormatted","gasPriceFormatted","gasMaxPrioFeeFormatted","gasLimit","gasEstimation","txEstimationExecutionStatus","isCreation","isOffChainSignature","useEstimationStatus","submitStatus","setSubmitStatus","canTxExecute","useCanTxExecute","undefined","doExecute","onClose","txParameters","oldGasPrice","newGasPrice","ethGasPrice","oldGasLimit","newGasLimit","ethGasLimit","oldMaxPrioFee","newMaxPrioFee","ethMaxPrioFee","oldSafeTxGas","newSafeTxGas","newSafeNonce","safeNonce","newSafeNonceNumber","parseInt","isExecution","closeEditModalCallback","toggleEditMode","onChange","onEdit","isTransactionCreation","isTransactionExecution","Footer","withoutBorder","ButtonStatus","LOADING","Buttons","cancelButtonProps","onClick","text","confirmButtonProps","READY","logError","Errors","_802","onSubmitClick","status","disabled","EstimationStatus","testId","styles","createStyles","heading","padding","justifyContent","maxHeight","boxSizing","loaderContainer","width","height","close","color","secondaryText","detailsContainer","backgroundColor","background","buttonRow","button","marginLeft","sm","useStyles","makeStyles","ScanQRModal","isOpen","onScan","classes","fileUploadModalOpen","setFileUploadModalOpen","error","setError","cameraBlocked","setCameraBlocked","scannerRef","React","openImageDialog","current","useEffect","onFileScannedResolve","successData","console","name","Modal","description","handleClose","open","title","Row","align","className","grow","Paragraph","noMargin","size","IconButton","disableRipple","Hairline","Col","layout","middle","Block","margin","legacyMode","onError","err","data","ref","style","facingMode","Button","minWidth","variant","qrCodeBtn","cursor","ScanQRWrapper","handleScan","qrModalOpen","setQrModalOpen","closeQrModal","Img","alt","role","src","QRIcon","value","SelectInput","disableError","formControlProps","input","restInput","label","meta","renderValue","rest","showError","submitError","dirtySinceLastSubmit","touched","inputProps","htmlFor","cx","classNames","bind","Heading","props","tag","truncate","capitalize","cellWidth","maxWidth","GnoTableHead","changeSort","property","orderAttr","onSort","this","columns","order","orderBy","map","column","disablePadding","sortDirection","id","static","active","direction","module","exports","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_inheritsLoose","subClass","superClass","create","constructor","__proto__","Component","OnChangeState","_React$Component","_this","state","previous","_proto","componentDidUpdate","_this$props","setState","render","OnChange","_ref","createElement","Field","subscription","allowNull","desc","a","b","orderProp","format","root","borderTopRightRadius","borderTopLeftRadius","boxShadow","selectRoot","lineHeight","xxl","white","paginationRoot","marginBottom","borderBottomRightRadius","borderBottomLeftRadius","loader","backProps","nextProps","GnoTable","newOrderBy","defaultOrder","newOrder","fixed","getEmptyStyle","display","alignItems","handleChangePage","e","page","handleChangeRowsPerPage","rowsPerPage","Number","defaultOrderBy","find","defaultFixed","defaultRowsPerPage","disableLoadingOnEmptyTable","disablePagination","noBorder","orderByParam","orderParam","displayRows","fixedParam","paginationClasses","columnSort","sortedData","dataArray","cmp","fixedElems","filter","elem","List","stabilizedThis","el","index","sortedElems","sort","concat","stableSort","getSorting","formatTypeSort","slice","isEmpty","Table","TableHead","TableBody","TablePagination","backIconButtonProps","component","count","nextIconButtonProps","onPageChange","onRowsPerPageChange","rowsPerPageOptions","defaultProps","withStyles","AddressInput","placeholder","fieldMutator","inputAdornment","validators","defaultValue","currentInput","setCurrentInput","resolutions","setResolutions","resolvedAddress","isResolving","sanitizedValidators","useCallback","val","parsed","parsePrefixedAddress","composeValidators","address","allValidators","useMemo","required","mustBeEthereumAddress","onValueChange","rawVal","trimSpaces","isValidEnsName","isValidCryptoDomainName","prev","getAddressFromDomain","then","resolverAddr","formattedAddress","checksumAddress","catch","_101","message","checkedAddress","adornment","endAdornment","position","TextField","spellCheck","validate","Toolbar","_props$component","_props$disableGutters","disableGutters","_props$variant","other","_objectWithoutProperties","clsx","gutters","theme","_defineProperty","paddingLeft","spacing","paddingRight","breakpoints","up","regular","mixins","toolbar","dense","minHeight","KeyboardArrowRight","_ref2","KeyboardArrowLeft","_ref3","_ref4","TablePaginationActions","_props$onChangePage","onChangePage","_props$onPageChange","useTheme","event","Math","ceil","defaultLabelDisplayedRows","from","to","defaultRowsPerPageOptions","colSpan","_props$ActionsCompone","ActionsComponent","_props$backIconButton","backIconButtonText","colSpanProp","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","_props$nextIconButton","nextIconButtonText","onChangeRowsPerPageProp","onChangeRowsPerPage","onRowsPerPageChangeProp","_props$rowsPerPageOpt","_props$SelectProps","SelectProps","selectId","useId","labelId","MenuItemComponent","native","MenuItem","spacer","Typography","caption","Select","select","icon","selectIcon","InputBase","rowsPerPageOption","menuItem","min","actions","palette","primary","fontSize","typography","pxToRem","overflow","flex","flexShrink","marginRight","textAlign","textAlignLast","formContainer","gap","ADD_OWNER_NAME_INPUT_TEST_ID","ADD_OWNER_ADDRESS_INPUT_TEST_ID","ADD_OWNER_NEXT_BTN_TEST_ID","formMutators","setOwnerAddress","args","utils","changeValue","setOwnerName","OwnerForm","initialValues","addressBookMap","useSelector","currentNetworkAddressBookAsMap","currentSafe","owners","ownerDoesntExist","uniqueAddress","ownerAddressIsNotSafeAddress","addressIsNotCurrentSafe","ModalHeader","subTitle","GnoForm","ownerName","ownerAddress","values","mutators","scannedAddress","startsWith","replace","xs","type","validAddressBookName","isValidAddress","center","info","flexDirection","details","borderRight","border","ownersTitle","owner","textOverflow","selectedOwner","ReviewAddOwner","onClickBack","setData","currentSafeWithNames","safeName","safeVersion","currentVersion","connectedWalletAddress","userAccountSelector","isCurrent","calculateAddOwnerData","getSafeSDK","sdk","getAddOwnerTx","threshold","safeTx","_811","weight","PrefixedEthHashInfo","hash","showCopyBtn","showAvatar","explorerUrl","getExplorerInfo","headingText","ownersText","inputRow","errorText","bottom","ThresholdForm","numOptions","toString","SelectField","Array","x","mustBeInteger","minValue","maxValue","sendAddOwner","dispatch","delayExecution","createTransaction","valueInWei","txNonce","ethParameters","notifiedTransaction","TX_NOTIFICATION_TYPES","SETTINGS_CHANGE_TX","addressBookAddOrUpdate","makeAddressBookEntry","chainId","_getChainId","AddOwnerModal","activeScreen","setActiveScreen","setValues","useDispatch","currentSafeCurrentVersion","currentChainId","onAddOwner","_808","paperClassName","newValues","stateValues","manage","container","RENAME_OWNER_INPUT_TEST_ID","SAVE_OWNER_CHANGES_BTN_TEST_ID","EditOwnerModal","enqueueSnackbar","NOTIFICATIONS","OWNER_NAME_CHANGE_EXECUTED_MSG","pristine","initialValue","justify","CheckOwner","ReviewRemoveOwnerModal","calculateRemoveOwnerData","getRemoveOwnerTx","ErrorCodes","_812","safeOwner","sameAddress","ownersCount","defaultThreshold","sendRemoveOwner","ownerAddressToRemove","RemoveOwnerModal","onRemoveOwner","_809","cpValues","REPLACE_OWNER_NAME_INPUT_TEST_ID","REPLACE_OWNER_ADDRESS_INPUT_TEST_ID","REPLACE_OWNER_NEXT_BTN_TEST_ID","selectedOwnerRemoved","selectedOwnerAdded","ReviewReplaceOwnerModal","newOwner","calculateReplaceOwnerData","getSwapOwnerTx","oldOwnerAddress","newOwnerAddress","_813","sendReplaceOwner","ReplaceOwnerModal","setNewOwner","onReplaceOwner","_810","checksumAddr","OWNERS_TABLE_NAME_ID","OWNERS_TABLE_ADDRESS_ID","paddingBottom","annotation","hide","visibility","noBorderBottom","borderBottom","editOwnerIcon","replaceOwnerIcon","controlsRow","borderRadius","removeOwnerIcon","RENAME_OWNER_BTN_TEST_ID","REMOVE_OWNER_BTN_TEST_ID","ADD_OWNER_BTN_TEST_ID","REPLACE_OWNER_BTN_TEST_ID","OWNERS_ROW_TEST_ID","ManageOwners","granted","trackEvent","useAnalytics","setSelectedOwner","showAddOwner","showRemoveOwner","showReplaceOwner","showEditOwner","modalsStatus","setModalStatus","onShow","action","row","prevState","onHide","Boolean","SETTINGS_EVENTS","OWNERS","nameColumn","toLowerCase","custom","addressColumn","actionsColumn","generateColumns","autoColumns","c","ownerData","getOwnerData","TableContainer","TableRow","cn","ButtonHelper","dataTestId","tooltip","end"],"mappings":"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","file":"static/js/47.b6d2b353.chunk.js","sourcesContent":["import { ReactNode, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\nimport { extractSafeAddress } from 'src/routes/routes'\nimport { ReviewInfoText } from 'src/components/ReviewInfoText'\nimport ExecuteCheckbox from 'src/components/ExecuteCheckbox'\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { ButtonStatus, Modal } from 'src/components/Modal'\nimport { lg, md } from 'src/theme/variables'\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\nimport { isSpendingLimit } from 'src/routes/safe/components/Transactions/helpers/utils'\nimport useCanTxExecute from 'src/logic/hooks/useCanTxExecute'\n\ntype Props = {\n  children: ReactNode\n  operation?: number\n  txData: string\n  txValue?: string\n  txTo?: string\n  txType?: string\n  onSubmit: (txParams: TxParameters, delayExecution?: boolean) => void\n  onBack?: (...rest: any) => void\n  submitText?: string\n  isConfirmDisabled?: boolean\n}\n\nconst Container = styled.div`\n  padding: 0 ${lg} ${md};\n`\n\nexport const TxModalWrapper = ({\n  children,\n  operation,\n  txData,\n  txValue = '0',\n  txTo,\n  txType,\n  onSubmit,\n  onBack,\n  submitText,\n  isConfirmDisabled,\n}: Props): React.ReactElement => {\n  const [manualSafeTxGas, setManualSafeTxGas] = useState('0')\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\n  const [manualMaxPrioFee, setManualMaxPrioFee] = useState<string | undefined>()\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\n  const [manualSafeNonce, setManualSafeNonce] = useState<number | undefined>()\n  const [executionApproved, setExecutionApproved] = useState<boolean>(true)\n  const safeAddress = extractSafeAddress()\n  const isSpendingLimitTx = isSpendingLimit(txType)\n\n  const {\n    gasCostFormatted,\n    gasPriceFormatted,\n    gasMaxPrioFeeFormatted,\n    gasLimit,\n    gasEstimation,\n    txEstimationExecutionStatus,\n    isCreation,\n    isOffChainSignature,\n  } = useEstimateTransactionGas({\n    txData,\n    txRecipient: txTo || safeAddress,\n    txType,\n    txAmount: txValue,\n    safeTxGas: manualSafeTxGas,\n    manualGasPrice,\n    manualMaxPrioFee,\n    manualGasLimit,\n    manualSafeNonce,\n    operation,\n  })\n\n  const [submitStatus, setSubmitStatus] = useEstimationStatus(txEstimationExecutionStatus)\n\n  const canTxExecute = useCanTxExecute(undefined, manualSafeNonce)\n  const doExecute = executionApproved && canTxExecute\n\n  const onClose = (txParameters: TxParameters) => {\n    const oldGasPrice = gasPriceFormatted\n    const newGasPrice = txParameters.ethGasPrice\n    const oldGasLimit = gasLimit\n    const newGasLimit = txParameters.ethGasLimit\n    const oldMaxPrioFee = gasMaxPrioFeeFormatted\n    const newMaxPrioFee = txParameters.ethMaxPrioFee\n    const oldSafeTxGas = gasEstimation\n    const newSafeTxGas = txParameters.safeTxGas\n    const newSafeNonce = txParameters.safeNonce\n\n    if (oldGasPrice !== newGasPrice) {\n      setManualGasPrice(newGasPrice)\n    }\n\n    if (oldMaxPrioFee !== newMaxPrioFee) {\n      setManualMaxPrioFee(newMaxPrioFee)\n    }\n\n    if (oldGasLimit !== newGasLimit) {\n      setManualGasLimit(newGasLimit)\n    }\n\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\n      setManualSafeTxGas(newSafeTxGas)\n    }\n\n    if (newSafeNonce) {\n      const newSafeNonceNumber = parseInt(newSafeNonce, 10)\n      setManualSafeNonce(newSafeNonceNumber)\n    }\n  }\n\n  const onSubmitClick = (txParameters: TxParameters) => {\n    setSubmitStatus(ButtonStatus.LOADING)\n\n    if (!safeAddress) {\n      setSubmitStatus(ButtonStatus.READY)\n      logError(Errors._802)\n      return\n    }\n\n    onSubmit(txParameters, !doExecute)\n  }\n\n  return (\n    <EditableTxParameters\n      isOffChainSignature={isOffChainSignature}\n      isExecution={doExecute}\n      ethGasLimit={gasLimit}\n      ethGasPrice={gasPriceFormatted}\n      ethMaxPrioFee={gasMaxPrioFeeFormatted}\n      safeTxGas={gasEstimation}\n      closeEditModalCallback={onClose}\n    >\n      {(txParameters: TxParameters, toggleEditMode: () => unknown) => (\n        <>\n          {children}\n\n          <Container>\n            {!isSpendingLimitTx && canTxExecute && <ExecuteCheckbox onChange={setExecutionApproved} />}\n\n            {/* Tx Parameters */}\n            {/* FIXME TxParameters should be updated to be used with spending limits */}\n            {!isSpendingLimitTx && (\n              <TxParametersDetail\n                txParameters={txParameters}\n                onEdit={toggleEditMode}\n                isTransactionCreation={isCreation}\n                isTransactionExecution={doExecute}\n                isOffChainSignature={isOffChainSignature}\n              />\n            )}\n          </Container>\n\n          {!isSpendingLimitTx && (\n            <ReviewInfoText\n              gasCostFormatted={gasCostFormatted}\n              isCreation={isCreation}\n              isExecution={doExecute}\n              safeNonce={txParameters.safeNonce}\n              txEstimationExecutionStatus={txEstimationExecutionStatus}\n            />\n          )}\n\n          {/* Footer */}\n          <Modal.Footer withoutBorder={!isSpendingLimitTx && submitStatus !== ButtonStatus.LOADING}>\n            <Modal.Footer.Buttons\n              cancelButtonProps={{ onClick: onBack || onClose, text: 'Back' }}\n              confirmButtonProps={{\n                onClick: () => onSubmitClick(txParameters),\n                status: submitStatus,\n                disabled: isConfirmDisabled,\n                text: txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : submitText,\n                testId: 'submit-tx-btn',\n              }}\n            />\n          </Modal.Footer>\n        </>\n      )}\n    </EditableTxParameters>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/qrcode.fec1b6d8.svg\";","import { background, lg, secondaryText, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: lg,\n    justifyContent: 'space-between',\n    maxHeight: '75px',\n    boxSizing: 'border-box',\n  },\n  loaderContainer: {\n    width: '100%',\n    height: '100%',\n  },\n  close: {\n    height: '25px',\n    width: '25px',\n    color: secondaryText,\n  },\n  detailsContainer: {\n    backgroundColor: background,\n    maxHeight: '450px',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n  button: {\n    '&:last-child': {\n      marginLeft: sm,\n    },\n  },\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport * as React from 'react'\nimport QrReader from 'react-qr-reader'\n\nimport { styles } from './style'\n\nimport Modal from 'src/components/Modal'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { useEffect, useState } from 'react'\n\nconst useStyles = makeStyles(styles)\n\ntype Props = {\n  isOpen: boolean\n  onClose: () => void\n  onScan: (value: string) => void\n}\n\nexport const ScanQRModal = ({ isOpen, onClose, onScan }: Props): React.ReactElement => {\n  const classes = useStyles()\n  const [fileUploadModalOpen, setFileUploadModalOpen] = useState<boolean>(false)\n  const [error, setError] = useState<string | null>(null)\n  const [cameraBlocked, setCameraBlocked] = useState<boolean>(false)\n  const scannerRef: any = React.createRef()\n  const openImageDialog = React.useCallback(() => {\n    scannerRef.current.openImageDialog()\n  }, [scannerRef])\n\n  useEffect(() => {\n    if (!fileUploadModalOpen && cameraBlocked && !error) {\n      setFileUploadModalOpen(true)\n      openImageDialog()\n    }\n  }, [cameraBlocked, openImageDialog, fileUploadModalOpen, setFileUploadModalOpen, error])\n\n  const onFileScannedResolve = (error: Error | null, successData: string | null) => {\n    if (error) {\n      console.error('QR code error', error)\n\n      if (error.name === 'NotAllowedError' || error.name === 'PermissionDismissedError') {\n        setCameraBlocked(true)\n        setFileUploadModalOpen(false)\n      } else {\n        setError('The QR could not be read')\n      }\n      return\n    }\n\n    if (successData) {\n      onScan(successData)\n    } else if (cameraBlocked) {\n      setError('The QR could not be read')\n    }\n  }\n\n  return (\n    <Modal description=\"Receive Tokens Form\" handleClose={onClose} open={isOpen} title=\"Receive Tokens\">\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph noMargin size=\"xl\">\n          Scan QR\n        </Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.close} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Col className={classes.detailsContainer} layout=\"column\" middle=\"xs\">\n        {error && (\n          <Block padding=\"md\" margin=\"md\">\n            {error}\n          </Block>\n        )}\n        <QrReader\n          legacyMode={cameraBlocked}\n          onError={(err: Error) => onFileScannedResolve(err, null)}\n          onScan={(data: string) => onFileScannedResolve(null, data)}\n          ref={scannerRef}\n          style={{ width: '400px', height: '400px' }}\n          facingMode=\"user\"\n        />\n      </Col>\n      <Hairline />\n      <Row align=\"center\" className={classes.buttonRow}>\n        <Button className={classes.button} color=\"secondary\" minWidth={154} onClick={onClose}>\n          Close\n        </Button>\n        <Button\n          className={classes.button}\n          color=\"primary\"\n          minWidth={154}\n          onClick={() => {\n            setCameraBlocked(true)\n            setError(null)\n            setFileUploadModalOpen(false)\n          }}\n          variant=\"contained\"\n        >\n          Upload an image\n        </Button>\n      </Row>\n    </Modal>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport { ReactElement, useState } from 'react'\n\nimport QRIcon from 'src/assets/icons/qrcode.svg'\nimport { ScanQRModal } from 'src/components/ScanQRModal'\nimport Img from 'src/components/layout/Img'\n\nconst useStyles = makeStyles({\n  qrCodeBtn: {\n    cursor: 'pointer',\n  },\n})\n\ntype Props = {\n  handleScan: (dataResult: string, closeQrModal: () => void) => void\n  testId?: string\n}\n\nexport const ScanQRWrapper = ({ handleScan, testId }: Props): ReactElement => {\n  const classes = useStyles()\n  const [qrModalOpen, setQrModalOpen] = useState(false)\n\n  const openQrModal = () => {\n    setQrModalOpen(true)\n  }\n\n  const closeQrModal = () => {\n    setQrModalOpen(false)\n  }\n\n  const onScanFinished = (value: string) => {\n    handleScan(value, closeQrModal)\n  }\n\n  return (\n    <>\n      <Img\n        alt=\"Scan QR\"\n        className={classes.qrCodeBtn}\n        height={20}\n        onClick={() => openQrModal()}\n        role=\"button\"\n        src={QRIcon}\n        testId={testId || 'qr-icon'}\n      />\n      {qrModalOpen && <ScanQRModal isOpen={qrModalOpen} onClose={closeQrModal} onScan={onScanFinished} />}\n    </>\n  )\n}\n","import FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\n\nconst style = {\n  minWidth: '100%',\n}\n\nconst SelectInput = ({\n  classes,\n  disableError,\n  formControlProps,\n  input: { name, onChange, value, ...restInput },\n  label,\n  meta,\n  renderValue,\n  ...rest\n}) => {\n  const showError = ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) && meta.touched && !disableError\n  const inputProps = {\n    ...restInput,\n    name,\n  }\n\n  return (\n    <FormControl {...formControlProps} error={showError} style={style}>\n      <InputLabel htmlFor={name}>{label}</InputLabel>\n      <Select\n        classes={classes}\n        inputProps={inputProps}\n        onChange={onChange}\n        renderValue={renderValue}\n        value={value}\n        {...rest}\n      />\n      {showError && <FormHelperText>{meta.error || meta.submitError}</FormHelperText>}\n    </FormControl>\n  )\n}\n\nexport default SelectInput\n","import classNames from 'classnames/bind'\nimport * as React from 'react'\n\nimport styles from './index.module.scss'\n\nimport { capitalize } from 'src/utils/css'\n\nconst cx = classNames.bind(styles)\n\nconst Heading = (props) => {\n  const { align, children, className = '', color, margin, tag, testId, truncate, ...rest } = props\n\n  const classes = cx(className, 'heading', align, tag, margin ? capitalize(margin, 'margin') : undefined, color, {\n    truncate,\n  })\n\n  return React.createElement(tag, { ...rest, className: classes, 'data-testid': testId || '' }, children)\n}\n\nexport default Heading\n","import TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport * as React from 'react'\n\ninterface CellWidth {\n  maxWidth: string\n}\n\nexport const cellWidth = (width?: string | number): CellWidth | undefined => {\n  if (!width) {\n    return undefined\n  }\n\n  return {\n    maxWidth: `${width}px`,\n  }\n}\n\nclass GnoTableHead extends React.PureComponent<any> {\n  changeSort =\n    (property: string, orderAttr: string): (() => void) =>\n    () => {\n      const { onSort } = this.props\n\n      onSort(property, orderAttr)\n    }\n\n  render(): React.ReactElement {\n    const { columns, order, orderBy } = this.props\n\n    return (\n      <TableHead>\n        <TableRow>\n          {columns.map((column) => (\n            <TableCell\n              align={column.align}\n              key={column.id}\n              padding={column.disablePadding ? 'none' : 'normal'}\n              sortDirection={orderBy === column.id ? order : false}\n            >\n              {column.static ? (\n                <div style={column.style}>{column.label}</div>\n              ) : (\n                <TableSortLabel\n                  active={orderBy === column.id}\n                  direction={order}\n                  onClick={this.changeSort(column.id, column.order)}\n                  style={column.style}\n                >\n                  {column.label}\n                </TableSortLabel>\n              )}\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    )\n  }\n}\n\nexport default GnoTableHead\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Heading_heading__3Wz9P\",\"h1\":\"Heading_h1__MXfCA\",\"h2\":\"Heading_h2__3X6Ts\",\"h3\":\"Heading_h3__1k2fD\",\"h4\":\"Heading_h4__1YCmR\",\"center\":\"Heading_center__28MHY\",\"right\":\"Heading_right__1fQM1\",\"truncate\":\"Heading_truncate__2Lq93\",\"marginSm\":\"Heading_marginSm__13YwX\",\"marginMd\":\"Heading_marginMd__2AnZN\",\"marginLg\":\"Heading_marginLg__2ZfEq\",\"marginXl\":\"Heading_marginXl__3RHt7\",\"soft\":\"Heading_soft__2Zu43\",\"medium\":\"Heading_medium__2X8Z-\",\"dark\":\"Heading_dark__Ds2QB\",\"fancy\":\"Heading_fancy__1Wx6l\",\"warning\":\"Heading_warning__2lrZC\",\"primary\":\"Heading_primary__2hOk2\",\"secondary\":\"Heading_secondary__37lKs\",\"disabled\":\"Heading_disabled__30DjG\",\"error\":\"Heading_error__t5ujr\",\"white\":\"Heading_white__2gkIK\"};","import { createElement, Component } from 'react';\nimport { Field } from 'react-final-form';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar ExternallyChangedState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ExternallyChangedState, _React$Component);\n\n  function ExternallyChangedState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: props.input.value,\n      externallyChanged: false\n    };\n    return _this;\n  }\n\n  var _proto = ExternallyChangedState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        value = _this$props.input.value,\n        active = _this$props.meta.active;\n    var previous = this.state.previous;\n\n    if (value !== previous) {\n      this.setState({\n        previous: value,\n        externallyChanged: !active\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    return this.props.children(this.state.externallyChanged);\n  };\n\n  return ExternallyChangedState;\n}(Component);\n\nvar ExternallyChanged = function ExternallyChanged(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      active: true,\n      value: true\n    },\n    allowNull: true,\n    render: function render(props) {\n      return createElement(ExternallyChangedState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nvar OnBlurState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(OnBlurState, _React$Component);\n\n  function OnBlurState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: !!props.meta.active\n    };\n    return _this;\n  }\n\n  var _proto = OnBlurState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        active = _this$props.meta.active;\n    var previous = this.state.previous;\n\n    if (previous && !active) {\n      children();\n    }\n\n    if (previous !== active) {\n      this.setState({\n        previous: active\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return OnBlurState;\n}(Component);\n\nvar OnBlur = function OnBlur(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      active: true\n    },\n    render: function render(props) {\n      return createElement(OnBlurState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nvar OnChangeState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(OnChangeState, _React$Component);\n\n  function OnChangeState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: props.input.value\n    };\n    return _this;\n  }\n\n  var _proto = OnChangeState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        value = _this$props.input.value;\n    var previous = this.state.previous;\n\n    if (value !== previous) {\n      this.setState({\n        previous: value\n      });\n      children(value, previous);\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return OnChangeState;\n}(Component);\n\nvar OnChange = function OnChange(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      value: true\n    },\n    allowNull: true,\n    render: function render(props) {\n      return createElement(OnChangeState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nvar OnFocusState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(OnFocusState, _React$Component);\n\n  function OnFocusState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: !!props.meta.active\n    };\n    return _this;\n  }\n\n  var _proto = OnFocusState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        active = _this$props.meta.active;\n    var previous = this.state.previous;\n\n    if (active && !previous) {\n      this.setState({\n        previous: active\n      });\n      children();\n    } else if (!active && previous) {\n      this.setState({\n        previous: active\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return OnFocusState;\n}(Component);\n\nvar OnFocus = function OnFocus(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      active: true\n    },\n    render: function render(props) {\n      return createElement(OnFocusState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nexport { ExternallyChanged, OnBlur, OnChange, OnFocus };\n","import { List } from 'immutable'\n\nexport const FIXED = 'fixed'\n\nexport const buildOrderFieldFrom = (attr: string): string => `${attr}Order`\n\nconst desc = (\n  a: string,\n  b: string,\n  orderBy: string,\n  orderProp: boolean,\n  format: (value: string | number) => string | number,\n): number => {\n  const order = orderProp ? buildOrderFieldFrom(orderBy) : orderBy\n\n  if (format(b[order]) < format(a[order])) {\n    return -1\n  }\n  if (format(b[order]) > format(a[order])) {\n    return 1\n  }\n\n  return 0\n}\n\n// eslint-disable-next-line\nexport const stableSort = (dataArray, cmp, fixed) => {\n  const fixedElems = fixed ? dataArray.filter((elem) => elem.fixed) : List([])\n  const data = fixed ? dataArray.filter((elem) => !elem[FIXED]) : dataArray\n  let stabilizedThis = data.map((el, index) => [el, index])\n\n  stabilizedThis = stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0])\n\n    if (order !== 0) {\n      return order\n    }\n\n    return a[1] - b[1]\n  })\n\n  const sortedElems = stabilizedThis.map((el) => el[0])\n\n  return fixedElems.concat(sortedElems)\n}\n\nexport const getSorting = (\n  order: 'desc' | 'asc',\n  orderBy: string,\n  orderProp: boolean,\n  format: (value: string | number) => string | number = (value) => value,\n): ((a: string, b: string) => number) =>\n  order === 'desc'\n    ? (a, b) => desc(a, b, orderBy, orderProp, format)\n    : (a, b) => -desc(a, b, orderBy, orderProp, format)\n","import { Loader } from '@gnosis.pm/safe-react-components'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport { withStyles } from '@material-ui/core/styles'\nimport * as React from 'react'\n\nimport TableHead from 'src/components/Table/TableHead'\nimport { getSorting, stableSort } from 'src/components/Table/sorting'\nimport Row from 'src/components/layout/Row'\nimport { sm, xxl } from 'src/theme/variables'\n\nconst styles = {\n  root: {\n    backgroundColor: 'white',\n    borderTopRightRadius: sm,\n    borderTopLeftRadius: sm,\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n  },\n  selectRoot: {\n    lineHeight: xxl,\n    backgroundColor: 'white',\n  },\n  white: {\n    backgroundColor: 'white',\n  },\n  paginationRoot: {\n    backgroundColor: 'white',\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n    marginBottom: '90px',\n    borderBottomRightRadius: sm,\n    borderBottomLeftRadius: sm,\n  },\n  loader: {\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n  },\n}\n\nconst FIXED_EMPTY_HEIGHT = 255\n\nconst backProps = {\n  'aria-label': 'Previous Page',\n}\n\nconst nextProps = {\n  'aria-label': 'Next Page',\n}\n\nclass GnoTable extends React.Component<any, any> {\n  static defaultProps = {\n    defaultOrder: 'asc',\n    disablePagination: false,\n    defaultRowsPerPage: 5,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      page: 0,\n      order: undefined,\n      orderBy: undefined,\n      fixed: undefined,\n      orderProp: false,\n      rowsPerPage: undefined,\n    }\n  }\n\n  componentDidMount() {\n    const { columns, defaultOrderBy } = this.props\n\n    if (defaultOrderBy && columns) {\n      const defaultOrderCol = columns.find(({ id }) => id === defaultOrderBy)\n\n      if (defaultOrderCol.order) {\n        this.setState({\n          orderProp: true,\n        })\n      }\n    }\n  }\n\n  onSort = (newOrderBy, orderProp) => {\n    const { order, orderBy } = this.state\n    const { defaultOrder } = this.props\n    let newOrder = 'desc'\n\n    // if table was previously sorted by the user\n    if (order && orderBy === newOrderBy && order === 'desc') {\n      newOrder = 'asc'\n    } else if (!order && defaultOrder === 'desc') {\n      // if it was not sorted and defaultOrder is used\n      newOrder = 'asc'\n    }\n\n    this.setState(() => ({\n      order: newOrder,\n      orderBy: newOrderBy,\n      orderProp,\n      fixed: false,\n    }))\n  }\n\n  getEmptyStyle = () => ({\n    height: `calc(100vh - ${FIXED_EMPTY_HEIGHT}px)`,\n    borderTopRightRadius: sm,\n    borderTopLeftRadius: sm,\n    backgroundColor: 'white',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  })\n\n  handleChangePage = (e, page) => {\n    this.setState({ page })\n  }\n\n  handleChangeRowsPerPage = (e) => {\n    const rowsPerPage = Number(e.target.value)\n    this.setState({ rowsPerPage })\n  }\n\n  render() {\n    const {\n      children,\n      classes,\n      columns,\n      data,\n      defaultFixed,\n      defaultOrder,\n      defaultOrderBy,\n      defaultRowsPerPage,\n      disableLoadingOnEmptyTable,\n      disablePagination,\n      label,\n      noBorder,\n      size,\n    }: any = this.props\n    const { fixed, order, orderBy, orderProp, page, rowsPerPage } = this.state\n    const orderByParam = orderBy || defaultOrderBy\n    const orderParam = order || defaultOrder\n    const displayRows = rowsPerPage || defaultRowsPerPage\n    const fixedParam = typeof fixed !== 'undefined' ? fixed : !!defaultFixed\n    const paginationClasses = {\n      selectRoot: classes.selectRoot,\n      root: !noBorder && classes.paginationRoot,\n      input: classes.white,\n    }\n    const columnSort = columns.find((column) => column.id === orderByParam)\n    let sortedData = stableSort(\n      data,\n      getSorting(orderParam, orderByParam, orderProp, columnSort?.formatTypeSort),\n      fixedParam,\n    )\n\n    if (!disablePagination) {\n      sortedData = sortedData.slice(page * displayRows, page * displayRows + displayRows)\n    }\n\n    const isEmpty = size === 0 && !disableLoadingOnEmptyTable\n\n    return (\n      <>\n        {!isEmpty && (\n          <Table aria-labelledby={label} className={noBorder ? '' : classes.root}>\n            <TableHead columns={columns} onSort={this.onSort} order={order} orderBy={orderByParam} />\n            <TableBody>{children(sortedData)}</TableBody>\n          </Table>\n        )}\n        {isEmpty && (\n          <Row className={classes.loader} style={this.getEmptyStyle()}>\n            <Loader size=\"sm\" />\n          </Row>\n        )}\n        {!disablePagination && (\n          <TablePagination\n            backIconButtonProps={backProps}\n            classes={paginationClasses}\n            component=\"div\"\n            count={size}\n            nextIconButtonProps={nextProps}\n            onPageChange={this.handleChangePage}\n            onRowsPerPageChange={this.handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={displayRows}\n            rowsPerPageOptions={[5, 10, 25, 50, 100]}\n          />\n        )}\n      </>\n    )\n  }\n}\n\nexport default withStyles(styles as any)(GnoTable)\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { Field } from 'react-final-form'\nimport { OnChange } from 'react-final-form-listeners'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport TextField from 'src/components/forms/TextField'\nimport { Validator, composeValidators, mustBeEthereumAddress, required } from 'src/components/forms/validator'\nimport { trimSpaces } from 'src/utils/strings'\nimport { getAddressFromDomain } from 'src/logic/wallets/getWeb3'\nimport { isValidEnsName, isValidCryptoDomainName } from 'src/logic/wallets/ethAddresses'\nimport { checksumAddress } from 'src/utils/checksumAddress'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { parsePrefixedAddress } from 'src/utils/prefixedAddress'\n\nexport interface AddressInputProps {\n  fieldMutator: (address: string) => void\n  name?: string\n  text?: string\n  placeholder?: string\n  inputAdornment?: { endAdornment: React.ReactElement } | undefined | false\n  testId: string\n  validators?: Validator[]\n  defaultValue?: string\n  disabled?: boolean\n  spellCheck?: boolean\n  className?: string\n}\n\nconst AddressInput = ({\n  className = '',\n  name = 'recipientAddress',\n  text = 'Recipient*',\n  placeholder = 'Recipient*',\n  fieldMutator,\n  testId,\n  inputAdornment,\n  validators = [],\n  defaultValue,\n  disabled,\n}: AddressInputProps): React.ReactElement => {\n  const [currentInput, setCurrentInput] = useState<string>('')\n  const [resolutions, setResolutions] = useState<Record<string, string | undefined>>({})\n  const resolvedAddress = resolutions[currentInput]\n  const isResolving = resolvedAddress === ''\n\n  // External validators must receive an unprefixed address\n  const sanitizedValidators = useCallback(\n    (val: string) => {\n      const parsed = parsePrefixedAddress(val)\n      return composeValidators(...validators)(parsed.address)\n    },\n    [validators],\n  )\n\n  // Internal validators + externally passed validators\n  const allValidators = useMemo(\n    () => composeValidators(required, mustBeEthereumAddress, sanitizedValidators),\n    [sanitizedValidators],\n  )\n\n  const onValueChange = useCallback(\n    (rawVal: string) => {\n      const address = trimSpaces(rawVal)\n\n      setCurrentInput(rawVal)\n\n      // A crypto domain name\n      if (isValidEnsName(address) || isValidCryptoDomainName(address)) {\n        setResolutions((prev) => ({ ...prev, [rawVal]: '' }))\n\n        getAddressFromDomain(address)\n          .then((resolverAddr) => {\n            const formattedAddress = checksumAddress(resolverAddr)\n            setResolutions((prev) => ({ ...prev, [rawVal]: formattedAddress }))\n          })\n          .catch((err) => {\n            setResolutions((prev) => ({ ...prev, [rawVal]: undefined }))\n            logError(Errors._101, err.message)\n          })\n      } else {\n        // A regular address hash\n        if (!mustBeEthereumAddress(address)) {\n          const parsed = parsePrefixedAddress(address)\n          const checkedAddress = checksumAddress(parsed.address) || parsed.address\n\n          // Field mutator (parent component) always gets an unprefixed address\n          fieldMutator(checkedAddress)\n        }\n      }\n    },\n    [setCurrentInput, setResolutions, fieldMutator],\n  )\n\n  useEffect(() => {\n    if (resolvedAddress) {\n      onValueChange(resolvedAddress)\n    }\n  }, [resolvedAddress, onValueChange])\n\n  const adornment = isResolving\n    ? {\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <CircularProgress size=\"16px\" />\n          </InputAdornment>\n        ),\n      }\n    : inputAdornment\n\n  return (\n    <>\n      <Field\n        className={className}\n        component={TextField as any}\n        defaultValue={defaultValue}\n        disabled={disabled}\n        inputAdornment={adornment}\n        name={name}\n        placeholder={placeholder}\n        text={text}\n        spellCheck={false}\n        validate={allValidators}\n        inputProps={{\n          'data-testid': testId,\n        }}\n      />\n\n      <OnChange name={name}>{onValueChange}</OnChange>\n    </>\n  )\n}\n\nexport default AddressInput\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: _defineProperty({\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `variant=\"regular\"`. */\n    regular: theme.mixins.toolbar,\n\n    /* Styles applied to the root element if `variant=\"dense\"`. */\n    dense: {\n      minHeight: 48\n    }\n  };\n};\nvar Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'regular' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[variant], className, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes = {\n  /**\n   * Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, disables gutter padding.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['regular', 'dense'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToolbar'\n})(Toolbar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$onChangePage = props.onChangePage,\n      onChangePage = _props$onChangePage === void 0 ? function () {} : _props$onChangePage,\n      _props$onPageChange = props.onPageChange,\n      onPageChange = _props$onPageChange === void 0 ? function () {} : _props$onPageChange,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"onPageChange\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n    onPageChange(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n    onPageChange(event, page + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/unstable_useId';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      overflow: 'auto',\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n    // TODO v5: `.selectRoot` should be merged with `.input`\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {},\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onPageChange = props.onPageChange,\n      onChangeRowsPerPageProp = props.onChangeRowsPerPage,\n      onRowsPerPageChangeProp = props.onRowsPerPageChange,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onPageChange\", \"onChangeRowsPerPage\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var onChangeRowsPerPage = onChangeRowsPerPageProp || onRowsPerPageChangeProp;\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var selectId = useId();\n  var labelId = useId();\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption,\n    id: labelId\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    id: selectId,\n    labelId: labelId\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return /*#__PURE__*/React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n      value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n    }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page: page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    onPageChange: onPageChange,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   * @deprecated Use the onPageChange prop instead.\n   */\n  onChangePage: deprecatedPropType(PropTypes.func, 'Use the `onPageChange` prop instead.'),\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @deprecated Use the onRowsPerPageChange prop instead.\n   */\n  onChangeRowsPerPage: deprecatedPropType(PropTypes.func, 'Use the `onRowsPerPageChange` prop instead.'),\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n\n    if (count === -1) {\n      return null;\n    }\n\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import { lg, md } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  formContainer: {\n    padding: `${md} ${lg}`,\n    minHeight: '340px',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n    gap: '16px',\n  },\n})\n","import { makeStyles } from '@material-ui/core/styles'\nimport { Mutator } from 'final-form'\n\nimport { useSelector } from 'react-redux'\nimport { OnChange } from 'react-final-form-listeners'\n\nimport { styles } from './style'\n\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\nimport AddressInput from 'src/components/forms/AddressInput'\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport TextField from 'src/components/forms/TextField'\nimport {\n  addressIsNotCurrentSafe,\n  composeValidators,\n  required,\n  uniqueAddress,\n  validAddressBookName,\n} from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { currentNetworkAddressBookAsMap } from 'src/logic/addressBook/store/selectors'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { isValidAddress } from 'src/utils/isValidAddress'\n\nimport { OwnerValues } from '../..'\nimport { Modal } from 'src/components/Modal'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\n\nexport const ADD_OWNER_NAME_INPUT_TEST_ID = 'add-owner-name-input'\nexport const ADD_OWNER_ADDRESS_INPUT_TEST_ID = 'add-owner-address-testid'\nexport const ADD_OWNER_NEXT_BTN_TEST_ID = 'add-owner-next-btn'\n\nconst formMutators: Record<\n  string,\n  Mutator<{ setOwnerAddress: { address: string }; setOwnerName: { name: string } }>\n> = {\n  setOwnerAddress: (args, state, utils) => {\n    utils.changeValue(state, 'ownerAddress', () => args[0])\n  },\n  setOwnerName: (args, state, utils) => {\n    utils.changeValue(state, 'ownerName', () => args[0])\n  },\n}\n\nconst useStyles = makeStyles(styles)\n\ntype OwnerFormProps = {\n  onClose: () => void\n  onSubmit: (values) => void\n  initialValues?: OwnerValues\n}\n\nexport const OwnerForm = ({ onClose, onSubmit, initialValues }: OwnerFormProps): React.ReactElement => {\n  const classes = useStyles()\n  const handleSubmit = (values) => {\n    onSubmit(values)\n  }\n  const addressBookMap = useSelector(currentNetworkAddressBookAsMap)\n  const { address: safeAddress = '', owners = [] } = useSelector(currentSafe) ?? {}\n  const ownerDoesntExist = uniqueAddress(owners)\n  const ownerAddressIsNotSafeAddress = addressIsNotCurrentSafe(safeAddress)\n\n  return (\n    <>\n      <ModalHeader onClose={onClose} title=\"Add new owner\" subTitle=\"1 of 3\" />\n      <Hairline />\n      <GnoForm\n        formMutators={formMutators}\n        initialValues={{\n          ownerName: initialValues?.ownerName,\n          ownerAddress: initialValues?.ownerAddress,\n        }}\n        onSubmit={handleSubmit}\n      >\n        {(...args) => {\n          const mutators = args[3]\n\n          const handleScan = (value, closeQrModal) => {\n            let scannedAddress = value\n\n            if (scannedAddress.startsWith('ethereum:')) {\n              scannedAddress = scannedAddress.replace('ethereum:', '')\n            }\n            mutators.setOwnerAddress(scannedAddress)\n            closeQrModal()\n          }\n\n          return (\n            <>\n              <Block className={classes.formContainer}>\n                <Row margin=\"md\">\n                  <Paragraph>Add a new owner to the active Safe</Paragraph>\n                </Row>\n                <Row margin=\"md\">\n                  <Col xs={8}>\n                    <Field\n                      component={TextField}\n                      name=\"ownerName\"\n                      placeholder=\"Owner name*\"\n                      testId={ADD_OWNER_NAME_INPUT_TEST_ID}\n                      text=\"Owner name*\"\n                      type=\"text\"\n                      validate={composeValidators(required, validAddressBookName)}\n                    />\n                    <OnChange name=\"ownerAddress\">\n                      {async (address: string) => {\n                        if (isValidAddress(address)) {\n                          const ownerName = addressBookMap[address]?.name\n                          if (ownerName) {\n                            mutators.setOwnerName(ownerName)\n                          }\n                        }\n                      }}\n                    </OnChange>\n                  </Col>\n                </Row>\n                <Row margin=\"md\">\n                  <Col xs={8}>\n                    <AddressInput\n                      fieldMutator={mutators.setOwnerAddress}\n                      name=\"ownerAddress\"\n                      placeholder=\"Owner address*\"\n                      testId={ADD_OWNER_ADDRESS_INPUT_TEST_ID}\n                      text=\"Owner address*\"\n                      validators={[ownerDoesntExist, ownerAddressIsNotSafeAddress]}\n                    />\n                  </Col>\n                  <Col center=\"xs\" className={classes} middle=\"xs\" xs={1}>\n                    <ScanQRWrapper handleScan={handleScan} />\n                  </Col>\n                </Row>\n              </Block>\n              <Hairline />\n              <Row align=\"center\" className={classes.buttonRow}>\n                <Modal.Footer.Buttons\n                  cancelButtonProps={{ onClick: onClose, text: 'Cancel' }}\n                  confirmButtonProps={{\n                    type: 'submit',\n                    text: 'Next',\n                    testId: ADD_OWNER_NEXT_BTN_TEST_ID,\n                  }}\n                />\n              </Row>\n            </>\n          )\n        }}\n      </GnoForm>\n    </>\n  )\n}\n","import { background, border, lg, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core/styles'\n\nexport const styles = createStyles({\n  root: {\n    height: '372px',\n  },\n  info: {\n    backgroundColor: background,\n    padding: sm,\n    justifyContent: 'center',\n    textAlign: 'center',\n    flexDirection: 'column',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n    gap: '16px',\n  },\n  details: {\n    padding: lg,\n    borderRight: `solid 2px ${border}`,\n    height: '100%',\n  },\n  owners: {\n    overflow: 'auto',\n    height: '100%',\n  },\n  ownersTitle: {\n    padding: lg,\n  },\n  owner: {\n    padding: sm,\n    alignItems: 'center',\n  },\n  name: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n  },\n  selectedOwner: {\n    padding: sm,\n    alignItems: 'center',\n    backgroundColor: '#f7f5f5',\n  },\n  open: {\n    paddingLeft: sm,\n    width: 'auto',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n})\n","import { makeStyles } from '@material-ui/core/styles'\nimport { ReactElement, useEffect, useState, Fragment } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { getExplorerInfo } from 'src/config'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { currentSafeWithNames } from 'src/logic/safe/store/selectors'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\n\nimport { OwnerValues } from '../..'\nimport { styles } from './style'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport { getSafeSDK } from 'src/logic/wallets/getWeb3'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { TxModalWrapper } from 'src/routes/safe/components/Transactions/helpers/TxModalWrapper'\n\nconst useStyles = makeStyles(styles)\n\ntype ReviewAddOwnerProps = {\n  onClickBack: () => void\n  onClose: () => void\n  onSubmit: (txParameters: TxParameters, delayExecution: boolean) => void\n  values: OwnerValues\n}\n\nexport const ReviewAddOwner = ({ onClickBack, onClose, onSubmit, values }: ReviewAddOwnerProps): ReactElement => {\n  const classes = useStyles()\n  const [data, setData] = useState('')\n  const {\n    address: safeAddress,\n    name: safeName,\n    owners,\n    currentVersion: safeVersion,\n  } = useSelector(currentSafeWithNames)\n  const connectedWalletAddress = useSelector(userAccountSelector)\n\n  useEffect(() => {\n    let isCurrent = true\n\n    const calculateAddOwnerData = async () => {\n      try {\n        const sdk = await getSafeSDK(connectedWalletAddress, safeAddress, safeVersion)\n        const safeTx = await sdk.getAddOwnerTx(\n          { ownerAddress: values.ownerAddress, threshold: +values.threshold },\n          { safeTxGas: 0 },\n        )\n        const txData = safeTx.data.data\n\n        if (isCurrent) {\n          setData(txData)\n        }\n      } catch (error) {\n        logError(Errors._811, error.message)\n      }\n    }\n    calculateAddOwnerData()\n\n    return () => {\n      isCurrent = false\n    }\n  }, [connectedWalletAddress, safeAddress, safeVersion, values.ownerAddress, values.threshold])\n\n  return (\n    <TxModalWrapper txData={data} onSubmit={onSubmit} onBack={onClickBack}>\n      <ModalHeader onClose={onClose} title=\"Add new owner\" subTitle=\"3 of 3\" />\n      <Hairline />\n      <Block margin=\"md\">\n        <Row className={classes.root}>\n          <Col layout=\"column\" xs={4}>\n            <Block className={classes.details}>\n              <Block margin=\"lg\">\n                <Paragraph color=\"primary\" noMargin size=\"lg\">\n                  Details\n                </Paragraph>\n              </Block>\n              <Block margin=\"lg\">\n                <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                  Safe name\n                </Paragraph>\n                <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                  {safeName}\n                </Paragraph>\n              </Block>\n              <Block margin=\"lg\">\n                <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                  Any transaction requires the confirmation of:\n                </Paragraph>\n                <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                  {`${values.threshold} out of ${(owners?.length || 0) + 1} owner(s)`}\n                </Paragraph>\n              </Block>\n            </Block>\n          </Col>\n          <Col className={classes.owners} layout=\"column\" xs={8}>\n            <Row className={classes.ownersTitle}>\n              <Paragraph color=\"primary\" noMargin size=\"lg\">\n                {`${(owners?.length || 0) + 1} Safe owner(s)`}\n              </Paragraph>\n            </Row>\n            <Hairline />\n            {owners?.map((owner) => (\n              <Fragment key={owner.address}>\n                <Row className={classes.owner}>\n                  <Col align=\"center\" xs={12}>\n                    <PrefixedEthHashInfo\n                      hash={owner.address}\n                      name={owner.name}\n                      showCopyBtn\n                      showAvatar\n                      explorerUrl={getExplorerInfo(owner.address)}\n                    />\n                  </Col>\n                </Row>\n                <Hairline />\n              </Fragment>\n            ))}\n            <Row align=\"center\" className={classes.info}>\n              <Paragraph color=\"primary\" noMargin size=\"md\" weight=\"bolder\">\n                ADDING NEW OWNER &darr;\n              </Paragraph>\n            </Row>\n            <Hairline />\n            <Row className={classes.selectedOwner} data-testid=\"add-owner-review\">\n              <Col align=\"center\" xs={12}>\n                <PrefixedEthHashInfo\n                  hash={values.ownerAddress}\n                  name={values.ownerName}\n                  showCopyBtn\n                  showAvatar\n                  explorerUrl={getExplorerInfo(values.ownerAddress)}\n                />\n              </Col>\n            </Row>\n            <Hairline />\n          </Col>\n        </Row>\n        <Hairline />\n      </Block>\n    </TxModalWrapper>\n  )\n}\n","import { lg, md, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  headingText: {\n    fontSize: md,\n  },\n  formContainer: {\n    padding: `${md} ${lg}`,\n    minHeight: '340px',\n  },\n  ownersText: {\n    marginLeft: sm,\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n    gap: '16px',\n  },\n  inputRow: {\n    position: 'relative',\n  },\n  errorText: {\n    position: 'absolute',\n    bottom: '-25px',\n  },\n})\n","import MenuItem from '@material-ui/core/MenuItem'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { ReactElement } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { styles } from './style'\n\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport SelectField from 'src/components/forms/SelectField'\nimport { composeValidators, maxValue, minValue, mustBeInteger, required } from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { Modal } from 'src/components/Modal'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\n\nexport const ADD_OWNER_THRESHOLD_NEXT_BTN_TEST_ID = 'add-owner-threshold-next-btn'\n\nconst useStyles = makeStyles(styles)\n\ntype SubmitProps = {\n  threshold: number\n}\n\ntype ThresholdValues = {\n  threshold: string\n}\n\ntype Props = {\n  onClickBack: () => void\n  onClose: () => void\n  onSubmit: (values: SubmitProps) => void\n  initialValues: ThresholdValues\n}\n\nexport const ThresholdForm = ({ onClickBack, onClose, onSubmit, initialValues }: Props): ReactElement => {\n  const classes = useStyles()\n  const { owners, threshold = 1 } = useSelector(currentSafe) ?? {}\n  const numOptions = owners ? owners.length + 1 : 0\n\n  const handleSubmit = (values: SubmitProps) => {\n    onSubmit(values)\n  }\n\n  return (\n    <>\n      <ModalHeader onClose={onClose} title=\"Add new owner\" subTitle=\"2 of 3\" />\n      <Hairline />\n      <GnoForm initialValues={{ threshold: initialValues.threshold || threshold.toString() }} onSubmit={handleSubmit}>\n        {() => (\n          <>\n            <Block className={classes.formContainer}>\n              <Row>\n                <Paragraph className={classes.headingText} weight=\"bolder\">\n                  Set the required owner confirmations:\n                </Paragraph>\n              </Row>\n              <Row>\n                <Paragraph weight=\"bolder\">Any transaction requires the confirmation of:</Paragraph>\n              </Row>\n              <Row align=\"center\" className={classes.inputRow} margin=\"xl\">\n                <Col xs={2}>\n                  <Field\n                    data-testid=\"threshold-select-input\"\n                    name=\"threshold\"\n                    render={(props) => (\n                      <>\n                        <SelectField {...props} disableError>\n                          {[...Array(Number(numOptions))].map((x, index) => (\n                            <MenuItem key={index} value={`${index + 1}`}>\n                              {index + 1}\n                            </MenuItem>\n                          ))}\n                        </SelectField>\n                        {props.meta.error && props.meta.touched && (\n                          <Paragraph className={classes.errorText} color=\"error\" noMargin>\n                            {props.meta.error}\n                          </Paragraph>\n                        )}\n                      </>\n                    )}\n                    validate={composeValidators(required, mustBeInteger, minValue(1), maxValue(numOptions))}\n                  />\n                </Col>\n                <Col xs={10}>\n                  <Paragraph className={classes.ownersText} color=\"primary\" noMargin size=\"lg\">\n                    out of {numOptions} owner(s)\n                  </Paragraph>\n                </Col>\n              </Row>\n            </Block>\n            <Hairline />\n            <Row align=\"center\" className={classes.buttonRow}>\n              <Modal.Footer.Buttons\n                cancelButtonProps={{ onClick: onClickBack, text: 'Back' }}\n                confirmButtonProps={{\n                  type: 'submit',\n                  text: 'Review',\n                  testId: ADD_OWNER_THRESHOLD_NEXT_BTN_TEST_ID,\n                }}\n              />\n            </Row>\n          </>\n        )}\n      </GnoForm>\n    </>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Modal from 'src/components/Modal'\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\nimport { addressBookAddOrUpdate } from 'src/logic/addressBook/store/actions'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\nimport { checksumAddress } from 'src/utils/checksumAddress'\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { extractSafeAddress } from 'src/routes/routes'\n\nimport { OwnerForm } from './screens/OwnerForm'\nimport { ReviewAddOwner } from './screens/Review'\nimport { ThresholdForm } from './screens/ThresholdForm'\nimport { getSafeSDK } from 'src/logic/wallets/getWeb3'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { currentSafeCurrentVersion } from 'src/logic/safe/store/selectors'\nimport { currentChainId } from 'src/logic/config/store/selectors'\nimport { _getChainId } from 'src/config'\n\nexport type OwnerValues = {\n  ownerAddress: string\n  ownerName: string\n  threshold: string\n}\n\nexport const sendAddOwner = async (\n  values: OwnerValues,\n  safeAddress: string,\n  safeVersion: string,\n  txParameters: TxParameters,\n  dispatch: Dispatch,\n  connectedWalletAddress: string,\n  delayExecution: boolean,\n): Promise<void> => {\n  const sdk = await getSafeSDK(connectedWalletAddress, safeAddress, safeVersion)\n  const safeTx = await sdk.getAddOwnerTx(\n    { ownerAddress: values.ownerAddress, threshold: +values.threshold },\n    { safeTxGas: 0 },\n  )\n  const txData = safeTx.data.data\n\n  const txHash = await dispatch(\n    createTransaction({\n      safeAddress,\n      to: safeAddress,\n      valueInWei: '0',\n      txData,\n      txNonce: txParameters.safeNonce,\n      safeTxGas: txParameters.safeTxGas,\n      ethParameters: txParameters,\n      notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\n      delayExecution,\n    }),\n  )\n\n  if (txHash) {\n    dispatch(\n      addressBookAddOrUpdate(\n        makeAddressBookEntry({ address: values.ownerAddress, name: values.ownerName, chainId: _getChainId() }),\n      ),\n    )\n  }\n}\n\ntype Props = {\n  isOpen: boolean\n  onClose: () => void\n}\n\nexport const AddOwnerModal = ({ isOpen, onClose }: Props): React.ReactElement => {\n  const [activeScreen, setActiveScreen] = useState('selectOwner')\n  const [values, setValues] = useState<OwnerValues>({ ownerName: '', ownerAddress: '', threshold: '' })\n  const dispatch = useDispatch()\n  const safeAddress = extractSafeAddress()\n  const safeVersion = useSelector(currentSafeCurrentVersion)\n  const connectedWalletAddress = useSelector(userAccountSelector)\n  const chainId = useSelector(currentChainId)\n\n  useEffect(\n    () => () => {\n      setActiveScreen('selectOwner')\n      setValues({ ownerName: '', ownerAddress: '', threshold: '' })\n    },\n    [isOpen],\n  )\n\n  const onClickBack = () => {\n    if (activeScreen === 'reviewAddOwner') {\n      setActiveScreen('selectThreshold')\n    } else if (activeScreen === 'selectThreshold') {\n      setActiveScreen('selectOwner')\n    }\n  }\n\n  const ownerSubmitted = (newValues) => {\n    setValues((stateValues) => ({\n      ...stateValues,\n      ownerName: newValues.ownerName,\n      ownerAddress: checksumAddress(newValues.ownerAddress),\n    }))\n    setActiveScreen('selectThreshold')\n  }\n\n  const thresholdSubmitted = (newValues) => {\n    setValues((stateValues) => ({\n      ...stateValues,\n      threshold: newValues.threshold,\n    }))\n    setActiveScreen('reviewAddOwner')\n  }\n\n  const onAddOwner = async (txParameters: TxParameters, delayExecution: boolean) => {\n    onClose()\n\n    try {\n      await sendAddOwner(\n        values,\n        safeAddress,\n        safeVersion,\n        txParameters,\n        dispatch,\n        connectedWalletAddress,\n        delayExecution,\n      )\n      dispatch(\n        addressBookAddOrUpdate(makeAddressBookEntry({ name: values.ownerName, address: values.ownerAddress, chainId })),\n      )\n    } catch (error) {\n      logError(Errors._808, error.message)\n    }\n  }\n\n  return (\n    <Modal\n      description=\"Add owner to Safe\"\n      handleClose={onClose}\n      open={isOpen}\n      paperClassName=\"bigger-modal-window\"\n      title=\"Add owner to Safe\"\n    >\n      <>\n        {activeScreen === 'selectOwner' && (\n          <OwnerForm initialValues={values} onClose={onClose} onSubmit={ownerSubmitted} />\n        )}\n        {activeScreen === 'selectThreshold' && (\n          <ThresholdForm\n            onClickBack={onClickBack}\n            initialValues={{ threshold: values.threshold }}\n            onClose={onClose}\n            onSubmit={thresholdSubmitted}\n          />\n        )}\n        {activeScreen === 'reviewAddOwner' && (\n          <ReviewAddOwner onClickBack={onClickBack} onClose={onClose} onSubmit={onAddOwner} values={values} />\n        )}\n      </>\n    </Modal>\n  )\n}\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nimport { lg, md } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    heading: {\n      padding: lg,\n      justifyContent: 'space-between',\n      boxSizing: 'border-box',\n      height: '74px',\n    },\n    manage: {\n      fontSize: lg,\n    },\n    container: {\n      padding: `${md} ${lg}`,\n      minHeight: '200px',\n    },\n    close: {\n      height: '35px',\n      width: '35px',\n    },\n  }),\n)\n","import { useDispatch, useSelector } from 'react-redux'\n\nimport { getExplorerInfo } from 'src/config'\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport TextField from 'src/components/forms/TextField'\nimport { composeValidators, required, validAddressBookName } from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Hairline from 'src/components/layout/Hairline'\nimport Row from 'src/components/layout/Row'\nimport Modal, { Modal as GenericModal } from 'src/components/Modal'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { addressBookAddOrUpdate } from 'src/logic/addressBook/store/actions'\nimport { NOTIFICATIONS } from 'src/logic/notifications'\nimport enqueueSnackbar from 'src/logic/notifications/store/actions/enqueueSnackbar'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\n\nimport { useStyles } from './style'\nimport { currentChainId } from 'src/logic/config/store/selectors'\n\nexport const RENAME_OWNER_INPUT_TEST_ID = 'rename-owner-input'\nexport const SAVE_OWNER_CHANGES_BTN_TEST_ID = 'save-owner-changes-btn'\n\ntype OwnProps = {\n  isOpen: boolean\n  onClose: () => void\n  owner: OwnerData\n}\n\nexport const EditOwnerModal = ({ isOpen, onClose, owner }: OwnProps): React.ReactElement => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const chainId = useSelector(currentChainId)\n\n  const handleSubmit = ({ ownerName }: { ownerName: string }): void => {\n    // Update the value only if the ownerName really changed\n    if (ownerName !== owner.name) {\n      dispatch(addressBookAddOrUpdate(makeAddressBookEntry({ address: owner.address, name: ownerName, chainId })))\n      dispatch(enqueueSnackbar(NOTIFICATIONS.OWNER_NAME_CHANGE_EXECUTED_MSG))\n    }\n    onClose()\n  }\n\n  return (\n    <Modal\n      description=\"Edit owner from Safe\"\n      handleClose={onClose}\n      open={isOpen}\n      paperClassName=\"smaller-modal-window\"\n      title=\"Edit owner from Safe\"\n    >\n      <ModalHeader onClose={onClose} title=\"Edit owner name\" />\n      <Hairline />\n      <GnoForm onSubmit={handleSubmit} subscription={{ pristine: true }}>\n        {(...args) => {\n          const pristine = args[2].pristine\n          return (\n            <>\n              <Block className={classes.container}>\n                <Row margin=\"md\">\n                  <Field\n                    component={TextField}\n                    initialValue={owner.name}\n                    name=\"ownerName\"\n                    placeholder=\"Owner name*\"\n                    testId={RENAME_OWNER_INPUT_TEST_ID}\n                    text=\"Owner name*\"\n                    type=\"text\"\n                    validate={composeValidators(required, validAddressBookName)}\n                  />\n                </Row>\n                <Row>\n                  <Block justify=\"center\">\n                    <PrefixedEthHashInfo\n                      hash={owner.address}\n                      showCopyBtn\n                      showAvatar\n                      explorerUrl={getExplorerInfo(owner.address)}\n                    />\n                  </Block>\n                </Row>\n              </Block>\n              <GenericModal.Footer>\n                <GenericModal.Footer.Buttons\n                  cancelButtonProps={{ onClick: onClose }}\n                  confirmButtonProps={{ disabled: pristine, testId: SAVE_OWNER_CHANGES_BTN_TEST_ID, text: 'Save' }}\n                />\n              </GenericModal.Footer>\n            </>\n          )\n        }}\n      </GnoForm>\n    </Modal>\n  )\n}\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nimport { lg, md } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    formContainer: {\n      padding: `${md} ${lg}`,\n      minHeight: '340px',\n    },\n  }),\n)\n","import { ReactElement } from 'react'\n\nimport { getExplorerInfo } from 'src/config'\nimport { Modal } from 'src/components/Modal'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\n\nimport { useStyles } from './style'\n\nexport const REMOVE_OWNER_MODAL_NEXT_BTN_TEST_ID = 'remove-owner-next-btn'\n\ninterface CheckOwnerProps {\n  onClose: () => void\n  onSubmit: () => void\n  owner: OwnerData\n}\n\nexport const CheckOwner = ({ onClose, onSubmit, owner }: CheckOwnerProps): ReactElement => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <ModalHeader onClose={onClose} subTitle=\"1 of 3\" title=\"Remove owner\" />\n      <Hairline />\n      <Block className={classes.formContainer}>\n        <Row margin=\"md\">\n          <Paragraph size=\"lg\">Review the owner you want to remove from the active Safe:</Paragraph>\n        </Row>\n        <Row>\n          <Col align=\"center\" xs={12}>\n            <PrefixedEthHashInfo\n              hash={owner.address}\n              name={owner.name}\n              showCopyBtn\n              showAvatar\n              explorerUrl={getExplorerInfo(owner.address)}\n            />\n          </Col>\n        </Row>\n      </Block>\n      <Modal.Footer>\n        <Modal.Footer.Buttons\n          cancelButtonProps={{ onClick: onClose }}\n          confirmButtonProps={{ onClick: onSubmit, testId: REMOVE_OWNER_MODAL_NEXT_BTN_TEST_ID, text: 'Next' }}\n        />\n      </Modal.Footer>\n    </>\n  )\n}\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nimport { background, border, lg, sm } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    root: {\n      height: '372px',\n    },\n    info: {\n      backgroundColor: background,\n      padding: sm,\n      justifyContent: 'center',\n      textAlign: 'center',\n      flexDirection: 'column',\n    },\n    details: {\n      padding: lg,\n      borderRight: `solid 1px ${border}`,\n      height: '100%',\n    },\n    owners: {\n      overflow: 'auto',\n      height: '100%',\n    },\n    ownersTitle: {\n      padding: lg,\n    },\n    owner: {\n      padding: sm,\n      alignItems: 'center',\n    },\n    name: {\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n    },\n    selectedOwner: {\n      padding: sm,\n      alignItems: 'center',\n      backgroundColor: '#ffe6ea',\n    },\n  }),\n)\n","import { useEffect, useState, Fragment } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { getExplorerInfo } from 'src/config'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { currentSafeWithNames } from 'src/logic/safe/store/selectors'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\n\nimport { useStyles } from './style'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport { getSafeSDK } from 'src/logic/wallets/getWeb3'\nimport { logError } from 'src/logic/exceptions/CodedException'\nimport ErrorCodes from 'src/logic/exceptions/registry'\nimport { TxModalWrapper } from 'src/routes/safe/components/Transactions/helpers/TxModalWrapper'\n\ntype ReviewRemoveOwnerProps = {\n  onClickBack: () => void\n  onClose: () => void\n  onSubmit: (txParameters: TxParameters, delayExecution: boolean) => void\n  owner: OwnerData\n  threshold?: number\n}\n\nexport const ReviewRemoveOwnerModal = ({\n  onClickBack,\n  onClose,\n  onSubmit,\n  owner,\n  threshold = 1,\n}: ReviewRemoveOwnerProps): React.ReactElement => {\n  const classes = useStyles()\n  const [data, setData] = useState('')\n  const {\n    address: safeAddress,\n    name: safeName,\n    owners,\n    currentVersion: safeVersion,\n  } = useSelector(currentSafeWithNames)\n  const connectedWalletAddress = useSelector(userAccountSelector)\n  const numOptions = owners ? owners.length - 1 : 0\n\n  useEffect(() => {\n    let isCurrent = true\n\n    if (!threshold) {\n      console.error(\"Threshold value was not define, tx can't be executed\")\n      return\n    }\n\n    const calculateRemoveOwnerData = async () => {\n      try {\n        const sdk = await getSafeSDK(connectedWalletAddress, safeAddress, safeVersion)\n        const safeTx = await sdk.getRemoveOwnerTx(\n          { ownerAddress: owner.address, threshold: +threshold },\n          { safeTxGas: 0 },\n        )\n        const txData = safeTx.data.data\n\n        if (isCurrent) {\n          setData(txData)\n        }\n      } catch (error) {\n        logError(ErrorCodes._812, error.message)\n      }\n    }\n    calculateRemoveOwnerData()\n\n    return () => {\n      isCurrent = false\n    }\n  }, [safeAddress, safeVersion, connectedWalletAddress, owner.address, threshold])\n\n  return (\n    <TxModalWrapper txData={data} onSubmit={onSubmit} onBack={onClickBack}>\n      <ModalHeader onClose={onClose} title=\"Remove owner\" subTitle=\"3 of 3\" />\n      <Hairline />\n      <Block margin=\"md\">\n        <Row className={classes.root}>\n          {/* Details */}\n          <Col layout=\"column\" xs={4}>\n            <Block className={classes.details}>\n              <Block margin=\"lg\">\n                <Paragraph color=\"primary\" noMargin size=\"lg\">\n                  Details\n                </Paragraph>\n              </Block>\n              <Block margin=\"lg\">\n                <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                  Safe name\n                </Paragraph>\n                <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                  {safeName}\n                </Paragraph>\n              </Block>\n              <Block margin=\"lg\">\n                <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                  Any transaction requires the confirmation of:\n                </Paragraph>\n                <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                  {`${threshold} out of ${numOptions} owner(s)`}\n                </Paragraph>\n              </Block>\n            </Block>\n          </Col>\n          {/* Owners */}\n          <Col className={classes.owners} layout=\"column\" xs={8}>\n            <Row className={classes.ownersTitle}>\n              <Paragraph color=\"primary\" noMargin size=\"lg\">\n                {`${numOptions} Safe owner(s)`}\n              </Paragraph>\n            </Row>\n            <Hairline />\n            {owners?.map(\n              (safeOwner) =>\n                !sameAddress(safeOwner.address, owner.address) && (\n                  <Fragment key={safeOwner.address}>\n                    <Row className={classes.owner}>\n                      <Col align=\"center\" xs={12}>\n                        <PrefixedEthHashInfo\n                          hash={safeOwner.address}\n                          name={safeOwner.name}\n                          showCopyBtn\n                          showAvatar\n                          explorerUrl={getExplorerInfo(safeOwner.address)}\n                        />\n                      </Col>\n                    </Row>\n                    <Hairline />\n                  </Fragment>\n                ),\n            )}\n            <Row align=\"center\" className={classes.info}>\n              <Paragraph color=\"primary\" noMargin size=\"md\" weight=\"bolder\">\n                REMOVING OWNER &darr;\n              </Paragraph>\n            </Row>\n            <Hairline />\n            <Row className={classes.selectedOwner} data-testid=\"remove-owner-review\">\n              <Col align=\"center\" xs={12}>\n                <PrefixedEthHashInfo\n                  hash={owner.address}\n                  name={owner.name}\n                  showCopyBtn\n                  showAvatar\n                  explorerUrl={getExplorerInfo(owner.address)}\n                />\n              </Col>\n            </Row>\n            <Hairline />\n          </Col>\n        </Row>\n        <Hairline />\n      </Block>\n    </TxModalWrapper>\n  )\n}\n","import { createStyles, makeStyles } from '@material-ui/core/styles'\n\nimport { lg, md, sm } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    headingText: {\n      fontSize: md,\n    },\n    formContainer: {\n      padding: `${md} ${lg}`,\n      minHeight: '340px',\n    },\n    ownersText: {\n      marginLeft: sm,\n    },\n    inputRow: {\n      position: 'relative',\n    },\n    errorText: {\n      position: 'absolute',\n      bottom: '-25px',\n    },\n  }),\n)\n","import MenuItem from '@material-ui/core/MenuItem'\nimport { ReactElement } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { useStyles } from './style'\n\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport SelectField from 'src/components/forms/SelectField'\nimport { composeValidators, maxValue, minValue, mustBeInteger, required } from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { Modal } from 'src/components/Modal'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\n\nexport const REMOVE_OWNER_THRESHOLD_NEXT_BTN_TEST_ID = 'remove-owner-threshold-next-btn'\n\ntype ThresholdValues = {\n  threshold: string\n}\n\ntype Props = {\n  onClickBack: () => void\n  onClose: () => void\n  onSubmit: (txParameters: TxParameters) => void\n  initialValues: ThresholdValues\n}\n\nexport const ThresholdForm = ({ onClickBack, onClose, onSubmit, initialValues }: Props): ReactElement => {\n  const classes = useStyles()\n  const { owners, threshold = 1 } = useSelector(currentSafe) ?? {}\n  const ownersCount = owners?.length ?? 0\n  const handleSubmit = (values) => {\n    onSubmit(values)\n  }\n  const defaultThreshold = threshold > 1 && threshold === ownersCount ? threshold - 1 : threshold\n\n  return (\n    <>\n      <ModalHeader onClose={onClose} subTitle=\"2 of 3\" title=\"Remove owner\" />\n      <Hairline />\n      <GnoForm\n        initialValues={{ threshold: initialValues.threshold || defaultThreshold.toString() }}\n        onSubmit={handleSubmit}\n      >\n        {() => {\n          const numOptions = ownersCount > 1 ? ownersCount - 1 : 1\n\n          return (\n            <>\n              <Block className={classes.formContainer}>\n                <Row>\n                  <Paragraph className={classes.headingText} weight=\"bolder\">\n                    Set the required owner confirmations:\n                  </Paragraph>\n                </Row>\n                <Row>\n                  <Paragraph weight=\"bolder\">Any transaction requires the confirmation of:</Paragraph>\n                </Row>\n                <Row align=\"center\" className={classes.inputRow} margin=\"xl\">\n                  <Col xs={2}>\n                    <Field\n                      data-testid=\"threshold-select-input\"\n                      name=\"threshold\"\n                      render={(props) => (\n                        <>\n                          <SelectField {...props} disableError>\n                            {[...Array(Number(numOptions))].map((x, index) => (\n                              <MenuItem key={index} value={`${index + 1}`}>\n                                {index + 1}\n                              </MenuItem>\n                            ))}\n                          </SelectField>\n                          {props.meta.error && props.meta.touched && (\n                            <Paragraph className={classes.errorText} color=\"error\" noMargin>\n                              {props.meta.error}\n                            </Paragraph>\n                          )}\n                        </>\n                      )}\n                      validate={composeValidators(required, mustBeInteger, minValue(1), maxValue(numOptions))}\n                    />\n                  </Col>\n                  <Col xs={10}>\n                    <Paragraph className={classes.ownersText} color=\"primary\" noMargin size=\"lg\">\n                      out of {ownersCount ? ownersCount - 1 : 0} owner(s)\n                    </Paragraph>\n                  </Col>\n                </Row>\n              </Block>\n              <Modal.Footer>\n                <Modal.Footer.Buttons\n                  cancelButtonProps={{ onClick: onClickBack, text: 'Back' }}\n                  confirmButtonProps={{ testId: REMOVE_OWNER_THRESHOLD_NEXT_BTN_TEST_ID, text: 'Review' }}\n                />\n              </Modal.Footer>\n            </>\n          )\n        }}\n      </GnoForm>\n    </>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\n\nimport { CheckOwner } from './screens/CheckOwner'\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\nimport { ReviewRemoveOwnerModal } from './screens/Review'\nimport { ThresholdForm } from './screens/ThresholdForm'\n\nimport Modal from 'src/components/Modal'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { extractSafeAddress } from 'src/routes/routes'\nimport { getSafeSDK } from 'src/logic/wallets/getWeb3'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { currentSafeCurrentVersion } from 'src/logic/safe/store/selectors'\n\ntype OwnerValues = OwnerData & {\n  threshold: string\n}\n\nexport const sendRemoveOwner = async (\n  values: OwnerValues,\n  safeAddress: string,\n  safeVersion: string,\n  ownerAddressToRemove: string,\n  dispatch: Dispatch,\n  txParameters: TxParameters,\n  connectedWalletAddress: string,\n  delayExecution: boolean,\n): Promise<void> => {\n  const sdk = await getSafeSDK(connectedWalletAddress, safeAddress, safeVersion)\n  const safeTx = await sdk.getRemoveOwnerTx(\n    { ownerAddress: ownerAddressToRemove, threshold: +values.threshold },\n    { safeTxGas: 0 },\n  )\n  const txData = safeTx.data.data\n\n  dispatch(\n    createTransaction({\n      safeAddress,\n      to: safeAddress,\n      valueInWei: '0',\n      txData,\n      txNonce: txParameters.safeNonce,\n      safeTxGas: txParameters.safeTxGas,\n      ethParameters: txParameters,\n      notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\n      delayExecution,\n    }),\n  )\n}\n\ntype RemoveOwnerProps = {\n  isOpen: boolean\n  onClose: () => void\n  owner: OwnerData\n}\n\nexport const RemoveOwnerModal = ({ isOpen, onClose, owner }: RemoveOwnerProps): React.ReactElement => {\n  const [activeScreen, setActiveScreen] = useState('checkOwner')\n  const [values, setValues] = useState<OwnerValues>({ ...owner, threshold: '' })\n  const dispatch = useDispatch()\n  const safeAddress = extractSafeAddress()\n  const safeVersion = useSelector(currentSafeCurrentVersion)\n  const connectedWalletAddress = useSelector(userAccountSelector)\n\n  useEffect(\n    () => () => {\n      setActiveScreen('checkOwner')\n    },\n    [isOpen],\n  )\n\n  const onClickBack = () => {\n    if (activeScreen === 'reviewRemoveOwner') {\n      setActiveScreen('selectThreshold')\n    } else if (activeScreen === 'selectThreshold') {\n      setActiveScreen('checkOwner')\n    }\n  }\n\n  const ownerSubmitted = () => {\n    setActiveScreen('selectThreshold')\n  }\n\n  const thresholdSubmitted = (newValues) => {\n    const cpValues = { ...values, threshold: newValues.threshold }\n    setValues(cpValues)\n    setActiveScreen('reviewRemoveOwner')\n  }\n\n  const onRemoveOwner = async (txParameters: TxParameters, delayExecution: boolean) => {\n    onClose()\n\n    try {\n      await sendRemoveOwner(\n        values,\n        safeAddress,\n        safeVersion,\n        owner.address,\n        dispatch,\n        txParameters,\n        connectedWalletAddress,\n        delayExecution,\n      )\n    } catch (error) {\n      logError(Errors._809, error.message)\n    }\n  }\n\n  return (\n    <Modal\n      description=\"Remove owner from Safe\"\n      handleClose={onClose}\n      open={isOpen}\n      paperClassName=\"bigger-modal-window\"\n      title=\"Remove owner from Safe\"\n    >\n      <>\n        {activeScreen === 'checkOwner' && <CheckOwner onClose={onClose} onSubmit={ownerSubmitted} owner={owner} />}\n        {activeScreen === 'selectThreshold' && (\n          <ThresholdForm\n            onClickBack={onClickBack}\n            initialValues={{ threshold: values.threshold }}\n            onClose={onClose}\n            onSubmit={thresholdSubmitted}\n          />\n        )}\n        {activeScreen === 'reviewRemoveOwner' && (\n          <ReviewRemoveOwnerModal\n            onClickBack={onClickBack}\n            onClose={onClose}\n            onSubmit={onRemoveOwner}\n            owner={owner}\n            threshold={Number(values.threshold)}\n          />\n        )}\n      </>\n    </Modal>\n  )\n}\n","import { lg, md, sm } from 'src/theme/variables'\nimport { createStyles, makeStyles } from '@material-ui/core'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    formContainer: {\n      padding: `${md} ${lg}`,\n      minHeight: '340px',\n    },\n    owner: {\n      alignItems: 'center',\n    },\n    address: {\n      marginRight: sm,\n    },\n  }),\n)\n","import { Mutator } from 'final-form'\nimport { ReactElement } from 'react'\nimport { useSelector } from 'react-redux'\nimport { OnChange } from 'react-final-form-listeners'\n\nimport AddressInput from 'src/components/forms/AddressInput'\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport TextField from 'src/components/forms/TextField'\nimport {\n  addressIsNotCurrentSafe,\n  composeValidators,\n  required,\n  uniqueAddress,\n  validAddressBookName,\n} from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\nimport { Modal } from 'src/components/Modal'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { currentNetworkAddressBookAsMap } from 'src/logic/addressBook/store/selectors'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\nimport { isValidAddress } from 'src/utils/isValidAddress'\n\nimport { useStyles } from './style'\nimport { getExplorerInfo } from 'src/config'\n\nexport const REPLACE_OWNER_NAME_INPUT_TEST_ID = 'replace-owner-name-input'\nexport const REPLACE_OWNER_ADDRESS_INPUT_TEST_ID = 'replace-owner-address-testid'\nexport const REPLACE_OWNER_NEXT_BTN_TEST_ID = 'replace-owner-next-btn'\n\nimport { OwnerValues } from '../..'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\n\nconst formMutators: Record<\n  string,\n  Mutator<{ setOwnerAddress: { address: string }; setOwnerName: { name: string } }>\n> = {\n  setOwnerAddress: (args, state, utils) => {\n    utils.changeValue(state, 'ownerAddress', () => args[0])\n  },\n  setOwnerName: (args, state, utils) => {\n    utils.changeValue(state, 'ownerName', () => args[0])\n  },\n}\n\ntype NewOwnerProps = {\n  ownerAddress: string\n  ownerName: string\n}\n\ntype OwnerFormProps = {\n  onClose: () => void\n  onSubmit: (values: NewOwnerProps) => void\n  owner: OwnerData\n  initialValues?: OwnerValues\n}\n\nexport const OwnerForm = ({ onClose, onSubmit, owner, initialValues }: OwnerFormProps): ReactElement => {\n  const classes = useStyles()\n\n  const handleSubmit = (values: NewOwnerProps) => {\n    onSubmit(values)\n  }\n  const addressBookMap = useSelector(currentNetworkAddressBookAsMap)\n  const { address: safeAddress = '', owners } = useSelector(currentSafe) ?? {}\n  const ownerDoesntExist = uniqueAddress(owners)\n  const ownerAddressIsNotSafeAddress = addressIsNotCurrentSafe(safeAddress)\n\n  return (\n    <>\n      <ModalHeader onClose={onClose} title=\"Replace owner\" subTitle=\"1 of 2\" />\n      <Hairline />\n      <GnoForm\n        formMutators={formMutators}\n        onSubmit={handleSubmit}\n        initialValues={{\n          ownerName: initialValues?.name,\n          ownerAddress: initialValues?.address,\n        }}\n      >\n        {(...args) => {\n          const mutators = args[3]\n\n          const handleScan = (value, closeQrModal) => {\n            let scannedAddress = value\n\n            if (scannedAddress.startsWith('ethereum:')) {\n              scannedAddress = scannedAddress.replace('ethereum:', '')\n            }\n\n            mutators.setOwnerAddress(scannedAddress)\n            closeQrModal()\n          }\n\n          return (\n            <>\n              <Block className={classes.formContainer}>\n                <Row>\n                  <Paragraph>\n                    Review the owner you want to replace from the active Safe. Then specify the new owner you want to\n                    replace it with:\n                  </Paragraph>\n                </Row>\n                <Row>\n                  <Paragraph>Current owner</Paragraph>\n                </Row>\n                <Row className={classes.owner}>\n                  <Col align=\"center\" xs={12}>\n                    <PrefixedEthHashInfo\n                      hash={owner.address}\n                      name={owner.name}\n                      showCopyBtn\n                      showAvatar\n                      explorerUrl={getExplorerInfo(owner.address)}\n                    />\n                  </Col>\n                </Row>\n                <Row>\n                  <Paragraph>New owner</Paragraph>\n                </Row>\n                <Row margin=\"md\">\n                  <Col xs={8}>\n                    <Field\n                      component={TextField}\n                      name=\"ownerName\"\n                      placeholder=\"Owner name*\"\n                      testId={REPLACE_OWNER_NAME_INPUT_TEST_ID}\n                      text=\"Owner name*\"\n                      type=\"text\"\n                      validate={composeValidators(required, validAddressBookName)}\n                    />\n                    <OnChange name=\"ownerAddress\">\n                      {async (address: string) => {\n                        if (isValidAddress(address)) {\n                          const ownerName = addressBookMap[address]?.name\n                          if (ownerName) {\n                            mutators.setOwnerName(ownerName)\n                          }\n                        }\n                      }}\n                    </OnChange>\n                  </Col>\n                </Row>\n                <Row margin=\"md\">\n                  <Col xs={8}>\n                    <AddressInput\n                      fieldMutator={mutators.setOwnerAddress}\n                      name=\"ownerAddress\"\n                      placeholder=\"Owner address*\"\n                      testId={REPLACE_OWNER_ADDRESS_INPUT_TEST_ID}\n                      text=\"Owner address*\"\n                      validators={[ownerDoesntExist, ownerAddressIsNotSafeAddress]}\n                    />\n                  </Col>\n                  <Col center=\"xs\" className={classes} middle=\"xs\" xs={1}>\n                    <ScanQRWrapper handleScan={handleScan} />\n                  </Col>\n                </Row>\n              </Block>\n              <Modal.Footer>\n                <Modal.Footer.Buttons\n                  cancelButtonProps={{ onClick: onClose }}\n                  confirmButtonProps={{ testId: REPLACE_OWNER_NEXT_BTN_TEST_ID, text: 'Next' }}\n                />\n              </Modal.Footer>\n            </>\n          )\n        }}\n      </GnoForm>\n    </>\n  )\n}\n","import { background, border, lg, sm } from 'src/theme/variables'\nimport { createStyles, makeStyles } from '@material-ui/core'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    root: {\n      height: '372px',\n    },\n    info: {\n      backgroundColor: background,\n      padding: sm,\n      justifyContent: 'center',\n      textAlign: 'center',\n      flexDirection: 'column',\n    },\n    details: {\n      padding: lg,\n      borderRight: `solid 1px ${border}`,\n      height: '100%',\n    },\n    owners: {\n      overflow: 'auto',\n      height: '100%',\n    },\n    ownersTitle: {\n      padding: lg,\n    },\n    owner: {\n      padding: sm,\n      alignItems: 'center',\n    },\n    name: {\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n    },\n    selectedOwnerRemoved: {\n      padding: sm,\n      alignItems: 'center',\n      backgroundColor: '#ffe6ea',\n    },\n    selectedOwnerAdded: {\n      padding: sm,\n      alignItems: 'center',\n      backgroundColor: '#f7f5f5',\n    },\n  }),\n)\n","import { useEffect, useState, Fragment } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { getExplorerInfo } from 'src/config'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { currentSafeWithNames } from 'src/logic/safe/store/selectors'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\n\nimport { useStyles } from './style'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport { getSafeSDK } from 'src/logic/wallets/getWeb3'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { TxModalWrapper } from 'src/routes/safe/components/Transactions/helpers/TxModalWrapper'\n\nexport const REPLACE_OWNER_SUBMIT_BTN_TEST_ID = 'replace-owner-submit-btn'\n\ntype ReplaceOwnerProps = {\n  onClose: () => void\n  onClickBack: () => void\n  onSubmit: (txParameters: TxParameters, delayExecution: boolean) => void\n  owner: OwnerData\n  newOwner: {\n    address: string\n    name: string\n  }\n}\n\nexport const ReviewReplaceOwnerModal = ({\n  onClickBack,\n  onClose,\n  onSubmit,\n  owner,\n  newOwner,\n}: ReplaceOwnerProps): React.ReactElement => {\n  const classes = useStyles()\n  const [data, setData] = useState('')\n  const {\n    address: safeAddress,\n    name: safeName,\n    owners,\n    threshold = 1,\n    currentVersion: safeVersion,\n  } = useSelector(currentSafeWithNames)\n  const connectedWalletAddress = useSelector(userAccountSelector)\n\n  useEffect(() => {\n    let isCurrent = true\n\n    const calculateReplaceOwnerData = async () => {\n      try {\n        const sdk = await getSafeSDK(connectedWalletAddress, safeAddress, safeVersion)\n        const safeTx = await sdk.getSwapOwnerTx(\n          { oldOwnerAddress: owner.address, newOwnerAddress: newOwner.address },\n          { safeTxGas: 0 },\n        )\n        const txData = safeTx.data.data\n\n        if (isCurrent) {\n          setData(txData)\n        }\n      } catch (error) {\n        logError(Errors._813, error.message)\n      }\n    }\n    calculateReplaceOwnerData()\n\n    return () => {\n      isCurrent = false\n    }\n  }, [safeAddress, safeVersion, connectedWalletAddress, owner.address, newOwner.address])\n\n  return (\n    <TxModalWrapper txData={data} onSubmit={onSubmit} onBack={onClickBack}>\n      <ModalHeader onClose={onClose} title=\"Replace owner\" subTitle=\"2 of 2\" />\n      <Hairline />\n      <Block margin=\"md\">\n        <Row className={classes.root}>\n          <Col layout=\"column\" xs={4}>\n            <Block className={classes.details}>\n              <Block margin=\"lg\">\n                <Paragraph color=\"primary\" noMargin size=\"lg\">\n                  Details\n                </Paragraph>\n              </Block>\n              <Block margin=\"lg\">\n                <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                  Safe name\n                </Paragraph>\n                <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                  {safeName}\n                </Paragraph>\n              </Block>\n              <Block margin=\"lg\">\n                <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                  Any transaction requires the confirmation of:\n                </Paragraph>\n                <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                  {`${threshold} out of ${owners?.length || 0} owner(s)`}\n                </Paragraph>\n              </Block>\n            </Block>\n          </Col>\n          <Col className={classes.owners} layout=\"column\" xs={8}>\n            <Row className={classes.ownersTitle}>\n              <Paragraph color=\"primary\" noMargin size=\"lg\">\n                {`${owners?.length || 0} Safe owner(s)`}\n              </Paragraph>\n            </Row>\n            <Hairline />\n            {owners?.map(\n              (safeOwner) =>\n                !sameAddress(safeOwner.address, owner.address) && (\n                  <Fragment key={safeOwner.address}>\n                    <Row className={classes.owner}>\n                      <Col align=\"center\" xs={12}>\n                        <PrefixedEthHashInfo\n                          hash={safeOwner.address}\n                          name={safeOwner.name}\n                          showCopyBtn\n                          showAvatar\n                          explorerUrl={getExplorerInfo(safeOwner.address)}\n                        />\n                      </Col>\n                    </Row>\n                    <Hairline />\n                  </Fragment>\n                ),\n            )}\n            <Row align=\"center\" className={classes.info}>\n              <Paragraph color=\"primary\" noMargin size=\"md\" weight=\"bolder\">\n                REMOVING OWNER &darr;\n              </Paragraph>\n            </Row>\n            <Hairline />\n            <Row className={classes.selectedOwnerRemoved} data-testid=\"remove-owner-review\">\n              <Col align=\"center\" xs={12}>\n                <PrefixedEthHashInfo\n                  hash={owner.address}\n                  name={owner.name}\n                  showCopyBtn\n                  showAvatar\n                  explorerUrl={getExplorerInfo(owner.address)}\n                />\n              </Col>\n            </Row>\n            <Row align=\"center\" className={classes.info}>\n              <Paragraph color=\"primary\" noMargin size=\"md\" weight=\"bolder\">\n                ADDING NEW OWNER &darr;\n              </Paragraph>\n            </Row>\n            <Hairline />\n            <Row className={classes.selectedOwnerAdded} data-testid=\"add-owner-review\">\n              <Col align=\"center\" xs={12}>\n                <PrefixedEthHashInfo\n                  hash={newOwner.address}\n                  name={newOwner.name}\n                  showCopyBtn\n                  showAvatar\n                  explorerUrl={getExplorerInfo(newOwner.address)}\n                />\n              </Col>\n            </Row>\n            <Hairline />\n          </Col>\n        </Row>\n        <Hairline />\n      </Block>\n    </TxModalWrapper>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Modal from 'src/components/Modal'\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\nimport { addressBookAddOrUpdate } from 'src/logic/addressBook/store/actions'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\nimport { checksumAddress } from 'src/utils/checksumAddress'\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\n\nimport { OwnerForm } from 'src/routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/OwnerForm'\nimport { ReviewReplaceOwnerModal } from 'src/routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/Review'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { isValidAddress } from 'src/utils/isValidAddress'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\nimport { extractSafeAddress } from 'src/routes/routes'\nimport { getSafeSDK } from 'src/logic/wallets/getWeb3'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { currentSafeCurrentVersion } from 'src/logic/safe/store/selectors'\nimport { _getChainId } from 'src/config'\n\nexport type OwnerValues = {\n  address: string\n  name: string\n}\n\nexport const sendReplaceOwner = async (\n  newOwner: OwnerValues,\n  safeAddress: string,\n  safeVersion: string,\n  ownerAddressToRemove: string,\n  dispatch: Dispatch,\n  txParameters: TxParameters,\n  connectedWalletAddress: string,\n  delayExecution: boolean,\n): Promise<void> => {\n  const sdk = await getSafeSDK(connectedWalletAddress, safeAddress, safeVersion)\n  const safeTx = await sdk.getSwapOwnerTx(\n    { oldOwnerAddress: ownerAddressToRemove, newOwnerAddress: newOwner.address },\n    { safeTxGas: 0 },\n  )\n  const txData = safeTx.data.data\n\n  const txHash = await dispatch(\n    createTransaction({\n      safeAddress,\n      to: safeAddress,\n      valueInWei: '0',\n      txData,\n      txNonce: txParameters.safeNonce,\n      safeTxGas: txParameters.safeTxGas,\n      ethParameters: txParameters,\n      notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\n      delayExecution,\n    }),\n  )\n\n  if (txHash) {\n    // update the AB\n    dispatch(addressBookAddOrUpdate(makeAddressBookEntry({ ...newOwner, chainId: _getChainId() })))\n  }\n}\n\ntype ReplaceOwnerProps = {\n  isOpen: boolean\n  onClose: () => void\n  owner: OwnerData\n}\n\nexport const ReplaceOwnerModal = ({ isOpen, onClose, owner }: ReplaceOwnerProps): React.ReactElement => {\n  const [activeScreen, setActiveScreen] = useState('checkOwner')\n  const [newOwner, setNewOwner] = useState({ address: '', name: '' })\n  const dispatch = useDispatch()\n  const safeAddress = extractSafeAddress()\n  const safeVersion = useSelector(currentSafeCurrentVersion)\n  const connectedWalletAddress = useSelector(userAccountSelector)\n\n  useEffect(\n    () => () => {\n      setActiveScreen('checkOwner')\n      setNewOwner({ address: '', name: '' })\n    },\n    [isOpen],\n  )\n\n  const onClickBack = () => setActiveScreen('checkOwner')\n\n  const ownerSubmitted = (newValues) => {\n    const { ownerAddress, ownerName } = newValues\n\n    if (isValidAddress(ownerAddress)) {\n      const checksumAddr = checksumAddress(ownerAddress)\n      setNewOwner({ address: checksumAddr, name: ownerName })\n      setActiveScreen('reviewReplaceOwner')\n    }\n  }\n\n  const onReplaceOwner = async (txParameters: TxParameters, delayExecution: boolean) => {\n    onClose()\n\n    try {\n      await sendReplaceOwner(\n        newOwner,\n        safeAddress,\n        safeVersion,\n        owner.address,\n        dispatch,\n        txParameters,\n        connectedWalletAddress,\n        delayExecution,\n      )\n      dispatch(addressBookAddOrUpdate(makeAddressBookEntry({ ...newOwner, chainId: _getChainId() })))\n    } catch (error) {\n      logError(Errors._810, error.message)\n    }\n  }\n\n  return (\n    <Modal\n      description=\"Replace owner from Safe\"\n      handleClose={onClose}\n      open={isOpen}\n      paperClassName=\"bigger-modal-window\"\n      title=\"Replace owner from Safe\"\n    >\n      <>\n        {activeScreen === 'checkOwner' && (\n          <OwnerForm onClose={onClose} onSubmit={ownerSubmitted} initialValues={newOwner} owner={owner} />\n        )}\n        {activeScreen === 'reviewReplaceOwner' && (\n          <ReviewReplaceOwnerModal\n            onClickBack={onClickBack}\n            onClose={onClose}\n            onSubmit={onReplaceOwner}\n            owner={owner}\n            newOwner={newOwner}\n          />\n        )}\n      </>\n    </Modal>\n  )\n}\n","import { List } from 'immutable'\n\nimport { TableColumn } from 'src/components/Table/types.d'\nimport { AddressBookState } from 'src/logic/addressBook/model/addressBook'\n\nexport const OWNERS_TABLE_NAME_ID = 'name'\nexport const OWNERS_TABLE_ADDRESS_ID = 'address'\nexport const OWNERS_TABLE_ACTIONS_ID = 'actions'\n\nexport type OwnerData = { address: string; name: string }\n\nexport const getOwnerData = (owners: AddressBookState): OwnerData[] => {\n  return owners.map((owner) => ({\n    [OWNERS_TABLE_NAME_ID]: owner.name,\n    [OWNERS_TABLE_ADDRESS_ID]: owner.address,\n  }))\n}\n\nexport const generateColumns = (): List<TableColumn> => {\n  const nameColumn: TableColumn = {\n    id: OWNERS_TABLE_NAME_ID,\n    order: false,\n    formatTypeSort: (value: string) => value.toLowerCase(),\n    disablePadding: false,\n    label: 'Name',\n    width: 150,\n    custom: false,\n    align: 'left',\n  }\n\n  const addressColumn: TableColumn = {\n    id: OWNERS_TABLE_ADDRESS_ID,\n    order: false,\n    disablePadding: false,\n    label: 'Address',\n    custom: false,\n    align: 'left',\n  }\n\n  const actionsColumn: TableColumn = {\n    id: OWNERS_TABLE_ACTIONS_ID,\n    order: false,\n    disablePadding: false,\n    label: '',\n    custom: true,\n  }\n\n  return List([nameColumn, addressColumn, actionsColumn])\n}\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nimport { lg, sm } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    formContainer: {\n      minHeight: '420px',\n    },\n    title: {\n      padding: lg,\n      paddingBottom: 0,\n    },\n    annotation: {\n      paddingLeft: lg,\n    },\n    hide: {\n      '&:hover': {\n        backgroundColor: '#f7f5f5',\n      },\n      '&:hover $actions': {\n        visibility: 'initial',\n      },\n    },\n    actions: {\n      justifyContent: 'flex-end',\n      visibility: 'hidden',\n      minWidth: '100px',\n      gap: '16px',\n    },\n    noBorderBottom: {\n      '& > td': {\n        borderBottom: 'none',\n      },\n    },\n    editOwnerIcon: {\n      cursor: 'pointer',\n    },\n    replaceOwnerIcon: {\n      marginLeft: lg,\n      cursor: 'pointer',\n    },\n    controlsRow: {\n      backgroundColor: 'white',\n      padding: lg,\n      borderRadius: sm,\n    },\n    removeOwnerIcon: {\n      marginLeft: lg,\n      cursor: 'pointer',\n    },\n  }),\n)\n","import { useState, useEffect, ReactElement } from 'react'\nimport { Icon } from '@gnosis.pm/safe-react-components'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableRow from '@material-ui/core/TableRow'\nimport cn from 'classnames'\n\nimport { AddOwnerModal } from './AddOwnerModal'\nimport { EditOwnerModal } from './EditOwnerModal'\nimport { RemoveOwnerModal } from './RemoveOwnerModal'\nimport { ReplaceOwnerModal } from './ReplaceOwnerModal'\nimport { OWNERS_TABLE_ADDRESS_ID, generateColumns, getOwnerData, OwnerData } from './dataFetcher'\nimport { useStyles } from './style'\n\nimport { getExplorerInfo } from 'src/config'\nimport ButtonHelper from 'src/components/ButtonHelper'\nimport Table from 'src/components/Table'\nimport { cellWidth } from 'src/components/Table/TableHead'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Heading from 'src/components/layout/Heading'\nimport Paragraph from 'src/components/layout/Paragraph/index'\nimport Row from 'src/components/layout/Row'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { useAnalytics, SETTINGS_EVENTS } from 'src/utils/googleAnalytics'\nimport { AddressBookState } from 'src/logic/addressBook/model/addressBook'\n\nexport const RENAME_OWNER_BTN_TEST_ID = 'rename-owner-btn'\nexport const REMOVE_OWNER_BTN_TEST_ID = 'remove-owner-btn'\nexport const ADD_OWNER_BTN_TEST_ID = 'add-owner-btn'\nexport const REPLACE_OWNER_BTN_TEST_ID = 'replace-owner-btn'\nexport const OWNERS_ROW_TEST_ID = 'owners-row'\n\ntype Props = {\n  granted: boolean\n  owners: AddressBookState\n}\n\nconst ManageOwners = ({ granted, owners }: Props): ReactElement => {\n  const { trackEvent } = useAnalytics()\n  const classes = useStyles()\n\n  const [selectedOwner, setSelectedOwner] = useState<OwnerData | undefined>()\n  const [modalsStatus, setModalStatus] = useState({\n    showAddOwner: false,\n    showRemoveOwner: false,\n    showReplaceOwner: false,\n    showEditOwner: false,\n  })\n\n  const onShow = (action, row?: OwnerData) => () => {\n    setModalStatus((prevState) => ({\n      ...prevState,\n      [`show${action}`]: !prevState[`show${action}`],\n    }))\n    if (row) {\n      setSelectedOwner(row)\n    }\n  }\n\n  const onHide = (action) => () => {\n    setModalStatus((prevState) => ({\n      ...prevState,\n      [`show${action}`]: !Boolean(prevState[`show${action}`]),\n    }))\n    setSelectedOwner(undefined)\n  }\n\n  useEffect(() => {\n    trackEvent(SETTINGS_EVENTS.OWNERS)\n  }, [trackEvent])\n\n  const columns = generateColumns()\n  const autoColumns = columns.filter((c) => !c.custom)\n  const ownerData = getOwnerData(owners)\n\n  return (\n    <>\n      <Block className={classes.formContainer}>\n        <Heading className={classes.title} tag=\"h2\">\n          Manage Safe Owners\n        </Heading>\n        <Paragraph className={classes.annotation}>\n          Add, remove and replace owners or rename existing owners. Owner names are only stored locally and never shared\n          with Gnosis or any third parties.\n        </Paragraph>\n        <TableContainer>\n          <Table\n            columns={columns}\n            data={ownerData}\n            defaultFixed\n            defaultOrderBy={OWNERS_TABLE_ADDRESS_ID}\n            disablePagination\n            label=\"Owners\"\n            noBorder\n            size={ownerData.length}\n          >\n            {(sortedData) =>\n              sortedData.map((row, index) => (\n                <TableRow\n                  className={cn(classes.hide, index >= 3 && index === sortedData.size - 1 && classes.noBorderBottom)}\n                  data-testid={OWNERS_ROW_TEST_ID}\n                  key={index}\n                >\n                  {autoColumns.map((column: any) => (\n                    <TableCell align={column.align} component=\"td\" key={column.id} style={cellWidth(column.width)}>\n                      {column.id === OWNERS_TABLE_ADDRESS_ID ? (\n                        <Block justify=\"left\">\n                          <PrefixedEthHashInfo\n                            hash={row[column.id]}\n                            showCopyBtn\n                            showAvatar\n                            explorerUrl={getExplorerInfo(row[column.id])}\n                          />\n                        </Block>\n                      ) : (\n                        row[column.id]\n                      )}\n                    </TableCell>\n                  ))}\n                  <TableCell component=\"td\">\n                    <Row align=\"end\" className={classes.actions}>\n                      <ButtonHelper onClick={onShow('EditOwner', row)} dataTestId={RENAME_OWNER_BTN_TEST_ID}>\n                        <Icon size=\"sm\" type=\"edit\" color=\"icon\" tooltip=\"Edit owner\" />\n                      </ButtonHelper>\n                      {granted && (\n                        <>\n                          <ButtonHelper onClick={onShow('ReplaceOwner', row)} dataTestId={REPLACE_OWNER_BTN_TEST_ID}>\n                            <Icon size=\"sm\" type=\"replaceOwner\" color=\"icon\" tooltip=\"Replace owner\" />\n                          </ButtonHelper>\n                          {ownerData.length > 1 && (\n                            <ButtonHelper onClick={onShow('RemoveOwner', row)} dataTestId={REMOVE_OWNER_BTN_TEST_ID}>\n                              <Icon size=\"sm\" type=\"delete\" color=\"error\" tooltip=\"Remove owner\" />\n                            </ButtonHelper>\n                          )}\n                        </>\n                      )}\n                    </Row>\n                  </TableCell>\n                </TableRow>\n              ))\n            }\n          </Table>\n        </TableContainer>\n      </Block>\n      {granted && (\n        <>\n          <Hairline />\n          <Row align=\"end\" className={classes.controlsRow} grow>\n            <Col end=\"xs\">\n              <Button\n                color=\"primary\"\n                onClick={onShow('AddOwner')}\n                size=\"small\"\n                testId={ADD_OWNER_BTN_TEST_ID}\n                variant=\"contained\"\n              >\n                Add new owner\n              </Button>\n            </Col>\n          </Row>\n        </>\n      )}\n      <AddOwnerModal isOpen={modalsStatus.showAddOwner} onClose={onHide('AddOwner')} />\n      {selectedOwner && (\n        <>\n          <RemoveOwnerModal\n            isOpen={modalsStatus.showRemoveOwner}\n            onClose={onHide('RemoveOwner')}\n            owner={selectedOwner}\n          />\n          <ReplaceOwnerModal\n            isOpen={modalsStatus.showReplaceOwner}\n            onClose={onHide('ReplaceOwner')}\n            owner={selectedOwner}\n          />\n          <EditOwnerModal isOpen={modalsStatus.showEditOwner} onClose={onHide('EditOwner')} owner={selectedOwner} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ManageOwners\n"],"sourceRoot":""}
{"version":3,"sources":["logic/contractInteraction/sources/ABIService/index.ts","routes/safe/components/Balances/SendModal/screens/ContractInteraction/ContractABI/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/FormErrorMessage/index.tsx","routes/safe/components/CurrencyDropdown/img/check.svg","routes/safe/components/CurrencyDropdown/style.ts","routes/safe/components/Balances/SendModal/screens/ContractInteraction/MethodsDropdown/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/RenderInputParams/InputComponent/ArrayTypeInput.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/RenderInputParams/InputComponent/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/RenderInputParams/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/RenderOutputParams/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/NativeCoinValue/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/index.tsx","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","../node_modules/@material-ui/icons/Search.js"],"names":["getMethodSignature","inputs","name","params","map","x","type","join","getSignatureHash","signature","keccak256","toString","isAllowedMethod","getMethodAction","stateMutability","includes","extractUsefulMethods","abi","filter","method","action","methodSignature","signatureHash","getMethodSignatureAndSignatureHash","sort","a","b","toLowerCase","NO_DATA","hasUsefulMethods","JSON","parse","length","e","ContractABI","contractAddress","useField","subscription","value","input","mutators","useForm","setAbiValue","useRef","useEffect","validateAndSetAbi","isEthereumAddress","undefined","mustBeEthereumAddress","mustBeEthereumContractAddress","isEthereumContractAddress","parsePrefixedAddress","address","getContractABI","current","Row","margin","Col","TextAreaField","placeholder","text","validate","useStyles","makeStyles","styles","FormErrorMessage","classes","useFormState","modifiedSinceLastSubmit","submitError","align","className","fullWidth","Paragraph","color","noMargin","size","style","letterSpacing","overflowWrap","buttonWidth","useDropdownStyles","listItem","maxWidth","props","boxSizing","listItemSearch","padding","localFlag","backgroundPosition","backgroundRepeat","backgroundSize","height","width","etherFlag","iconLeft","marginRight","iconRight","marginLeft","button","backgroundColor","border","borderRadius","cursor","fontSize","fontWeight","lineHeight","minWidth","outline","textAlign","opacity","buttonInner","display","position","borderLeft","borderRight","borderTop","content","right","top","openMenuButton","borderBottom","dropdownItemsScrollWrapper","maxHeight","overflow","search","searchIcon","alignItems","justifyContent","left","pointerEvents","transform","fill","inputRoot","inputInput","MENU_WIDTH","StyledText","styled","Text","MethodsDropdown","onChange","valid","meta","selectedMethodByDefault","initialValues","selectedMethod","useState","setSelectedMethod","methodsList","setMethodsList","methodsListFiltered","setMethodsListFiltered","anchorEl","setAnchorEl","searchParams","setSearchParams","handleClose","NO_CONTRACT","theme","DropdownListTheme","onClick","event","currentTarget","classNames","Menu","anchorOrigin","horizontal","vertical","elevation","getContentAnchorEl","id","keepMounted","onClose","open","PaperProps","transformOrigin","MenuItem","InputBase","root","inputProps","target","chosenMethod","ListItemText","primary","ListItemIcon","alt","src","CheckIcon","validator","values","Array","isArray","typePlaceholder","isAddress","isBoolean","isUint","isInt","isByte","ArrayTypeInput","InputComponent","keyValue","Field","component","Checkbox","label","TextField","testId","composeValidators","required","mustBeAddressHash","isArrayParameter","RenderInputParams","validABI","index","key","generateFormFieldKey","output","overflowY","RenderOutputParams","results","multipleResults","outputs","multiline","disabled","rowsMax","NativeCoinValue","onSetMax","nativeCurrency","getNativeCurrency","ethBalance","useSelector","currentSafeEthBalance","Boolean","payable","isPayable","ButtonLink","weight","inputAdornment","endAdornment","InputAdornment","symbol","mustBeFloat","maxValue","ContractInteraction","setCallResults","isABI","onNext","switchMethod","safeAddress","extractSafeAddress","useMemo","saveForm","handleSubmit","submit","txObject","createTxObject","data","encodeABI","isReadMethod","call","from","result","handleSubmitError","ModalHeader","subTitle","title","Hairline","GnoForm","decorators","ensResolver","formMutators","onSubmit","submitting","pristine","validating","rest","Block","formContainer","SafeInfo","Divider","withArrow","EthAddressInput","onScannedValue","setContractAddress","setMax","Switch","checked","Buttons","requiresMethod","React","ref","other","_objectWithoutProperties","context","ListContext","_extends","clsx","alignItemsFlexStart","withStyles","palette","active","flexShrink","marginTop","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d"],"mappings":"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","file":"static/js/69.836a9e70.chunk.js","sourcesContent":["import { AbiItem, keccak256 } from 'web3-utils'\n\nexport interface AllowedAbiItem extends AbiItem {\n  name: string\n  type: 'function'\n}\n\nexport interface AbiItemExtended extends AllowedAbiItem {\n  action: string\n  methodSignature: string\n  signatureHash: string\n}\n\nexport const getMethodSignature = ({ inputs, name }: AbiItem): string => {\n  const params = inputs?.map((x) => x.type).join(',')\n  return `${name}(${params})`\n}\n\nexport const getSignatureHash = (signature: string): string => {\n  return keccak256(signature).toString()\n}\n\nexport const getMethodHash = (method: AbiItem): string => {\n  const signature = getMethodSignature(method)\n  return getSignatureHash(signature)\n}\n\nexport const getMethodSignatureAndSignatureHash = (\n  method: AbiItem,\n): { methodSignature: string; signatureHash: string } => {\n  const methodSignature = getMethodSignature(method)\n  const signatureHash = getSignatureHash(methodSignature)\n  return { methodSignature, signatureHash }\n}\n\nexport const isAllowedMethod = ({ name, type }: AbiItem): boolean => {\n  return type === 'function' && !!name\n}\n\nexport const getMethodAction = ({ stateMutability }: AbiItem): 'read' | 'write' => {\n  if (!stateMutability) {\n    return 'write'\n  }\n\n  return ['view', 'pure'].includes(stateMutability) ? 'read' : 'write'\n}\n\nexport const extractUsefulMethods = (abi: AbiItem[]): AbiItemExtended[] => {\n  const allowedAbiItems = abi.filter(isAllowedMethod) as AllowedAbiItem[]\n\n  return allowedAbiItems\n    .map(\n      (method): AbiItemExtended => ({\n        action: getMethodAction(method),\n        ...getMethodSignatureAndSignatureHash(method),\n        ...method,\n      }),\n    )\n    .sort(({ name: a }, { name: b }) => {\n      return a.toLowerCase() > b.toLowerCase() ? 1 : -1\n    })\n}\n\nexport const isPayable = (method: AbiItem | AbiItemExtended): boolean => {\n  return Boolean(method?.payable) || method.stateMutability === 'payable'\n}\n","import { useField, useForm } from 'react-final-form'\nimport { useRef, useEffect } from 'react'\n\nimport { TextAreaField } from 'src/components/forms/TextAreaField'\nimport { mustBeEthereumAddress, mustBeEthereumContractAddress } from 'src/components/forms/validator'\nimport Col from 'src/components/layout/Col'\nimport Row from 'src/components/layout/Row'\nimport { getContractABI } from 'src/config'\nimport { extractUsefulMethods } from 'src/logic/contractInteraction/sources/ABIService'\nimport { parsePrefixedAddress } from 'src/utils/prefixedAddress'\n\nexport const NO_DATA = 'no data'\n\nconst hasUsefulMethods = (abi: string): undefined | string => {\n  try {\n    const parsedABI = extractUsefulMethods(JSON.parse(abi))\n\n    if (parsedABI.length === 0) {\n      return NO_DATA\n    }\n  } catch (e) {\n    return NO_DATA\n  }\n}\n\nconst ContractABI = (): React.ReactElement => {\n  const {\n    input: { value: contractAddress },\n  } = useField('contractAddress', { subscription: { value: true } })\n  const { mutators } = useForm()\n  const setAbiValue = useRef(mutators.setAbiValue)\n\n  useEffect(() => {\n    const validateAndSetAbi = async () => {\n      const isEthereumAddress = mustBeEthereumAddress(contractAddress) === undefined\n      const isEthereumContractAddress = (await mustBeEthereumContractAddress(contractAddress)) === undefined\n\n      if (isEthereumAddress && isEthereumContractAddress) {\n        const { address } = parsePrefixedAddress(contractAddress)\n        const abi = await getContractABI(address)\n        const isValidABI = hasUsefulMethods(abi) === undefined\n\n        // this check may help in scenarios where the user first pastes the ABI,\n        // and then sets a Proxy contract that has no useful methods\n        if (isValidABI) {\n          setAbiValue.current(abi)\n        }\n      }\n    }\n\n    if (contractAddress) {\n      validateAndSetAbi()\n    }\n  }, [contractAddress])\n\n  return (\n    <Row margin=\"sm\">\n      <Col>\n        <TextAreaField name=\"abi\" placeholder=\"ABI*\" text=\"ABI*\" type=\"text\" validate={hasUsefulMethods} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default ContractABI\n","import { makeStyles } from '@material-ui/core/styles'\n\nimport { useFormState } from 'react-final-form'\n\nimport Row from 'src/components/layout/Row'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { styles } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/style'\n\nconst useStyles = makeStyles(styles)\n\nconst FormErrorMessage = (): React.ReactElement | null => {\n  const classes = useStyles()\n  const { modifiedSinceLastSubmit, submitError } = useFormState({\n    subscription: { modifiedSinceLastSubmit: true, submitError: true },\n  })\n\n  const hasNewSubmitError = !!submitError && !modifiedSinceLastSubmit\n  return hasNewSubmitError ? (\n    <Row align=\"center\" className={classes.fullWidth} margin=\"xs\">\n      <Paragraph color=\"error\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px', overflowWrap: 'anywhere' }}>\n        {submitError}\n      </Paragraph>\n    </Row>\n  ) : null\n}\n\nexport default FormErrorMessage\n","export default __webpack_public_path__ + \"static/media/check.7da64643.svg\";","import { makeStyles } from '@material-ui/core/styles'\n\nconst buttonWidth = '140px'\nexport const useDropdownStyles = makeStyles({\n  listItem: {\n    maxWidth: (props: any) => (props.buttonWidth ? props.buttonWidth : buttonWidth),\n    boxSizing: 'border-box',\n  },\n  listItemSearch: {\n    maxWidth: (props: any) => (props.buttonWidth ? props.buttonWidth : buttonWidth),\n    padding: '0',\n    boxSizing: 'border-box',\n  },\n  localFlag: {\n    backgroundPosition: '50% 50%',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'contain',\n    height: '20px !important',\n    width: '26px !important',\n  },\n  etherFlag: {\n    backgroundPosition: '50% 50%',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'contain',\n    width: '26px',\n    height: '26px',\n  },\n  iconLeft: {\n    marginRight: '10px',\n  },\n  iconRight: {\n    marginLeft: '18px',\n  },\n  button: {\n    backgroundColor: '#e8e7e6',\n    border: 'none',\n    borderRadius: '3px',\n    boxSizing: 'border-box',\n    color: '#5d6d74',\n    cursor: 'pointer',\n    fontSize: '12px',\n    fontWeight: 'normal',\n    height: '24px',\n    lineHeight: '1.33',\n    marginRight: '20px',\n    minWidth: (props: any) => (props.buttonWidth ? props.buttonWidth : buttonWidth),\n    outline: 'none',\n    padding: '0',\n    textAlign: 'left',\n    '&:active': {\n      opacity: '0.8',\n    },\n  },\n  buttonInner: {\n    boxSizing: 'border-box',\n    display: 'block',\n    height: '100%',\n    lineHeight: '24px',\n    padding: '0 22px 0 8px',\n    position: 'relative',\n    width: '100%',\n    '&::after': {\n      borderLeft: '5px solid transparent',\n      borderRight: '5px solid transparent',\n      borderTop: '5px solid #5d6d74',\n      content: '\"\"',\n      height: '0',\n      position: 'absolute',\n      right: '8px',\n      top: '9px',\n      width: '0',\n    },\n  },\n  openMenuButton: {\n    '&::after': {\n      borderBottom: '5px solid #5d6d74',\n      borderLeft: '5px solid transparent',\n      borderRight: '5px solid transparent',\n      borderTop: 'none',\n    },\n  },\n  dropdownItemsScrollWrapper: {\n    maxHeight: '280px',\n    overflow: 'auto',\n  },\n  search: {\n    position: 'relative',\n    borderRadius: '0',\n    backgroundColor: '#fff',\n    '&:hover': {\n      backgroundColor: '#fff',\n    },\n    marginRight: 0,\n    width: '100%',\n  },\n  searchIcon: {\n    alignItems: 'center',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n    left: '12px',\n    margin: '0',\n    pointerEvents: 'none',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    width: '18px',\n    '& path': {\n      fill: '#b2b5b2',\n    },\n  },\n  inputRoot: {\n    color: '#5d6d74',\n    fontSize: '14px',\n    fontWeight: 'normal',\n    lineHeight: '1.43',\n    width: '100%',\n  },\n  inputInput: {\n    boxSizing: 'border-box',\n    height: '44px',\n    padding: '12px 12px 12px 40px',\n    width: '100%',\n  },\n})\n","import InputBase from '@material-ui/core/InputBase'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport SearchIcon from '@material-ui/icons/Search'\nimport classNames from 'classnames'\nimport { ReactElement, useEffect, useState } from 'react'\nimport { useField, useFormState } from 'react-final-form'\nimport { AbiItem } from 'web3-utils'\n\nimport Col from 'src/components/layout/Col'\nimport Row from 'src/components/layout/Row'\nimport { NO_CONTRACT } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/utils'\nimport CheckIcon from 'src/routes/safe/components/CurrencyDropdown/img/check.svg'\nimport { useDropdownStyles } from 'src/routes/safe/components/CurrencyDropdown/style'\nimport { DropdownListTheme } from 'src/theme/mui'\nimport { extractUsefulMethods, AbiItemExtended } from 'src/logic/contractInteraction/sources/ABIService'\nimport { Text } from '@gnosis.pm/safe-react-components'\nimport styled from 'styled-components'\n\nconst MENU_WIDTH = '452px'\n\nconst StyledText = styled(Text)`\n  padding: 4px 0 0 8px;\n`\n\ninterface MethodsDropdownProps {\n  onChange: (method: AbiItem) => void\n}\n\nexport const MethodsDropdown = ({ onChange }: MethodsDropdownProps): ReactElement | null => {\n  const classes = useDropdownStyles({ buttonWidth: MENU_WIDTH })\n  const {\n    input: { value: abi },\n    meta: { valid },\n  } = useField('abi', { subscription: { value: true, valid: true } })\n  const {\n    initialValues: { selectedMethod: selectedMethodByDefault },\n  } = useFormState({ subscription: { initialValues: true } })\n  const [selectedMethod, setSelectedMethod] = useState(selectedMethodByDefault ? selectedMethodByDefault : {})\n  const [methodsList, setMethodsList] = useState<AbiItemExtended[]>([])\n  const [methodsListFiltered, setMethodsListFiltered] = useState<AbiItemExtended[]>([])\n\n  const [anchorEl, setAnchorEl] = useState(null)\n  const [searchParams, setSearchParams] = useState('')\n\n  useEffect(() => {\n    if (abi) {\n      try {\n        setMethodsList(extractUsefulMethods(JSON.parse(abi)))\n      } catch (e) {\n        setMethodsList([])\n      }\n    }\n  }, [abi])\n\n  useEffect(() => {\n    setMethodsListFiltered(methodsList.filter(({ name }) => name?.toLowerCase().includes(searchParams.toLowerCase())))\n  }, [methodsList, searchParams])\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const onMethodSelectedChanged = (chosenMethod: AbiItem) => {\n    setSelectedMethod(chosenMethod)\n    onChange(chosenMethod)\n    handleClose()\n  }\n\n  if (!valid || !abi || abi === NO_CONTRACT) {\n    return null\n  }\n\n  return (\n    <Row margin=\"sm\">\n      <Col>\n        <MuiThemeProvider theme={DropdownListTheme}>\n          <>\n            <button className={classes.button} onClick={handleClick} type=\"button\">\n              <StyledText\n                size=\"md\"\n                color=\"placeHolder\"\n                className={classNames(classes.buttonInner, anchorEl && classes.openMenuButton)}\n              >\n                {(selectedMethod as Record<string, string>).name || 'Method'}\n              </StyledText>\n            </button>\n            <Menu\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                horizontal: 'center',\n                vertical: 'bottom',\n              }}\n              elevation={0}\n              getContentAnchorEl={null}\n              id=\"customizedMenu\"\n              keepMounted\n              onClose={handleClose}\n              open={!!anchorEl}\n              PaperProps={{ style: { width: MENU_WIDTH } }}\n              transformOrigin={{\n                horizontal: 'center',\n                vertical: 'top',\n              }}\n            >\n              <MenuItem className={classes.listItemSearch} key=\"0\">\n                <div className={classes.search}>\n                  <div className={classes.searchIcon}>\n                    <SearchIcon />\n                  </div>\n                  <InputBase\n                    classes={{\n                      root: classes.inputRoot,\n                      input: classes.inputInput,\n                    }}\n                    inputProps={{ 'aria-label': 'search' }}\n                    onChange={(event) => setSearchParams(event.target.value)}\n                    placeholder=\"Search…\"\n                    value={searchParams}\n                  />\n                </div>\n              </MenuItem>\n              <div className={classes.dropdownItemsScrollWrapper}>\n                {methodsListFiltered.map((method) => {\n                  const { action, name, signatureHash } = method\n\n                  return (\n                    <MenuItem\n                      className={classes.listItem}\n                      key={signatureHash}\n                      onClick={() => onMethodSelectedChanged(method)}\n                      value={signatureHash}\n                    >\n                      <ListItemText primary={name} />\n                      <ListItemIcon className={classes.iconRight}>\n                        {signatureHash === (selectedMethod as Record<string, string>).signatureHash ? (\n                          <img alt=\"checked\" src={CheckIcon} />\n                        ) : (\n                          <span />\n                        )}\n                      </ListItemIcon>\n                      <ListItemIcon className={classes.iconRight}>\n                        <div>{action}</div>\n                      </ListItemIcon>\n                    </MenuItem>\n                  )\n                })}\n              </div>\n            </Menu>\n          </>\n        </MuiThemeProvider>\n      </Col>\n    </Row>\n  )\n}\n","import { TextAreaField } from 'src/components/forms/TextAreaField'\nimport {\n  isAddress,\n  isBoolean,\n  isByte,\n  isInt,\n  isUint,\n} from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/utils'\n\nconst validator = (value: string): string | undefined => {\n  try {\n    const values = JSON.parse(value)\n\n    if (!Array.isArray(values)) {\n      return 'be sure to surround value with []'\n    }\n  } catch (e) {\n    return 'invalid format'\n  }\n}\n\nconst typePlaceholder = (text: string, type: string): string => {\n  if (isAddress(type)) {\n    return `${text} E.g.: [\"0xACa94ef8bD5ffEE41947b4585a84BdA5a3d3DA6E\",\"0x1dF62f291b2E969fB0849d99D9Ce41e2F137006e\"]`\n  }\n\n  if (isBoolean(type)) {\n    return `${text} E.g.: [true, false, false, true]`\n  }\n\n  if (isUint(type)) {\n    return `${text} E.g.: [1000, 212, 320000022, 23]`\n  }\n\n  if (isInt(type)) {\n    return `${text} E.g.: [1000, -212, 1232, -1]`\n  }\n\n  if (isByte(type)) {\n    return `${text} E.g.: [\"0xc00000000000000000000000000000000000\", \"0xc00000000000000000000000000000000001\"]`\n  }\n\n  return `${text} E.g.: [\"first value\", \"second value\", \"third value\"]`\n}\n\nconst ArrayTypeInput = ({ name, text, type }: { name: string; text: string; type: string }): React.ReactElement => (\n  <TextAreaField name={name} placeholder={typePlaceholder(text, type)} text={text} type=\"text\" validate={validator} />\n)\n\nexport default ArrayTypeInput\n","import { Checkbox } from '@gnosis.pm/safe-react-components'\nimport { ReactElement } from 'react'\n\nimport Col from 'src/components/layout/Col'\nimport Field from 'src/components/forms/Field'\nimport TextField from 'src/components/forms/TextField'\n\nimport { composeValidators, mustBeAddressHash, required } from 'src/components/forms/validator'\nimport { isArrayParameter } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/utils'\nimport ArrayTypeInput from './ArrayTypeInput'\n\ntype Props = {\n  type: string\n  keyValue: string\n  placeholder: string\n}\n\nexport const InputComponent = ({ type, keyValue, placeholder }: Props): ReactElement | null => {\n  if (!type) {\n    return null\n  }\n\n  switch (type) {\n    case 'bool': {\n      const inputProps = {\n        'data-testid': keyValue,\n      }\n      return (\n        <Col>\n          <Field component={Checkbox} name={keyValue} label={placeholder} type=\"checkbox\" inputProps={inputProps} />\n        </Col>\n      )\n    }\n    case 'address': {\n      return (\n        <Col>\n          <Field\n            component={TextField}\n            name={keyValue}\n            placeholder={placeholder}\n            testId={keyValue}\n            text={placeholder}\n            type=\"text\"\n            validate={composeValidators(required, mustBeAddressHash)}\n          />\n        </Col>\n      )\n    }\n    default: {\n      return (\n        <Col>\n          {isArrayParameter(type) ? (\n            <ArrayTypeInput name={keyValue} text={placeholder} type={type} />\n          ) : (\n            <Field\n              component={TextField}\n              name={keyValue}\n              placeholder={placeholder}\n              testId={keyValue}\n              text={placeholder}\n              type=\"text\"\n              validate={required}\n            />\n          )}\n        </Col>\n      )\n    }\n  }\n}\n","import { ReactElement } from 'react'\nimport { useField } from 'react-final-form'\n\nimport Row from 'src/components/layout/Row'\n\nimport { InputComponent } from './InputComponent'\nimport { generateFormFieldKey } from '../utils'\nimport { AbiItemExtended } from 'src/logic/contractInteraction/sources/ABIService'\n\nexport const RenderInputParams = (): ReactElement | null => {\n  const {\n    meta: { valid: validABI },\n  } = useField('abi', { subscription: { valid: true, value: true } })\n  const {\n    input: { value: method },\n  }: { input: { value: AbiItemExtended } } = useField('selectedMethod', { subscription: { value: true } })\n  const renderInputs = validABI && !!method && method.inputs?.length\n\n  return !renderInputs ? null : (\n    <>\n      {method.inputs?.map(({ name, type }, index) => {\n        const placeholder = name ? `${name} (${type})` : type\n        const key = generateFormFieldKey(type, method.signatureHash, index)\n\n        return (\n          <Row key={key} margin=\"sm\">\n            <InputComponent type={type} keyValue={key} placeholder={placeholder} />\n          </Row>\n        )\n      })}\n    </>\n  )\n}\n","import { ReactElement } from 'react'\nimport { useField } from 'react-final-form'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from 'src/components/forms/TextField'\nimport Col from 'src/components/layout/Col'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\n\nconst useStyles = makeStyles({\n  output: {\n    '& > div > textarea': {\n      letterSpacing: '-0.5px',\n      lineHeight: '20px',\n      height: '40px',\n      overflowY: 'auto',\n    },\n  },\n})\n\nexport const RenderOutputParams = (): ReactElement | null => {\n  const classes = useStyles()\n  const {\n    input: { value: method },\n  }: any = useField('selectedMethod', { subscription: { value: true } })\n  const {\n    input: { value: results },\n  }: any = useField('callResults', { subscription: { value: true } })\n  const multipleResults = !!method && method.outputs.length > 1\n\n  if (results == null || results === '') {\n    return null\n  }\n\n  return (\n    <>\n      <Row align=\"left\" margin=\"xs\">\n        <Paragraph color=\"primary\" size=\"lg\" style={{ letterSpacing: '-0.5px' }}>\n          Call result:\n        </Paragraph>\n      </Row>\n      {method.outputs?.map(({ name, type }, index) => {\n        const placeholder = name ? `${name} (${type})` : type\n        const key = `methodCallResult-${method.name}_${index}_${type}`\n        const value = multipleResults ? results[index] : results\n\n        return (\n          <Row key={key} margin=\"sm\">\n            <Col>\n              <TextField\n                className={classes.output}\n                multiline\n                disabled\n                rowsMax={3}\n                input={{ name: key, value: value.toString(), placeholder, type: 'text' }}\n                meta={{ valid: true }}\n                testId={key}\n                text={placeholder}\n              />\n            </Col>\n          </Row>\n        )\n      })}\n    </>\n  )\n}\n","import InputAdornment from '@material-ui/core/InputAdornment'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { useField } from 'react-final-form'\nimport { useSelector } from 'react-redux'\n\nimport Field from 'src/components/forms/Field'\nimport TextField from 'src/components/forms/TextField'\nimport { composeValidators, maxValue, mustBeFloat } from 'src/components/forms/validator'\nimport ButtonLink from 'src/components/layout/ButtonLink'\nimport Col from 'src/components/layout/Col'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { isPayable } from 'src/logic/contractInteraction/sources/ABIService'\nimport { styles } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/style'\nimport { currentSafeEthBalance } from 'src/logic/safe/store/selectors'\nimport { getNativeCurrency } from 'src/config'\n\nconst useStyles = makeStyles(styles)\n\ninterface NativeCoinValueProps {\n  onSetMax: (nativeCoinBalance: string) => void\n}\n\nexport const NativeCoinValue = ({ onSetMax }: NativeCoinValueProps): React.ReactElement | null => {\n  const classes = useStyles()\n  const nativeCurrency = getNativeCurrency()\n  const ethBalance = useSelector(currentSafeEthBalance)\n\n  const {\n    input: { value: method },\n  } = useField('selectedMethod', { subscription: { value: true } })\n  const disabled = !isPayable(method)\n\n  if (!ethBalance) {\n    return null\n  }\n\n  return disabled ? null : (\n    <>\n      <Row className={classes.fullWidth} margin=\"xs\">\n        <Paragraph color=\"disabled\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px' }}>\n          Value\n        </Paragraph>\n        <ButtonLink\n          color={disabled ? 'disabled' : 'secondary'}\n          onClick={() => !disabled && onSetMax(ethBalance)}\n          weight=\"bold\"\n        >\n          Send max\n        </ButtonLink>\n      </Row>\n      <Row margin=\"md\">\n        <Col>\n          <Field\n            component={TextField}\n            disabled={disabled}\n            inputAdornment={{\n              endAdornment: <InputAdornment position=\"end\">{nativeCurrency.symbol}</InputAdornment>,\n              disabled,\n            }}\n            name=\"value\"\n            placeholder=\"Value\"\n            text=\"Value\"\n            type=\"text\"\n            validate={!disabled && composeValidators(mustBeFloat, maxValue(ethBalance))}\n          />\n        </Col>\n      </Row>\n    </>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport { useMemo } from 'react'\nimport Switch from '@material-ui/core/Switch'\n\nimport { styles } from './style'\nimport Divider from 'src/components/Divider'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport Block from 'src/components/layout/Block'\nimport Hairline from 'src/components/layout/Hairline'\nimport SafeInfo from 'src/routes/safe/components/Balances/SendModal/SafeInfo'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Buttons from './Buttons'\nimport ContractABI from './ContractABI'\nimport { EthAddressInput } from './EthAddressInput'\nimport FormErrorMessage from './FormErrorMessage'\nimport { MethodsDropdown } from './MethodsDropdown'\nimport { RenderInputParams } from './RenderInputParams'\nimport { RenderOutputParams } from './RenderOutputParams'\nimport { createTxObject, formMutators, handleSubmitError, isReadMethod, ensResolver } from './utils'\nimport { TransactionReviewType } from './Review'\nimport { NativeCoinValue } from './NativeCoinValue'\nimport { ModalHeader } from '../ModalHeader'\nimport { extractSafeAddress } from 'src/routes/routes'\n\nconst useStyles = makeStyles(styles)\n\nexport interface CreatedTx {\n  contractAddress: string\n  data: string\n  selectedMethod: TransactionReviewType\n  value: string | number\n}\n\nexport type ContractInteractionTx = {\n  contractAddress?: string\n}\n\nexport interface ContractInteractionProps {\n  contractAddress?: string\n  initialValues: ContractInteractionTx\n  isABI: boolean\n  onClose: () => void\n  switchMethod: () => void\n  onNext: (tx: CreatedTx, submit: boolean) => void\n}\n\nconst ContractInteraction: React.FC<ContractInteractionProps> = ({\n  contractAddress,\n  initialValues,\n  isABI,\n  onClose,\n  onNext,\n  switchMethod,\n}) => {\n  const classes = useStyles()\n  const safeAddress = extractSafeAddress()\n  let setCallResults\n\n  useMemo(() => {\n    if (contractAddress) {\n      initialValues.contractAddress = contractAddress\n    }\n  }, [contractAddress, initialValues])\n\n  const saveForm = async (values: CreatedTx): Promise<void> => {\n    await handleSubmit(values, false)\n    switchMethod()\n  }\n\n  const handleSubmit = async (\n    { contractAddress, selectedMethod, value, ...values },\n    submit = true,\n  ): Promise<void | Record<string, string>> => {\n    if (value || (contractAddress && selectedMethod)) {\n      try {\n        const txObject = createTxObject(selectedMethod, contractAddress, values)\n        const data = txObject.encodeABI()\n\n        if (isReadMethod(selectedMethod) && submit) {\n          const result = await txObject.call({ from: safeAddress })\n          setCallResults(result)\n\n          // this was a read method, so we won't go to the 'review' screen\n          return\n        }\n\n        onNext({ ...values, contractAddress, data, selectedMethod, value }, submit)\n      } catch (error) {\n        return handleSubmitError(error, values)\n      }\n    }\n  }\n\n  return (\n    <>\n      <ModalHeader onClose={onClose} subTitle=\"1 of 2\" title=\"Contract interaction\" />\n      <Hairline />\n      <GnoForm\n        decorators={[ensResolver]}\n        formMutators={formMutators}\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        subscription={{ submitting: true, pristine: true, values: true }}\n      >\n        {(submitting, validating, rest, mutators) => {\n          setCallResults = mutators.setCallResults\n          return (\n            <>\n              <Block className={classes.formContainer}>\n                <SafeInfo />\n                <Divider withArrow />\n                <EthAddressInput\n                  name=\"contractAddress\"\n                  onScannedValue={mutators.setContractAddress}\n                  text=\"Contract address*\"\n                />\n                <ContractABI />\n                <MethodsDropdown onChange={mutators.setSelectedMethod} />\n                <NativeCoinValue onSetMax={mutators.setMax} />\n                <RenderInputParams />\n                <RenderOutputParams />\n                <FormErrorMessage />\n                <Paragraph color=\"disabled\" noMargin size=\"lg\" style={{ letterSpacing: '-0.5px' }}>\n                  <Switch checked={!isABI} onChange={() => saveForm(rest.values)} />\n                  Use custom data (hex encoded)\n                </Paragraph>\n              </Block>\n              <Buttons onClose={onClose} requiresMethod />\n            </>\n          )\n        }}\n      </GnoForm>\n    </>\n  )\n}\n\nexport default ContractInteraction\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\n\nexports.default = _default;"],"sourceRoot":""}
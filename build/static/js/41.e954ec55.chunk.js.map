{"version":3,"sources":["routes/safe/components/Transactions/helpers/TxModalWrapper/index.tsx","routes/safe/components/Balances/utils/setTokenImgToPlaceholder.ts","routes/safe/components/Balances/assets/token_placeholder.svg","assets/icons/qrcode.svg","components/ScanQRModal/style.ts","components/ScanQRModal/index.tsx","components/ScanQRModal/ScanQRWrapper/index.tsx","components/forms/SelectField/index.tsx","components/Table/TableHead.tsx","components/Table/sorting.ts","components/Table/index.tsx","routes/safe/components/Balances/SendModal/screens/AddressBookInput/style.ts","routes/safe/components/Balances/SendModal/screens/AddressBookInput/index.tsx","routes/safe/components/Settings/SpendingLimit/FormFields/ResetTime.tsx","routes/safe/components/Settings/SpendingLimit/FormFields/Amount.tsx","routes/safe/components/Settings/SpendingLimit/style.ts","routes/safe/components/Settings/SpendingLimit/InfoDisplay/AddressInfo.tsx","routes/safe/components/Settings/SpendingLimit/InfoDisplay/ResetTimeInfo.tsx","routes/safe/components/Settings/SpendingLimit/InfoDisplay/TokenInfo.tsx","logic/safe/hooks/useTokenInfo.tsx","components/layout/Table/index.tsx","../node_modules/@material-ui/core/esm/Toolbar/Toolbar.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","routes/safe/components/Balances/SendModal/screens/SendFunds/TokenSelectField/style.ts","routes/safe/components/Balances/SendModal/screens/SendFunds/TokenSelectField/index.tsx","routes/safe/components/Settings/SpendingLimit/RemoveLimitModal.tsx","routes/safe/components/Settings/SpendingLimit/LimitsTable/dataFetcher.ts","logic/hooks/useWindowDimensions.tsx","routes/safe/components/Settings/SpendingLimit/LimitsTable/SpentVsAmount.tsx","routes/safe/components/Settings/SpendingLimit/LimitsTable/index.tsx","routes/safe/components/Settings/SpendingLimit/FormFields/Beneficiary.tsx","routes/safe/components/Settings/SpendingLimit/FormFields/Token.tsx","routes/safe/components/Settings/SpendingLimit/NewLimitModal/Create.tsx","routes/safe/components/Settings/SpendingLimit/NewLimitModal/Review.tsx","routes/safe/components/Settings/SpendingLimit/NewLimitModal/index.tsx","routes/safe/components/Settings/SpendingLimit/assets/asset-amount.svg","routes/safe/components/Settings/SpendingLimit/assets/beneficiary.svg","routes/safe/components/Settings/SpendingLimit/assets/time.svg","routes/safe/components/Settings/SpendingLimit/NewLimitSteps.tsx","routes/safe/components/Settings/SpendingLimit/index.tsx"],"names":["Container","styled","div","lg","md","TxModalWrapper","children","operation","txData","txValue","txTo","txType","onSubmit","onBack","submitText","isConfirmDisabled","useState","manualSafeTxGas","setManualSafeTxGas","manualGasPrice","setManualGasPrice","manualMaxPrioFee","setManualMaxPrioFee","manualGasLimit","setManualGasLimit","manualSafeNonce","setManualSafeNonce","executionApproved","setExecutionApproved","safeAddress","extractSafeAddress","isSpendingLimitTx","isSpendingLimit","useEstimateTransactionGas","txRecipient","txAmount","safeTxGas","gasCostFormatted","gasPriceFormatted","gasMaxPrioFeeFormatted","gasLimit","gasEstimation","txEstimationExecutionStatus","isCreation","isOffChainSignature","useEstimationStatus","submitStatus","setSubmitStatus","canTxExecute","useCanTxExecute","undefined","doExecute","onClose","txParameters","oldGasPrice","newGasPrice","ethGasPrice","oldGasLimit","newGasLimit","ethGasLimit","oldMaxPrioFee","newMaxPrioFee","ethMaxPrioFee","oldSafeTxGas","newSafeTxGas","newSafeNonce","safeNonce","newSafeNonceNumber","parseInt","isExecution","closeEditModalCallback","toggleEditMode","onChange","onEdit","isTransactionCreation","isTransactionExecution","Footer","withoutBorder","ButtonStatus","LOADING","Buttons","cancelButtonProps","onClick","text","confirmButtonProps","READY","logError","Errors","_802","onSubmitClick","status","disabled","EstimationStatus","testId","setImageToPlaceholder","event","img","currentTarget","test","src","TokenPlaceholder","styles","createStyles","heading","padding","justifyContent","maxHeight","boxSizing","loaderContainer","width","height","close","color","secondaryText","detailsContainer","backgroundColor","background","buttonRow","button","marginLeft","sm","useStyles","makeStyles","ScanQRModal","isOpen","onScan","classes","fileUploadModalOpen","setFileUploadModalOpen","error","setError","cameraBlocked","setCameraBlocked","scannerRef","React","openImageDialog","current","useEffect","onFileScannedResolve","successData","console","name","Modal","description","handleClose","open","title","Row","align","className","grow","Paragraph","noMargin","size","IconButton","disableRipple","Hairline","Col","layout","middle","Block","margin","legacyMode","onError","err","data","ref","style","facingMode","Button","minWidth","variant","qrCodeBtn","cursor","ScanQRWrapper","handleScan","qrModalOpen","setQrModalOpen","closeQrModal","Img","alt","role","QRIcon","value","SelectInput","disableError","formControlProps","input","restInput","label","meta","renderValue","rest","showError","submitError","dirtySinceLastSubmit","touched","inputProps","htmlFor","cellWidth","maxWidth","GnoTableHead","changeSort","property","orderAttr","onSort","props","this","columns","order","orderBy","map","column","disablePadding","sortDirection","id","static","active","direction","desc","a","b","orderProp","format","root","borderTopRightRadius","borderTopLeftRadius","boxShadow","selectRoot","lineHeight","xxl","white","paginationRoot","marginBottom","borderBottomRightRadius","borderBottomLeftRadius","loader","backProps","nextProps","GnoTable","newOrderBy","state","defaultOrder","newOrder","setState","fixed","getEmptyStyle","display","alignItems","handleChangePage","e","page","handleChangeRowsPerPage","rowsPerPage","Number","target","defaultOrderBy","find","defaultFixed","defaultRowsPerPage","disableLoadingOnEmptyTable","disablePagination","noBorder","orderByParam","orderParam","displayRows","fixedParam","paginationClasses","columnSort","sortedData","dataArray","cmp","fixedElems","filter","elem","List","stabilizedThis","el","index","sortedElems","sort","concat","stableSort","getSorting","formatTypeSort","slice","isEmpty","Table","TableHead","TableBody","TablePagination","backIconButtonProps","component","count","nextIconButtonProps","onPageChange","onRowsPerPageChange","rowsPerPageOptions","defaultProps","withStyles","useTextFieldLabelStyle","overflow","borderRadius","fontSize","useTextFieldInputStyle","BaseAddressBookInput","addressBookEntries","fieldMutator","setIsValidAddress","setSelectedEntry","setValidationText","validationText","networkId","useSelector","currentChainId","updateAddressInfo","addressEntry","address","validateAddress","fullAddress","addressErrorMessage","mustBeEthereumAddress","parsePrefixedAddress","checkedAddr","checksumAddress","filteredEntries","filterAddressEntries","inputValue","length","onInputChange","_","reason","normalizedValue","trimSpaces","hasFeature","FEATURES","DOMAIN_LOOKUP","isValidEnsName","isValidCryptoDomainName","getAddressFromDomain","_101","message","validatedAddress","chainId","labelStyles","inputStyles","Autocomplete","closeIcon","openOnFocus","filterOptions","freeSolo","options","renderInput","params","autoFocus","fullWidth","InputLabelProps","shrink","required","InputProps","getOptionLabel","renderOption","PrefixedEthHashInfo","hash","showAvatar","flexGrow","AddressBookInput","currentNetworkAddressBook","errorMsg","ContractsAddressBookInput","setFilteredEntries","filterContractAddresses","filterContractAddressBookEntries","filteredADBK","onSetSelectedEntry","selectedEntry","mustBeEthereumContractAddress","contractAddressErrorMessage","SpendingLimitRadioButtons","RadioButtons","theme","colors","primary","StyledSwitch","icon","hexToRgb","primaryLight","SafeRadioButtons","initialValue","groupName","onRadioChange","Switch","control","type","render","checked","ResetTimeLabel","ResetTimeToggle","ResetTimeOptions","RESET_TIME_OPTIONS","RINKEBY_RESET_TIME_OPTIONS","getResetTimeOptions","getChainName","toLowerCase","ResetTime","withResetTime","useField","subscription","resetTimeOptions","switchExplanation","Field","GnoField","AmountInput","TextField","SRCTextField","Amount","tokenAddress","visited","selectedTokenRecord","extendedSafeTokensSelector","token","validate","composeValidators","mustBeFloat","minValue","endAdornment","symbol","amountInput","paddingBottom","hide","visibility","actions","noBorderBottom","borderBottom","annotation","paddingLeft","ownersText","fontColor","container","actionButton","fontWeight","boldFont","marginRight","left","bottom","borderTop","border","modifyBtn","xl","smallFontSize","removeModuleIcon","modalHeading","modalContainer","minHeight","modalManage","modalClose","modalButtonRow","modalButtonRemove","modalName","textOverflow","modalUserName","whiteSpace","modalOwner","modalUser","modalDescription","modalOpen","AddressInfo","logoUri","addessBookName","addressBookEntryName","strong","sameString","ADDRESS_BOOK_DEFAULT_NAME","showCopyBtn","textSize","explorerUrl","getExplorerInfo","customAvatar","ResetTimeInfo","iconSize","iconType","StyledImage","StyledImageName","TokenInfo","amount","useTokenInfo","tokens","safeKnownCoins","sameAddress","Toolbar","_props$component","Component","_props$disableGutters","disableGutters","_props$variant","other","_objectWithoutProperties","_extends","clsx","gutters","position","_defineProperty","spacing","paddingRight","breakpoints","up","regular","mixins","toolbar","dense","_ref","KeyboardArrowRight","_ref2","KeyboardArrowLeft","_ref3","_ref4","TablePaginationActions","_props$onChangePage","onChangePage","_props$onPageChange","useTheme","Math","ceil","defaultLabelDisplayedRows","from","to","defaultRowsPerPageOptions","colSpan","_props$ActionsCompone","ActionsComponent","_props$backIconButton","backIconButtonText","colSpanProp","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","_props$nextIconButton","nextIconButtonText","onChangeRowsPerPageProp","onChangeRowsPerPage","onRowsPerPageChangeProp","_props$rowsPerPageOpt","_props$SelectProps","SelectProps","selectId","useId","labelId","MenuItemComponent","native","MenuItem","spacer","Typography","caption","Select","select","selectIcon","InputBase","rowsPerPageOption","menuItem","key","min","palette","typography","pxToRem","flex","flexShrink","textAlign","textAlignLast","ListItemIcon","context","ListContext","alignItemsFlexStart","action","marginTop","useSelectedTokenStyles","tokenData","tokenImage","useSelectStyles","selectMenu","SelectedToken","ListItemText","secondary","formatAmount","balance","tokenBalance","toString","TokenSelectField","isValid","tokenClasses","SelectField","displayEmpty","RemoveLimitModal","spendingLimit","tokenInfo","spent","setTxData","dispatch","useDispatch","beneficiary","getDeleteAllowanceTxData","resetTimeLabel","resetTime","resetTimeMin","SPENDING_LIMIT_MODULE_ADDRESS","delayExecution","createTransaction","valueInWei","txNonce","ethParameters","notifiedTransaction","TX_NOTIFICATION_TYPES","REMOVE_SPENDING_LIMIT_TX","ModalHeader","Body","fromTokenUnit","decimals","SPENDING_LIMIT_TABLE_BENEFICIARY_ID","SPENDING_LIMIT_TABLE_SPENT_ID","SPENDING_LIMIT_TABLE_RESET_TIME_ID","getWindowDimensions","window","innerWidth","innerHeight","SpentVsAmount","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","showIcon","useMemo","spentInfo","formattedSpent","useFormattedAmounts","LimitsTable","granted","grantedSelector","beneficiaryColumn","custom","spentColumn","resetColumn","actionsColumn","generateColumns","autoColumns","selectedRow","setSelectedRow","TableContainer","row","cn","tabIndex","columnId","rowElement","relativeTime","ButtonHelper","tooltip","BeneficiaryInput","BeneficiaryScan","Beneficiary","initialValues","useFormState","mutators","useForm","addressErrorMsg","setAddressErrorMsg","pristine","setPristine","setBeneficiary","addressBook","onKeyDown","scannedAddress","startsWith","replace","scannedName","TokenInput","Token","FormContainer","formMutators","args","utils","changeValue","canReview","invalid","submitting","dirtyFieldsSinceLastSubmit","values","Create","onCancel","onReview","subTitle","GnoForm","calculateSpendingLimitsTxData","safeVersion","connectedWalletAddress","spendingLimits","existentSpendingLimit","txToken","modules","isSpendingLimitEnabled","isModuleEnabled","transactions","enableSpendingLimitModuleMultiSendTx","enableSpendingLimitTx","push","some","delegate","addSpendingLimitBeneficiaryMultiSendTx","getResetSpendingLimitTx","startTime","currentMinutes","spendingLimitArgs","spendingLimitInWei","toTokenUnit","resetBaseMin","spendingLimitTxData","setSpendingLimitTx","encodedTxForMultisend","setSpendingLimitMultiSendTx","spendingLimitMultiSendTx","ReviewSpendingLimits","currentSafe","currentVersion","userAccountSelector","currentDelegate","useExistentSpendingLimit","estimateGasArgs","setEstimateGasArgs","safeModules","pair","calculateSpendingLimit","handleSubmit","ethGasPriceInGWei","advancedOptionsTxParameters","makeToken","step","CREATE","previousResetTime","center","REVIEW","newLimitModalReducer","newState","NewLimitModal","initialStep","useReducer","create","useCallback","review","useNewLimitModal","handleReview","StepWrapper","Step","StepsLine","NewLimitSteps","AssetAmount","Time","InfoText","Text","SpendingLimit","allowances","currentSafeSpendingLimits","spendingLimitData","lastResetMin","showNewSpendingLimitModal","setShowNewSpendingLimitModal","withoutMargin","end"],"mappings":"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","file":"static/js/41.e954ec55.chunk.js","sourcesContent":["import { ReactNode, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\nimport { extractSafeAddress } from 'src/routes/routes'\nimport { ReviewInfoText } from 'src/components/ReviewInfoText'\nimport ExecuteCheckbox from 'src/components/ExecuteCheckbox'\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { ButtonStatus, Modal } from 'src/components/Modal'\nimport { lg, md } from 'src/theme/variables'\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\nimport { isSpendingLimit } from 'src/routes/safe/components/Transactions/helpers/utils'\nimport useCanTxExecute from 'src/logic/hooks/useCanTxExecute'\n\ntype Props = {\n  children: ReactNode\n  operation?: number\n  txData: string\n  txValue?: string\n  txTo?: string\n  txType?: string\n  onSubmit: (txParams: TxParameters, delayExecution?: boolean) => void\n  onBack?: (...rest: any) => void\n  submitText?: string\n  isConfirmDisabled?: boolean\n}\n\nconst Container = styled.div`\n  padding: 0 ${lg} ${md};\n`\n\nexport const TxModalWrapper = ({\n  children,\n  operation,\n  txData,\n  txValue = '0',\n  txTo,\n  txType,\n  onSubmit,\n  onBack,\n  submitText,\n  isConfirmDisabled,\n}: Props): React.ReactElement => {\n  const [manualSafeTxGas, setManualSafeTxGas] = useState('0')\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\n  const [manualMaxPrioFee, setManualMaxPrioFee] = useState<string | undefined>()\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\n  const [manualSafeNonce, setManualSafeNonce] = useState<number | undefined>()\n  const [executionApproved, setExecutionApproved] = useState<boolean>(true)\n  const safeAddress = extractSafeAddress()\n  const isSpendingLimitTx = isSpendingLimit(txType)\n\n  const {\n    gasCostFormatted,\n    gasPriceFormatted,\n    gasMaxPrioFeeFormatted,\n    gasLimit,\n    gasEstimation,\n    txEstimationExecutionStatus,\n    isCreation,\n    isOffChainSignature,\n  } = useEstimateTransactionGas({\n    txData,\n    txRecipient: txTo || safeAddress,\n    txType,\n    txAmount: txValue,\n    safeTxGas: manualSafeTxGas,\n    manualGasPrice,\n    manualMaxPrioFee,\n    manualGasLimit,\n    manualSafeNonce,\n    operation,\n  })\n\n  const [submitStatus, setSubmitStatus] = useEstimationStatus(txEstimationExecutionStatus)\n\n  const canTxExecute = useCanTxExecute(undefined, manualSafeNonce)\n  const doExecute = executionApproved && canTxExecute\n\n  const onClose = (txParameters: TxParameters) => {\n    const oldGasPrice = gasPriceFormatted\n    const newGasPrice = txParameters.ethGasPrice\n    const oldGasLimit = gasLimit\n    const newGasLimit = txParameters.ethGasLimit\n    const oldMaxPrioFee = gasMaxPrioFeeFormatted\n    const newMaxPrioFee = txParameters.ethMaxPrioFee\n    const oldSafeTxGas = gasEstimation\n    const newSafeTxGas = txParameters.safeTxGas\n    const newSafeNonce = txParameters.safeNonce\n\n    if (oldGasPrice !== newGasPrice) {\n      setManualGasPrice(newGasPrice)\n    }\n\n    if (oldMaxPrioFee !== newMaxPrioFee) {\n      setManualMaxPrioFee(newMaxPrioFee)\n    }\n\n    if (oldGasLimit !== newGasLimit) {\n      setManualGasLimit(newGasLimit)\n    }\n\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\n      setManualSafeTxGas(newSafeTxGas)\n    }\n\n    if (newSafeNonce) {\n      const newSafeNonceNumber = parseInt(newSafeNonce, 10)\n      setManualSafeNonce(newSafeNonceNumber)\n    }\n  }\n\n  const onSubmitClick = (txParameters: TxParameters) => {\n    setSubmitStatus(ButtonStatus.LOADING)\n\n    if (!safeAddress) {\n      setSubmitStatus(ButtonStatus.READY)\n      logError(Errors._802)\n      return\n    }\n\n    onSubmit(txParameters, !doExecute)\n  }\n\n  return (\n    <EditableTxParameters\n      isOffChainSignature={isOffChainSignature}\n      isExecution={doExecute}\n      ethGasLimit={gasLimit}\n      ethGasPrice={gasPriceFormatted}\n      ethMaxPrioFee={gasMaxPrioFeeFormatted}\n      safeTxGas={gasEstimation}\n      closeEditModalCallback={onClose}\n    >\n      {(txParameters: TxParameters, toggleEditMode: () => unknown) => (\n        <>\n          {children}\n\n          <Container>\n            {!isSpendingLimitTx && canTxExecute && <ExecuteCheckbox onChange={setExecutionApproved} />}\n\n            {/* Tx Parameters */}\n            {/* FIXME TxParameters should be updated to be used with spending limits */}\n            {!isSpendingLimitTx && (\n              <TxParametersDetail\n                txParameters={txParameters}\n                onEdit={toggleEditMode}\n                isTransactionCreation={isCreation}\n                isTransactionExecution={doExecute}\n                isOffChainSignature={isOffChainSignature}\n              />\n            )}\n          </Container>\n\n          {!isSpendingLimitTx && (\n            <ReviewInfoText\n              gasCostFormatted={gasCostFormatted}\n              isCreation={isCreation}\n              isExecution={doExecute}\n              safeNonce={txParameters.safeNonce}\n              txEstimationExecutionStatus={txEstimationExecutionStatus}\n            />\n          )}\n\n          {/* Footer */}\n          <Modal.Footer withoutBorder={!isSpendingLimitTx && submitStatus !== ButtonStatus.LOADING}>\n            <Modal.Footer.Buttons\n              cancelButtonProps={{ onClick: onBack || onClose, text: 'Back' }}\n              confirmButtonProps={{\n                onClick: () => onSubmitClick(txParameters),\n                status: submitStatus,\n                disabled: isConfirmDisabled,\n                text: txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : submitText,\n                testId: 'submit-tx-btn',\n              }}\n            />\n          </Modal.Footer>\n        </>\n      )}\n    </EditableTxParameters>\n  )\n}\n","import { SyntheticEvent } from 'react'\n\nimport TokenPlaceholder from 'src/routes/safe/components/Balances/assets/token_placeholder.svg'\n\nexport const setImageToPlaceholder = (event: SyntheticEvent<HTMLImageElement, Event>): void => {\n  const img = event.currentTarget\n  if (!/token_placeholder/.test(img.src)) {\n    img.src = TokenPlaceholder\n  }\n}\n","export default __webpack_public_path__ + \"static/media/token_placeholder.c1abe466.svg\";","export default __webpack_public_path__ + \"static/media/qrcode.fec1b6d8.svg\";","import { background, lg, secondaryText, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: lg,\n    justifyContent: 'space-between',\n    maxHeight: '75px',\n    boxSizing: 'border-box',\n  },\n  loaderContainer: {\n    width: '100%',\n    height: '100%',\n  },\n  close: {\n    height: '25px',\n    width: '25px',\n    color: secondaryText,\n  },\n  detailsContainer: {\n    backgroundColor: background,\n    maxHeight: '450px',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n  button: {\n    '&:last-child': {\n      marginLeft: sm,\n    },\n  },\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport * as React from 'react'\nimport QrReader from 'react-qr-reader'\n\nimport { styles } from './style'\n\nimport Modal from 'src/components/Modal'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { useEffect, useState } from 'react'\n\nconst useStyles = makeStyles(styles)\n\ntype Props = {\n  isOpen: boolean\n  onClose: () => void\n  onScan: (value: string) => void\n}\n\nexport const ScanQRModal = ({ isOpen, onClose, onScan }: Props): React.ReactElement => {\n  const classes = useStyles()\n  const [fileUploadModalOpen, setFileUploadModalOpen] = useState<boolean>(false)\n  const [error, setError] = useState<string | null>(null)\n  const [cameraBlocked, setCameraBlocked] = useState<boolean>(false)\n  const scannerRef: any = React.createRef()\n  const openImageDialog = React.useCallback(() => {\n    scannerRef.current.openImageDialog()\n  }, [scannerRef])\n\n  useEffect(() => {\n    if (!fileUploadModalOpen && cameraBlocked && !error) {\n      setFileUploadModalOpen(true)\n      openImageDialog()\n    }\n  }, [cameraBlocked, openImageDialog, fileUploadModalOpen, setFileUploadModalOpen, error])\n\n  const onFileScannedResolve = (error: Error | null, successData: string | null) => {\n    if (error) {\n      console.error('QR code error', error)\n\n      if (error.name === 'NotAllowedError' || error.name === 'PermissionDismissedError') {\n        setCameraBlocked(true)\n        setFileUploadModalOpen(false)\n      } else {\n        setError('The QR could not be read')\n      }\n      return\n    }\n\n    if (successData) {\n      onScan(successData)\n    } else if (cameraBlocked) {\n      setError('The QR could not be read')\n    }\n  }\n\n  return (\n    <Modal description=\"Receive Tokens Form\" handleClose={onClose} open={isOpen} title=\"Receive Tokens\">\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph noMargin size=\"xl\">\n          Scan QR\n        </Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.close} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Col className={classes.detailsContainer} layout=\"column\" middle=\"xs\">\n        {error && (\n          <Block padding=\"md\" margin=\"md\">\n            {error}\n          </Block>\n        )}\n        <QrReader\n          legacyMode={cameraBlocked}\n          onError={(err: Error) => onFileScannedResolve(err, null)}\n          onScan={(data: string) => onFileScannedResolve(null, data)}\n          ref={scannerRef}\n          style={{ width: '400px', height: '400px' }}\n          facingMode=\"user\"\n        />\n      </Col>\n      <Hairline />\n      <Row align=\"center\" className={classes.buttonRow}>\n        <Button className={classes.button} color=\"secondary\" minWidth={154} onClick={onClose}>\n          Close\n        </Button>\n        <Button\n          className={classes.button}\n          color=\"primary\"\n          minWidth={154}\n          onClick={() => {\n            setCameraBlocked(true)\n            setError(null)\n            setFileUploadModalOpen(false)\n          }}\n          variant=\"contained\"\n        >\n          Upload an image\n        </Button>\n      </Row>\n    </Modal>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport { ReactElement, useState } from 'react'\n\nimport QRIcon from 'src/assets/icons/qrcode.svg'\nimport { ScanQRModal } from 'src/components/ScanQRModal'\nimport Img from 'src/components/layout/Img'\n\nconst useStyles = makeStyles({\n  qrCodeBtn: {\n    cursor: 'pointer',\n  },\n})\n\ntype Props = {\n  handleScan: (dataResult: string, closeQrModal: () => void) => void\n  testId?: string\n}\n\nexport const ScanQRWrapper = ({ handleScan, testId }: Props): ReactElement => {\n  const classes = useStyles()\n  const [qrModalOpen, setQrModalOpen] = useState(false)\n\n  const openQrModal = () => {\n    setQrModalOpen(true)\n  }\n\n  const closeQrModal = () => {\n    setQrModalOpen(false)\n  }\n\n  const onScanFinished = (value: string) => {\n    handleScan(value, closeQrModal)\n  }\n\n  return (\n    <>\n      <Img\n        alt=\"Scan QR\"\n        className={classes.qrCodeBtn}\n        height={20}\n        onClick={() => openQrModal()}\n        role=\"button\"\n        src={QRIcon}\n        testId={testId || 'qr-icon'}\n      />\n      {qrModalOpen && <ScanQRModal isOpen={qrModalOpen} onClose={closeQrModal} onScan={onScanFinished} />}\n    </>\n  )\n}\n","import FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\n\nconst style = {\n  minWidth: '100%',\n}\n\nconst SelectInput = ({\n  classes,\n  disableError,\n  formControlProps,\n  input: { name, onChange, value, ...restInput },\n  label,\n  meta,\n  renderValue,\n  ...rest\n}) => {\n  const showError = ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) && meta.touched && !disableError\n  const inputProps = {\n    ...restInput,\n    name,\n  }\n\n  return (\n    <FormControl {...formControlProps} error={showError} style={style}>\n      <InputLabel htmlFor={name}>{label}</InputLabel>\n      <Select\n        classes={classes}\n        inputProps={inputProps}\n        onChange={onChange}\n        renderValue={renderValue}\n        value={value}\n        {...rest}\n      />\n      {showError && <FormHelperText>{meta.error || meta.submitError}</FormHelperText>}\n    </FormControl>\n  )\n}\n\nexport default SelectInput\n","import TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport * as React from 'react'\n\ninterface CellWidth {\n  maxWidth: string\n}\n\nexport const cellWidth = (width?: string | number): CellWidth | undefined => {\n  if (!width) {\n    return undefined\n  }\n\n  return {\n    maxWidth: `${width}px`,\n  }\n}\n\nclass GnoTableHead extends React.PureComponent<any> {\n  changeSort =\n    (property: string, orderAttr: string): (() => void) =>\n    () => {\n      const { onSort } = this.props\n\n      onSort(property, orderAttr)\n    }\n\n  render(): React.ReactElement {\n    const { columns, order, orderBy } = this.props\n\n    return (\n      <TableHead>\n        <TableRow>\n          {columns.map((column) => (\n            <TableCell\n              align={column.align}\n              key={column.id}\n              padding={column.disablePadding ? 'none' : 'normal'}\n              sortDirection={orderBy === column.id ? order : false}\n            >\n              {column.static ? (\n                <div style={column.style}>{column.label}</div>\n              ) : (\n                <TableSortLabel\n                  active={orderBy === column.id}\n                  direction={order}\n                  onClick={this.changeSort(column.id, column.order)}\n                  style={column.style}\n                >\n                  {column.label}\n                </TableSortLabel>\n              )}\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    )\n  }\n}\n\nexport default GnoTableHead\n","import { List } from 'immutable'\n\nexport const FIXED = 'fixed'\n\nexport const buildOrderFieldFrom = (attr: string): string => `${attr}Order`\n\nconst desc = (\n  a: string,\n  b: string,\n  orderBy: string,\n  orderProp: boolean,\n  format: (value: string | number) => string | number,\n): number => {\n  const order = orderProp ? buildOrderFieldFrom(orderBy) : orderBy\n\n  if (format(b[order]) < format(a[order])) {\n    return -1\n  }\n  if (format(b[order]) > format(a[order])) {\n    return 1\n  }\n\n  return 0\n}\n\n// eslint-disable-next-line\nexport const stableSort = (dataArray, cmp, fixed) => {\n  const fixedElems = fixed ? dataArray.filter((elem) => elem.fixed) : List([])\n  const data = fixed ? dataArray.filter((elem) => !elem[FIXED]) : dataArray\n  let stabilizedThis = data.map((el, index) => [el, index])\n\n  stabilizedThis = stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0])\n\n    if (order !== 0) {\n      return order\n    }\n\n    return a[1] - b[1]\n  })\n\n  const sortedElems = stabilizedThis.map((el) => el[0])\n\n  return fixedElems.concat(sortedElems)\n}\n\nexport const getSorting = (\n  order: 'desc' | 'asc',\n  orderBy: string,\n  orderProp: boolean,\n  format: (value: string | number) => string | number = (value) => value,\n): ((a: string, b: string) => number) =>\n  order === 'desc'\n    ? (a, b) => desc(a, b, orderBy, orderProp, format)\n    : (a, b) => -desc(a, b, orderBy, orderProp, format)\n","import { Loader } from '@gnosis.pm/safe-react-components'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport { withStyles } from '@material-ui/core/styles'\nimport * as React from 'react'\n\nimport TableHead from 'src/components/Table/TableHead'\nimport { getSorting, stableSort } from 'src/components/Table/sorting'\nimport Row from 'src/components/layout/Row'\nimport { sm, xxl } from 'src/theme/variables'\n\nconst styles = {\n  root: {\n    backgroundColor: 'white',\n    borderTopRightRadius: sm,\n    borderTopLeftRadius: sm,\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n  },\n  selectRoot: {\n    lineHeight: xxl,\n    backgroundColor: 'white',\n  },\n  white: {\n    backgroundColor: 'white',\n  },\n  paginationRoot: {\n    backgroundColor: 'white',\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n    marginBottom: '90px',\n    borderBottomRightRadius: sm,\n    borderBottomLeftRadius: sm,\n  },\n  loader: {\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n  },\n}\n\nconst FIXED_EMPTY_HEIGHT = 255\n\nconst backProps = {\n  'aria-label': 'Previous Page',\n}\n\nconst nextProps = {\n  'aria-label': 'Next Page',\n}\n\nclass GnoTable extends React.Component<any, any> {\n  static defaultProps = {\n    defaultOrder: 'asc',\n    disablePagination: false,\n    defaultRowsPerPage: 5,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      page: 0,\n      order: undefined,\n      orderBy: undefined,\n      fixed: undefined,\n      orderProp: false,\n      rowsPerPage: undefined,\n    }\n  }\n\n  componentDidMount() {\n    const { columns, defaultOrderBy } = this.props\n\n    if (defaultOrderBy && columns) {\n      const defaultOrderCol = columns.find(({ id }) => id === defaultOrderBy)\n\n      if (defaultOrderCol.order) {\n        this.setState({\n          orderProp: true,\n        })\n      }\n    }\n  }\n\n  onSort = (newOrderBy, orderProp) => {\n    const { order, orderBy } = this.state\n    const { defaultOrder } = this.props\n    let newOrder = 'desc'\n\n    // if table was previously sorted by the user\n    if (order && orderBy === newOrderBy && order === 'desc') {\n      newOrder = 'asc'\n    } else if (!order && defaultOrder === 'desc') {\n      // if it was not sorted and defaultOrder is used\n      newOrder = 'asc'\n    }\n\n    this.setState(() => ({\n      order: newOrder,\n      orderBy: newOrderBy,\n      orderProp,\n      fixed: false,\n    }))\n  }\n\n  getEmptyStyle = () => ({\n    height: `calc(100vh - ${FIXED_EMPTY_HEIGHT}px)`,\n    borderTopRightRadius: sm,\n    borderTopLeftRadius: sm,\n    backgroundColor: 'white',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  })\n\n  handleChangePage = (e, page) => {\n    this.setState({ page })\n  }\n\n  handleChangeRowsPerPage = (e) => {\n    const rowsPerPage = Number(e.target.value)\n    this.setState({ rowsPerPage })\n  }\n\n  render() {\n    const {\n      children,\n      classes,\n      columns,\n      data,\n      defaultFixed,\n      defaultOrder,\n      defaultOrderBy,\n      defaultRowsPerPage,\n      disableLoadingOnEmptyTable,\n      disablePagination,\n      label,\n      noBorder,\n      size,\n    }: any = this.props\n    const { fixed, order, orderBy, orderProp, page, rowsPerPage } = this.state\n    const orderByParam = orderBy || defaultOrderBy\n    const orderParam = order || defaultOrder\n    const displayRows = rowsPerPage || defaultRowsPerPage\n    const fixedParam = typeof fixed !== 'undefined' ? fixed : !!defaultFixed\n    const paginationClasses = {\n      selectRoot: classes.selectRoot,\n      root: !noBorder && classes.paginationRoot,\n      input: classes.white,\n    }\n    const columnSort = columns.find((column) => column.id === orderByParam)\n    let sortedData = stableSort(\n      data,\n      getSorting(orderParam, orderByParam, orderProp, columnSort?.formatTypeSort),\n      fixedParam,\n    )\n\n    if (!disablePagination) {\n      sortedData = sortedData.slice(page * displayRows, page * displayRows + displayRows)\n    }\n\n    const isEmpty = size === 0 && !disableLoadingOnEmptyTable\n\n    return (\n      <>\n        {!isEmpty && (\n          <Table aria-labelledby={label} className={noBorder ? '' : classes.root}>\n            <TableHead columns={columns} onSort={this.onSort} order={order} orderBy={orderByParam} />\n            <TableBody>{children(sortedData)}</TableBody>\n          </Table>\n        )}\n        {isEmpty && (\n          <Row className={classes.loader} style={this.getEmptyStyle()}>\n            <Loader size=\"sm\" />\n          </Row>\n        )}\n        {!disablePagination && (\n          <TablePagination\n            backIconButtonProps={backProps}\n            classes={paginationClasses}\n            component=\"div\"\n            count={size}\n            nextIconButtonProps={nextProps}\n            onPageChange={this.handleChangePage}\n            onRowsPerPageChange={this.handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={displayRows}\n            rowsPerPageOptions={[5, 10, 25, 50, 100]}\n          />\n        )}\n      </>\n    )\n  }\n}\n\nexport default withStyles(styles as any)(GnoTable)\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nexport const useTextFieldLabelStyle = makeStyles(\n  createStyles({\n    root: {\n      overflow: 'hidden',\n      borderRadius: 4,\n      fontSize: '15px',\n      width: '500px',\n    },\n  }),\n)\n\nexport const useTextFieldInputStyle = makeStyles(\n  createStyles({\n    root: {\n      fontSize: '14px',\n      width: '420px',\n    },\n  }),\n)\n","import MuiTextField from '@material-ui/core/TextField'\nimport Autocomplete, { AutocompleteProps } from '@material-ui/lab/Autocomplete'\nimport { Dispatch, ReactElement, SetStateAction, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { mustBeEthereumAddress, mustBeEthereumContractAddress } from 'src/components/forms/validator'\nimport { AddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { currentNetworkAddressBook } from 'src/logic/addressBook/store/selectors'\nimport { filterContractAddressBookEntries, filterAddressEntries } from 'src/logic/addressBook/utils'\nimport { isValidEnsName, isValidCryptoDomainName } from 'src/logic/wallets/ethAddresses'\nimport { getAddressFromDomain } from 'src/logic/wallets/getWeb3'\nimport {\n  useTextFieldInputStyle,\n  useTextFieldLabelStyle,\n} from 'src/routes/safe/components/Balances/SendModal/screens/AddressBookInput/style'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { trimSpaces } from 'src/utils/strings'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { checksumAddress } from 'src/utils/checksumAddress'\nimport { currentChainId } from 'src/logic/config/store/selectors'\nimport { FEATURES } from '@gnosis.pm/safe-react-gateway-sdk'\nimport { parsePrefixedAddress } from 'src/utils/prefixedAddress'\nimport { hasFeature } from 'src/logic/safe/utils/safeVersion'\n\nexport interface AddressBookProps {\n  fieldMutator: (address: string) => void\n  label?: string\n  pristine?: boolean\n  recipientAddress?: string\n  errorMsg?: string\n  setIsValidAddress: (valid: boolean) => void\n  setSelectedEntry: Dispatch<SetStateAction<{ address: string; name: string }> | null>\n}\n\nexport interface BaseAddressBookInputProps extends AddressBookProps {\n  addressBookEntries: AddressBookEntry[]\n  setSelectedEntry: (args: { address: string; name: string } | null) => void\n  setValidationText: Dispatch<SetStateAction<string | undefined>>\n  validationText: string | undefined\n}\n\nconst BaseAddressBookInput = ({\n  addressBookEntries,\n  fieldMutator,\n  label = 'Recipient',\n  setIsValidAddress,\n  setSelectedEntry,\n  setValidationText,\n  validationText,\n}: BaseAddressBookInputProps): ReactElement => {\n  const networkId = useSelector(currentChainId)\n\n  const updateAddressInfo = (addressEntry: AddressBookEntry): void => {\n    setSelectedEntry(addressEntry)\n    fieldMutator(addressEntry.address)\n  }\n\n  const validateAddress = (fullAddress: string): AddressBookEntry | string | undefined => {\n    const addressErrorMessage = mustBeEthereumAddress(fullAddress)\n    setIsValidAddress(!addressErrorMessage)\n\n    if (addressErrorMessage) {\n      setValidationText(addressErrorMessage)\n      return\n    }\n\n    // Automatically checksum valid addresses\n    const { address } = parsePrefixedAddress(fullAddress)\n    const checkedAddr = checksumAddress(address) || address\n    const filteredEntries = filterAddressEntries(addressBookEntries, { inputValue: checkedAddr })\n    return filteredEntries.length === 1 ? filteredEntries[0] : checkedAddr\n  }\n\n  const onChange: AutocompleteProps<AddressBookEntry, false, false, true>['onChange'] = (_, value, reason) => {\n    switch (reason) {\n      case 'select-option': {\n        const { address, name, chainId } = value as AddressBookEntry\n        updateAddressInfo({ address, name, chainId })\n        break\n      }\n    }\n  }\n\n  const onInputChange: AutocompleteProps<AddressBookEntry, false, false, true>['onInputChange'] = async (\n    _,\n    value,\n    reason,\n  ) => {\n    switch (reason) {\n      case 'input': {\n        const normalizedValue = trimSpaces(value)\n\n        if (!normalizedValue) {\n          break\n        }\n\n        // ENS-enabled resolve/validation\n        if (\n          hasFeature(FEATURES.DOMAIN_LOOKUP) &&\n          (isValidEnsName(normalizedValue) || isValidCryptoDomainName(normalizedValue))\n        ) {\n          let address = ''\n          try {\n            address = await getAddressFromDomain(normalizedValue)\n          } catch (err) {\n            logError(Errors._101, err.message)\n          }\n\n          const validatedAddress = validateAddress(address)\n\n          if (!validatedAddress) {\n            fieldMutator('')\n            break\n          }\n\n          const newEntry =\n            typeof validatedAddress === 'string'\n              ? {\n                  address,\n                  name: normalizedValue,\n                  chainId: networkId,\n                }\n              : validatedAddress\n\n          updateAddressInfo(newEntry)\n          break\n        }\n\n        // ETH address validation\n        const validatedAddress = validateAddress(normalizedValue)\n\n        if (!validatedAddress) {\n          fieldMutator('')\n          break\n        }\n\n        const newEntry =\n          typeof validatedAddress === 'string'\n            ? {\n                address: validatedAddress,\n                name: '',\n                chainId: networkId,\n              }\n            : validatedAddress\n\n        updateAddressInfo(newEntry)\n\n        break\n      }\n    }\n  }\n\n  const labelStyles = useTextFieldLabelStyle()\n  const inputStyles = useTextFieldInputStyle()\n\n  return (\n    <Autocomplete<AddressBookEntry, false, false, true>\n      closeIcon={null}\n      openOnFocus={false}\n      filterOptions={filterAddressEntries}\n      freeSolo\n      onChange={onChange}\n      onInputChange={onInputChange}\n      options={addressBookEntries}\n      id=\"address-book-input\"\n      renderInput={(params) => (\n        <MuiTextField\n          {...params}\n          autoFocus={true}\n          error={!!validationText}\n          fullWidth\n          variant=\"filled\"\n          label={validationText ? validationText : label}\n          InputLabelProps={{ shrink: true, required: true, classes: labelStyles }}\n          InputProps={{ ...params.InputProps, classes: inputStyles }}\n          inputProps={{ ...params.inputProps, 'data-testid': 'address-book-input' }}\n        />\n      )}\n      getOptionLabel={({ address }) => address}\n      renderOption={({ address, name }) => <PrefixedEthHashInfo hash={address} name={name} showAvatar />}\n      role=\"listbox\"\n      style={{ display: 'flex', flexGrow: 1 }}\n    />\n  )\n}\n\nexport const AddressBookInput = (props: AddressBookProps): ReactElement => {\n  const addressBookEntries = useSelector(currentNetworkAddressBook)\n  const [validationText, setValidationText] = useState<string>('')\n\n  useEffect(() => {\n    if (props.errorMsg) {\n      setValidationText(props.errorMsg)\n    }\n  }, [props.errorMsg])\n\n  return (\n    <BaseAddressBookInput\n      addressBookEntries={addressBookEntries}\n      setValidationText={setValidationText}\n      validationText={validationText}\n      {...props}\n    />\n  )\n}\n\nexport const ContractsAddressBookInput = ({\n  setIsValidAddress,\n  setSelectedEntry,\n  ...props\n}: AddressBookProps): ReactElement => {\n  const addressBookEntries = useSelector(currentNetworkAddressBook)\n  const [filteredEntries, setFilteredEntries] = useState<AddressBookEntry[]>([])\n  const [validationText, setValidationText] = useState<string>('')\n\n  useEffect(() => {\n    const filterContractAddresses = async (): Promise<void> => {\n      const filteredADBK = await filterContractAddressBookEntries(addressBookEntries)\n      setFilteredEntries(filteredADBK)\n    }\n    filterContractAddresses()\n  }, [addressBookEntries])\n\n  const onSetSelectedEntry = async (selectedEntry) => {\n    if (selectedEntry?.address) {\n      // verify if `address` is a contract\n      const contractAddressErrorMessage = await mustBeEthereumContractAddress(selectedEntry.address)\n      setIsValidAddress(!contractAddressErrorMessage)\n      setValidationText(contractAddressErrorMessage ?? '')\n      setSelectedEntry(selectedEntry)\n    }\n  }\n\n  return (\n    <BaseAddressBookInput\n      addressBookEntries={filteredEntries}\n      setIsValidAddress={setIsValidAddress}\n      setSelectedEntry={onSetSelectedEntry}\n      setValidationText={setValidationText}\n      validationText={validationText}\n      {...props}\n    />\n  )\n}\n","import { RadioButtons, Text } from '@gnosis.pm/safe-react-components'\nimport { FormControlLabel, hexToRgb, Switch as SwitchMui } from '@material-ui/core'\nimport { ReactElement } from 'react'\nimport { useField } from 'react-final-form'\nimport styled from 'styled-components'\n\nimport { getChainName } from 'src/config'\nimport { Field } from 'src/routes/safe/components/Settings/SpendingLimit/FormFields/Amount'\n\n// TODO: propose refactor in safe-react-components based on this requirements\nconst SpendingLimitRadioButtons = styled(RadioButtons)`\n  & .MuiRadio-colorPrimary.Mui-checked {\n    color: ${({ theme }) => theme.colors.primary};\n  }\n`\n\n// TODO: add `name` and `value` to SRC Switch, as they're required for a better RFF integration\nconst StyledSwitch = styled(({ ...rest }) => <SwitchMui {...rest} />)`\n  && {\n    .MuiIconButton-label,\n    .MuiSwitch-colorSecondary {\n      color: ${({ theme }) => theme.colors.icon};\n    }\n\n    .MuiSwitch-colorSecondary.Mui-checked .MuiIconButton-label {\n      color: ${({ theme }) => theme.colors.primary};\n    }\n\n    .MuiSwitch-colorSecondary.Mui-checked:hover {\n      background-color: ${({ theme }) => hexToRgb(`${theme.colors.primary}03`)};\n    }\n\n    .Mui-checked + .MuiSwitch-track {\n      background-color: ${({ theme }) => theme.colors.primaryLight};\n    }\n  }\n`\n\ninterface RadioButtonOption {\n  label: string\n  value: string\n}\n\ninterface RadioButtonProps {\n  options: RadioButtonOption[]\n  initialValue: string\n  groupName: string\n}\n\nconst SafeRadioButtons = ({ options, initialValue, groupName }: RadioButtonProps): ReactElement => (\n  <Field name={groupName} initialValue={initialValue}>\n    {({ input: { name, value, onChange } }) => (\n      <SpendingLimitRadioButtons name={name} value={value || initialValue} onRadioChange={onChange} options={options} />\n    )}\n  </Field>\n)\n\nconst Switch = ({ label, name }: { label: string; name: string }): ReactElement => (\n  <FormControlLabel\n    label={label}\n    control={\n      <Field\n        name={name}\n        type=\"checkbox\"\n        render={({ input: { checked, onChange, name, value } }) => (\n          <StyledSwitch checked={checked} onChange={onChange} name={name} value={value} />\n        )}\n      />\n    }\n  />\n)\n\nconst ResetTimeLabel = styled.div`\n  grid-area: resetTimeLabel;\n`\n\nconst ResetTimeToggle = styled.div`\n  grid-area: resetTimeToggle;\n`\n\nconst ResetTimeOptions = styled.div`\n  grid-area: resetTimeOption;\n`\n\nconst RESET_TIME_OPTIONS = [\n  { label: '1 day', value: '1440' }, // 1 day x 24h x 60min\n  { label: '1 week', value: '10080' }, // 7 days x 24h x 60min\n  { label: '1 month', value: '43200' }, // 30 days x 24h x 60min\n]\n\nconst RINKEBY_RESET_TIME_OPTIONS = [\n  { label: '5 minutes', value: '5' },\n  { label: '30 minutes', value: '30' },\n  { label: '1 hour', value: '60' },\n]\n\nexport const getResetTimeOptions = (): RadioButtonOption[] => {\n  const currentNetwork = getChainName().toLowerCase()\n  return currentNetwork !== 'rinkeby' ? RESET_TIME_OPTIONS : RINKEBY_RESET_TIME_OPTIONS\n}\n\nconst ResetTime = (): ReactElement => {\n  const {\n    input: { value: withResetTime },\n  } = useField('withResetTime', { subscription: { value: true } })\n\n  const resetTimeOptions = getResetTimeOptions()\n\n  const switchExplanation = withResetTime ? 'choose reset time period' : 'one time'\n\n  return (\n    <>\n      <ResetTimeLabel>\n        <Text size=\"xl\">Set a reset time so the allowance automatically refills after the defined time period.</Text>\n      </ResetTimeLabel>\n      <ResetTimeToggle>\n        <Switch label={`Reset time (${switchExplanation})`} name=\"withResetTime\" />\n      </ResetTimeToggle>\n      {withResetTime && (\n        <ResetTimeOptions>\n          <SafeRadioButtons groupName=\"resetTime\" initialValue={resetTimeOptions[0].value} options={resetTimeOptions} />\n        </ResetTimeOptions>\n      )}\n    </>\n  )\n}\n\nexport default ResetTime\n","import { TextField as SRCTextField } from '@gnosis.pm/safe-react-components'\nimport { ReactElement } from 'react'\nimport { useField } from 'react-final-form'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\n\nimport GnoField from 'src/components/forms/Field'\nimport { composeValidators, minValue, mustBeFloat, required } from 'src/components/forms/validator'\nimport { extendedSafeTokensSelector } from 'src/routes/safe/container/selector'\nimport { useStyles } from 'src/routes/safe/components/Settings/SpendingLimit/style'\n\nexport const Field = styled(GnoField)`\n  margin: 8px 0;\n  width: 100%;\n`\n\nconst AmountInput = styled.div`\n  grid-area: amountInput;\n`\n\nconst TextField = styled(SRCTextField)`\n  margin: 0;\n`\n\nconst Amount = (): ReactElement => {\n  const classes = useStyles()\n\n  const {\n    input: { value: tokenAddress },\n  } = useField('token', { subscription: { value: true } })\n  const {\n    meta: { touched, visited },\n  } = useField('amount', { subscription: { touched: true, visited: true } })\n\n  const tokens = useSelector(extendedSafeTokensSelector)\n\n  const selectedTokenRecord = tokens.find((token) => token.address === tokenAddress)\n\n  const validate = (touched || visited) && composeValidators(required, mustBeFloat, minValue(0, false))\n\n  return (\n    <AmountInput>\n      <Field\n        component={TextField}\n        label=\"Amount*\"\n        name=\"amount\"\n        type=\"text\"\n        data-testid=\"amount-input\"\n        endAdornment={selectedTokenRecord?.symbol}\n        className={classes.amountInput}\n        validate={validate}\n      />\n    </AmountInput>\n  )\n}\n\nexport default Amount\n","import { createStyles, makeStyles } from '@material-ui/core'\nimport {\n  background,\n  boldFont,\n  border,\n  error,\n  fontColor,\n  lg,\n  md,\n  secondaryText,\n  sm,\n  smallFontSize,\n  xl,\n} from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    title: {\n      padding: lg,\n      paddingBottom: 0,\n    },\n    hide: {\n      '&:hover': {\n        backgroundColor: '#f7f5f5',\n      },\n      '&:hover $actions': {\n        visibility: 'initial',\n      },\n    },\n    actions: {\n      justifyContent: 'flex-end',\n      visibility: 'hidden',\n    },\n    noBorderBottom: {\n      '& > td': {\n        borderBottom: 'none',\n      },\n    },\n    annotation: {\n      paddingLeft: lg,\n    },\n    ownersText: {\n      color: secondaryText,\n      '& b': {\n        color: fontColor,\n      },\n    },\n    container: {\n      padding: lg,\n    },\n    actionButton: {\n      fontWeight: boldFont,\n      marginRight: sm,\n    },\n    buttonRow: {\n      padding: lg,\n      left: 0,\n      bottom: 0,\n      boxSizing: 'border-box',\n      width: '100%',\n      justifyContent: 'flex-end',\n      borderTop: `2px solid ${border}`,\n    },\n    modifyBtn: {\n      height: xl,\n      fontSize: smallFontSize,\n    },\n    removeModuleIcon: {\n      marginLeft: lg,\n      cursor: 'pointer',\n    },\n    modalHeading: {\n      boxSizing: 'border-box',\n      justifyContent: 'space-between',\n      height: '74px',\n      padding: `${sm} ${lg}`,\n    },\n    modalContainer: {\n      minHeight: '369px',\n    },\n    modalManage: {\n      fontSize: lg,\n    },\n    modalClose: {\n      height: '35px',\n      width: '35px',\n    },\n    modalButtonRow: {\n      height: '84px',\n      justifyContent: 'center',\n    },\n    modalButtonRemove: {\n      color: '#fff',\n      backgroundColor: error,\n      height: '42px',\n    },\n    modalName: {\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n    },\n    modalUserName: {\n      whiteSpace: 'nowrap',\n    },\n    modalOwner: {\n      backgroundColor: background,\n      padding: md,\n      alignItems: 'center',\n    },\n    modalUser: {\n      justifyContent: 'left',\n    },\n    modalDescription: {\n      padding: md,\n    },\n    modalOpen: {\n      paddingLeft: sm,\n      width: 'auto',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n    amountInput: {\n      width: '100% !important',\n    },\n  }),\n)\n","import { Text } from '@gnosis.pm/safe-react-components'\nimport { ReactElement } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { getExplorerInfo } from 'src/config'\nimport { addressBookEntryName } from 'src/logic/addressBook/store/selectors'\nimport { ADDRESS_BOOK_DEFAULT_NAME } from 'src/logic/addressBook/model/addressBook'\nimport { sameString } from 'src/utils/strings'\n\ninterface AddressInfoProps {\n  address: string\n  title?: string\n  name?: string\n  logoUri?: string\n}\n\nconst AddressInfo = ({ address, title, name, logoUri }: AddressInfoProps): ReactElement => {\n  const addessBookName = useSelector((state) => addressBookEntryName(state, { address }))\n\n  return (\n    <>\n      {title && (\n        <Text size=\"xl\" strong>\n          {title}\n        </Text>\n      )}\n      <PrefixedEthHashInfo\n        hash={address}\n        name={sameString(addessBookName, ADDRESS_BOOK_DEFAULT_NAME) ? name : addessBookName}\n        showCopyBtn\n        showAvatar\n        textSize=\"lg\"\n        explorerUrl={getExplorerInfo(address)}\n        customAvatar={logoUri || undefined}\n      />\n    </>\n  )\n}\n\nexport default AddressInfo\n","import { IconText, Text } from '@gnosis.pm/safe-react-components'\nimport { ReactElement } from 'react'\n\nimport Row from 'src/components/layout/Row'\n\ninterface ResetTimeInfoProps {\n  title?: string\n  label?: string\n}\n\nconst ResetTimeInfo = ({ title, label }: ResetTimeInfoProps): ReactElement => (\n  <>\n    <Text size=\"xl\" strong>\n      {title}\n    </Text>\n    {label ? (\n      <Row align=\"center\" margin=\"md\">\n        <IconText iconSize=\"md\" iconType=\"fuelIndicator\" text={label} textSize=\"lg\" />\n      </Row>\n    ) : (\n      <Row align=\"center\" margin=\"md\">\n        <Text size=\"lg\">One-time spending limit</Text>\n      </Row>\n    )}\n  </>\n)\n\nexport default ResetTimeInfo\n","import { Text } from '@gnosis.pm/safe-react-components'\nimport { ReactElement } from 'react'\nimport styled from 'styled-components'\n\nimport { Token } from 'src/logic/tokens/store/model/token'\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\n\nconst StyledImage = styled.img`\n  width: 32px;\n  height: 32px;\n  object-fit: contain;\n  margin: 0 8px 0 0;\n`\nconst StyledImageName = styled.div`\n  display: flex;\n  align-items: center;\n`\n\ninterface TokenInfoProps {\n  amount: string\n  title?: string\n  token: Token\n}\n\nconst TokenInfo = ({ amount, title, token }: TokenInfoProps): ReactElement => (\n  <>\n    <Text size=\"xl\" strong>\n      {title}\n    </Text>\n    <StyledImageName>\n      <StyledImage alt={token.name} onError={setImageToPlaceholder} src={token.logoUri || ''} />\n      <Text size=\"lg\">\n        {amount} {token.symbol}\n      </Text>\n    </StyledImageName>\n  </>\n)\n\nexport default TokenInfo\n","import { useSelector } from 'react-redux'\n\nimport { Token } from 'src/logic/tokens/store/model/token'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { safeKnownCoins } from 'src/routes/safe/container/selector'\n\nconst useTokenInfo = (address: string): Token | undefined => {\n  const tokens = useSelector(safeKnownCoins)\n\n  if (tokens) {\n    return tokens.find((token) => sameAddress(token.address, address))\n  }\n}\n\nexport default useTokenInfo\n","import Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport { ReactElement } from 'react'\n\nexport { TableBody, TableCell, TableHead, TableRow }\n\nconst buildWidthFrom = (size) => ({\n  minWidth: `${size}px`,\n})\n\nconst overflowStyle: any = {\n  overflowX: 'auto',\n}\n\n// see: https://css-tricks.com/responsive-data-tables/\nconst GnoTable = ({ children, size }): ReactElement => {\n  const style = size ? buildWidthFrom(size) : undefined\n\n  return (\n    <div style={overflowStyle}>\n      <Table style={style}>{children}</Table>\n    </div>\n  )\n}\n\nexport default GnoTable\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: _defineProperty({\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `variant=\"regular\"`. */\n    regular: theme.mixins.toolbar,\n\n    /* Styles applied to the root element if `variant=\"dense\"`. */\n    dense: {\n      minHeight: 48\n    }\n  };\n};\nvar Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'regular' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[variant], className, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes = {\n  /**\n   * Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, disables gutter padding.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['regular', 'dense'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToolbar'\n})(Toolbar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$onChangePage = props.onChangePage,\n      onChangePage = _props$onChangePage === void 0 ? function () {} : _props$onChangePage,\n      _props$onPageChange = props.onPageChange,\n      onPageChange = _props$onPageChange === void 0 ? function () {} : _props$onPageChange,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"onPageChange\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n    onPageChange(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n    onPageChange(event, page + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/unstable_useId';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      overflow: 'auto',\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n    // TODO v5: `.selectRoot` should be merged with `.input`\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {},\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onPageChange = props.onPageChange,\n      onChangeRowsPerPageProp = props.onChangeRowsPerPage,\n      onRowsPerPageChangeProp = props.onRowsPerPageChange,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onPageChange\", \"onChangeRowsPerPage\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var onChangeRowsPerPage = onChangeRowsPerPageProp || onRowsPerPageChangeProp;\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var selectId = useId();\n  var labelId = useId();\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption,\n    id: labelId\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    id: selectId,\n    labelId: labelId\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return /*#__PURE__*/React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n      value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n    }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page: page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    onPageChange: onPageChange,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   * @deprecated Use the onPageChange prop instead.\n   */\n  onChangePage: deprecatedPropType(PropTypes.func, 'Use the `onPageChange` prop instead.'),\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @deprecated Use the onRowsPerPageChange prop instead.\n   */\n  onChangeRowsPerPage: deprecatedPropType(PropTypes.func, 'Use the `onRowsPerPageChange` prop instead.'),\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n\n    if (count === -1) {\n      return null;\n    }\n\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","import { createStyles, makeStyles } from '@material-ui/core'\n\nimport { sm } from 'src/theme/variables'\n\nexport const useSelectedTokenStyles = makeStyles(\n  createStyles({\n    container: {\n      minHeight: '55px',\n      padding: 0,\n      width: '100%',\n    },\n    tokenData: {\n      padding: 0,\n      margin: 0,\n      lineHeight: '14px',\n    },\n    tokenImage: {\n      display: 'block',\n      marginRight: sm,\n      height: 28,\n      width: 'auto',\n    },\n  }),\n)\n\nexport const useSelectStyles = makeStyles(\n  createStyles({\n    selectMenu: {\n      paddingRight: 0,\n    },\n  }),\n)\n","import { Text } from '@gnosis.pm/safe-react-components'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { List } from 'immutable'\nimport { ReactElement } from 'react'\n\nimport Field from 'src/components/forms/Field'\nimport SelectField from 'src/components/forms/SelectField'\nimport { required } from 'src/components/forms/validator'\nimport Img from 'src/components/layout/Img'\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\nimport { Token } from 'src/logic/tokens/store/model/token'\n\nimport { useSelectStyles, useSelectedTokenStyles } from './style'\n\ninterface SelectTokenProps {\n  tokenAddress: string\n  tokens: List<Token>\n}\n\nconst SelectedToken = ({ tokenAddress, tokens }: SelectTokenProps): ReactElement => {\n  const classes = useSelectedTokenStyles()\n  const token = tokens.find(({ address }) => address === tokenAddress)\n\n  return (\n    <MenuItem className={classes.container}>\n      {token ? (\n        <>\n          <ListItemIcon>\n            <Img\n              className={classes.tokenImage}\n              alt={token.name}\n              onError={setImageToPlaceholder}\n              src={token.logoUri || ''}\n            />\n          </ListItemIcon>\n          <ListItemText\n            className={classes.tokenData}\n            primary={token.name}\n            secondary={`${formatAmount(token.balance?.tokenBalance.toString() ?? '0')} ${token.symbol}`}\n          />\n        </>\n      ) : (\n        <Text color=\"placeHolder\" size=\"xl\">\n          Select an asset*\n        </Text>\n      )}\n    </MenuItem>\n  )\n}\n\ninterface TokenSelectFieldProps {\n  initialValue?: string\n  isValid?: boolean\n  tokens: List<Token>\n}\n\nconst TokenSelectField = ({ initialValue, isValid = true, tokens }: TokenSelectFieldProps): ReactElement => {\n  const classes = useSelectStyles()\n  const tokenClasses = useSelectedTokenStyles()\n\n  return (\n    <Field\n      classes={{ selectMenu: classes.selectMenu }}\n      className={isValid ? 'isValid' : 'isInvalid'}\n      component={(props) => (\n        <SelectField\n          {...props}\n          inputProps={{\n            'data-testid': 'token-input',\n          }}\n        />\n      )}\n      displayEmpty\n      initialValue={initialValue}\n      name=\"token\"\n      renderValue={(tokenAddress) => <SelectedToken tokenAddress={tokenAddress} tokens={tokens} />}\n      validate={required}\n    >\n      {tokens.map((token) => (\n        <MenuItem key={token.address} value={token.address}>\n          <ListItemIcon>\n            <Img\n              className={tokenClasses.tokenImage}\n              alt={token.name}\n              onError={setImageToPlaceholder}\n              src={token.logoUri || ''}\n            />\n          </ListItemIcon>\n          <ListItemText\n            primary={token.name}\n            secondary={`${formatAmount(token.balance?.tokenBalance.toString() ?? '0')} ${token.symbol}`}\n            data-testid={`select-token-${token.name}`}\n          />\n        </MenuItem>\n      ))}\n    </Field>\n  )\n}\n\nexport default TokenSelectField\n","import { ReactElement, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport { Modal } from 'src/components/Modal'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport useTokenInfo from 'src/logic/safe/hooks/useTokenInfo'\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { getDeleteAllowanceTxData } from 'src/logic/safe/utils/spendingLimits'\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { SPENDING_LIMIT_MODULE_ADDRESS } from 'src/utils/constants'\nimport { getResetTimeOptions } from './FormFields/ResetTime'\nimport { AddressInfo, ResetTimeInfo, TokenInfo } from './InfoDisplay'\nimport { SpendingLimitTable } from './LimitsTable/dataFetcher'\nimport { extractSafeAddress } from 'src/routes/routes'\nimport { TxModalWrapper } from 'src/routes/safe/components/Transactions/helpers/TxModalWrapper'\n\ninterface RemoveSpendingLimitModalProps {\n  onClose: () => void\n  spendingLimit: SpendingLimitTable\n  open: boolean\n}\n\nexport const RemoveLimitModal = ({ onClose, spendingLimit, open }: RemoveSpendingLimitModalProps): ReactElement => {\n  const tokenInfo = useTokenInfo(spendingLimit.spent.tokenAddress)\n  const safeAddress = extractSafeAddress()\n  const [txData, setTxData] = useState('')\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const {\n      beneficiary,\n      spent: { tokenAddress },\n    } = spendingLimit\n    const txData = getDeleteAllowanceTxData({ beneficiary, tokenAddress })\n    setTxData(txData)\n  }, [spendingLimit])\n\n  const removeSelectedSpendingLimit = (txParameters: TxParameters, delayExecution: boolean) => {\n    try {\n      dispatch(\n        createTransaction({\n          safeAddress,\n          to: SPENDING_LIMIT_MODULE_ADDRESS,\n          valueInWei: '0',\n          txData,\n          txNonce: txParameters.safeNonce,\n          safeTxGas: txParameters.safeTxGas,\n          ethParameters: txParameters,\n          notifiedTransaction: TX_NOTIFICATION_TYPES.REMOVE_SPENDING_LIMIT_TX,\n          delayExecution,\n        }),\n      )\n    } catch (e) {\n      console.error(\n        `failed to remove spending limit ${spendingLimit.beneficiary} -> ${spendingLimit.spent.tokenAddress}`,\n        e.message,\n      )\n    }\n  }\n\n  const resetTimeLabel =\n    getResetTimeOptions().find(({ value }) => +value === +spendingLimit.resetTime.resetTimeMin)?.label ?? ''\n\n  return (\n    <Modal\n      handleClose={onClose}\n      open={open}\n      title=\"Remove spending limit\"\n      description=\"Remove the selected spending limit\"\n    >\n      <TxModalWrapper\n        txData={txData}\n        txTo={SPENDING_LIMIT_MODULE_ADDRESS}\n        onSubmit={removeSelectedSpendingLimit}\n        submitText=\"Remove\"\n      >\n        <ModalHeader onClose={onClose} title=\"Remove spending limit\" />\n        <Hairline />\n\n        <Modal.Body>\n          <Col margin=\"lg\">\n            <AddressInfo title=\"Beneficiary\" address={spendingLimit.beneficiary} />\n          </Col>\n          <Col margin=\"lg\">\n            {tokenInfo && (\n              <TokenInfo\n                amount={fromTokenUnit(spendingLimit.spent.amount, tokenInfo.decimals)}\n                title=\"Amount\"\n                token={tokenInfo}\n              />\n            )}\n          </Col>\n          <Col margin=\"lg\">\n            <ResetTimeInfo title=\"Reset Time\" label={resetTimeLabel} />\n          </Col>\n        </Modal.Body>\n      </TxModalWrapper>\n    </Modal>\n  )\n}\n","import { List } from 'immutable'\n\nimport { TableColumn } from 'src/components/Table/types.d'\nimport { SpendingLimitRow } from 'src/logic/safe/utils/spendingLimits'\nimport { relativeTime } from 'src/utils/date'\n\nexport const SPENDING_LIMIT_TABLE_BENEFICIARY_ID = 'beneficiary'\nexport const SPENDING_LIMIT_TABLE_SPENT_ID = 'spent'\nexport const SPENDING_LIMIT_TABLE_RESET_TIME_ID = 'resetTime'\nexport const SPENDING_LIMIT_TABLE_ACTION_ID = 'action'\n\nexport type SpendingLimitTable = {\n  [SPENDING_LIMIT_TABLE_BENEFICIARY_ID]: string\n  [SPENDING_LIMIT_TABLE_SPENT_ID]: {\n    spent: string\n    amount: string\n    tokenAddress: string\n  }\n  [SPENDING_LIMIT_TABLE_RESET_TIME_ID]: {\n    relativeTime: string\n    lastResetMin: string\n    resetTimeMin: string\n  }\n}\n\nexport const getSpendingLimitData = (spendingLimits?: SpendingLimitRow[] | null): SpendingLimitTable[] | undefined =>\n  spendingLimits?.map((spendingLimit) => ({\n    [SPENDING_LIMIT_TABLE_BENEFICIARY_ID]: spendingLimit.delegate,\n    [SPENDING_LIMIT_TABLE_SPENT_ID]: {\n      spent: spendingLimit.spent,\n      amount: spendingLimit.amount,\n      tokenAddress: spendingLimit.token,\n    },\n    [SPENDING_LIMIT_TABLE_RESET_TIME_ID]: {\n      relativeTime: relativeTime(spendingLimit.lastResetMin, spendingLimit.resetTimeMin),\n      lastResetMin: spendingLimit.lastResetMin,\n      resetTimeMin: spendingLimit.resetTimeMin,\n    },\n  }))\n\nexport const generateColumns = (): List<TableColumn> => {\n  const beneficiaryColumn: TableColumn = {\n    align: 'left',\n    custom: false,\n    disablePadding: false,\n    id: SPENDING_LIMIT_TABLE_BENEFICIARY_ID,\n    label: 'Beneficiary',\n    order: false,\n  }\n\n  const spentColumn: TableColumn = {\n    align: 'left',\n    custom: false,\n    disablePadding: false,\n    id: SPENDING_LIMIT_TABLE_SPENT_ID,\n    label: 'Spent',\n    order: false,\n    static: true,\n  }\n\n  const resetColumn: TableColumn = {\n    align: 'left',\n    custom: false,\n    disablePadding: false,\n    id: SPENDING_LIMIT_TABLE_RESET_TIME_ID,\n    label: 'Reset Time',\n    order: false,\n    static: true,\n  }\n\n  const actionsColumn: TableColumn = {\n    custom: true,\n    disablePadding: false,\n    id: SPENDING_LIMIT_TABLE_ACTION_ID,\n    label: '',\n    order: false,\n  }\n\n  return List([beneficiaryColumn, spentColumn, resetColumn, actionsColumn])\n}\n","import { useState, useEffect } from 'react'\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window\n  return {\n    width,\n    height,\n  }\n}\n\nexport const useWindowDimensions = (): { width: number; height: number } => {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions())\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions())\n    }\n\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  return windowDimensions\n}\n","import { Text } from '@gnosis.pm/safe-react-components'\nimport { ReactElement, useMemo } from 'react'\nimport styled from 'styled-components'\n\nimport { Token } from 'src/logic/tokens/store/model/token'\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\nimport useTokenInfo from 'src/logic/safe/hooks/useTokenInfo'\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport { useWindowDimensions } from 'src/logic/hooks/useWindowDimensions'\n\nconst StyledImage = styled.img`\n  width: 32px;\n  height: 32px;\n  object-fit: contain;\n  margin: 0 8px 0 0;\n`\n\nconst StyledImageName = styled.div`\n  display: flex;\n  align-items: center;\n`\n\ntype FormattedAmountsProps = { amount: string; spent: string; tokenInfo?: Token }\n\ntype FormattedAmounts = { amount: string; spent: string }\n\nconst useFormattedAmounts = ({ amount, spent, tokenInfo }: FormattedAmountsProps): FormattedAmounts | undefined => {\n  return useMemo(() => {\n    if (tokenInfo) {\n      const formattedSpent = formatAmount(fromTokenUnit(spent, tokenInfo.decimals)).toString()\n      const formattedAmount = formatAmount(fromTokenUnit(amount, tokenInfo.decimals)).toString()\n      return { amount: formattedAmount, spent: formattedSpent }\n    }\n  }, [amount, spent, tokenInfo])\n}\n\ninterface SpentVsAmountProps {\n  amount: string\n  spent: string\n  tokenAddress: string\n}\n\nexport const SpentVsAmount = ({ amount, spent, tokenAddress }: SpentVsAmountProps): ReactElement | null => {\n  const { width } = useWindowDimensions()\n  const showIcon = useMemo(() => width > 1024, [width])\n\n  const tokenInfo = useTokenInfo(tokenAddress)\n  const spentInfo = useFormattedAmounts({ amount, spent, tokenInfo })\n\n  return spentInfo && tokenInfo ? (\n    <StyledImageName>\n      {showIcon && <StyledImage alt={tokenInfo.name} onError={setImageToPlaceholder} src={tokenInfo.logoUri || ''} />}\n      <Text size=\"lg\">{`${spentInfo.spent} of ${spentInfo.amount} ${tokenInfo.symbol}`}</Text>\n    </StyledImageName>\n  ) : null\n}\n","import { Text, Icon } from '@gnosis.pm/safe-react-components'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport cn from 'classnames'\nimport { ReactElement, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport ButtonHelper from 'src/components/ButtonHelper'\nimport Row from 'src/components/layout/Row'\nimport { TableCell, TableRow } from 'src/components/layout/Table'\nimport Table from 'src/components/Table'\nimport { AddressInfo } from 'src/routes/safe/components/Settings/SpendingLimit/InfoDisplay'\nimport { RemoveLimitModal } from 'src/routes/safe/components/Settings/SpendingLimit/RemoveLimitModal'\nimport { useStyles } from 'src/routes/safe/components/Settings/SpendingLimit/style'\nimport { grantedSelector } from 'src/routes/safe/container/selector'\n\nimport {\n  generateColumns,\n  SPENDING_LIMIT_TABLE_BENEFICIARY_ID,\n  SPENDING_LIMIT_TABLE_RESET_TIME_ID,\n  SPENDING_LIMIT_TABLE_SPENT_ID,\n  SpendingLimitTable,\n} from './dataFetcher'\nimport { SpentVsAmount } from './SpentVsAmount'\n\ninterface SpendingLimitTableProps {\n  data?: SpendingLimitTable[]\n}\n\nexport const LimitsTable = ({ data }: SpendingLimitTableProps): ReactElement => {\n  const classes = useStyles()\n  const granted = useSelector(grantedSelector)\n\n  const columns = generateColumns()\n  const autoColumns = columns.filter(({ custom }) => !custom)\n\n  const [selectedRow, setSelectedRow] = useState<SpendingLimitTable>()\n\n  return (\n    <>\n      <TableContainer style={{ minHeight: '440px' }}>\n        <Table\n          columns={columns}\n          data={data}\n          defaultFixed\n          defaultOrderBy={SPENDING_LIMIT_TABLE_BENEFICIARY_ID}\n          defaultRowsPerPage={5}\n          label=\"Spending limits\"\n          noBorder\n          size={data?.length}\n        >\n          {(sortedData) =>\n            sortedData.map((row, index) => (\n              <TableRow\n                className={cn(classes.hide, index >= 3 && index === sortedData.size - 1 && classes.noBorderBottom)}\n                data-testid=\"spending-limit-table-row\"\n                key={index}\n                tabIndex={-1}\n              >\n                {autoColumns.map((column, index) => {\n                  const columnId = column.id\n                  const rowElement = row[columnId]\n\n                  return (\n                    <TableCell align={column.align} component=\"td\" key={`${columnId}-${index}`}>\n                      {columnId === SPENDING_LIMIT_TABLE_BENEFICIARY_ID && <AddressInfo address={rowElement} />}\n                      {columnId === SPENDING_LIMIT_TABLE_SPENT_ID && <SpentVsAmount {...rowElement} />}\n                      {columnId === SPENDING_LIMIT_TABLE_RESET_TIME_ID && (\n                        <Text size=\"lg\">{rowElement.relativeTime}</Text>\n                      )}\n                    </TableCell>\n                  )\n                })}\n                <TableCell component=\"td\">\n                  <Row align=\"end\" className={classes.actions}>\n                    {granted && (\n                      <ButtonHelper onClick={() => setSelectedRow(row)} data-testid=\"remove-limit-btn\">\n                        <Icon size=\"sm\" type=\"delete\" color=\"error\" tooltip=\"Remove limit\" />\n                      </ButtonHelper>\n                    )}\n                  </Row>\n                </TableCell>\n              </TableRow>\n            ))\n          }\n        </Table>\n      </TableContainer>\n      {selectedRow && (\n        <RemoveLimitModal onClose={() => setSelectedRow(undefined)} spendingLimit={selectedRow} open={true} />\n      )}\n    </>\n  )\n}\n","import { KeyboardEvent, ReactElement, useEffect, useState } from 'react'\nimport { useForm, useFormState } from 'react-final-form'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\n\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { getExplorerInfo } from 'src/config'\nimport { currentNetworkAddressBook } from 'src/logic/addressBook/store/selectors'\nimport { AddressBookInput } from 'src/routes/safe/components/Balances/SendModal/screens/AddressBookInput'\nimport { sameString } from 'src/utils/strings'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { mustBeEthereumAddress } from 'src/components/forms/validator'\n\nconst BeneficiaryInput = styled.div`\n  grid-area: beneficiaryInput;\n`\n\nconst BeneficiaryScan = styled.div`\n  grid-area: beneficiaryScan;\n`\n\nconst Beneficiary = (): ReactElement => {\n  const { initialValues } = useFormState()\n  const { mutators } = useForm()\n  const [addressErrorMsg, setAddressErrorMsg] = useState('')\n\n  const [selectedEntry, setSelectedEntry] = useState<{ address?: string; name?: string } | null>({\n    address: initialValues?.beneficiary || '',\n    name: '',\n  })\n\n  const [pristine, setPristine] = useState<boolean>(!initialValues?.beneficiary)\n\n  useEffect(() => {\n    if (selectedEntry === null) {\n      mutators?.setBeneficiary?.('')\n\n      if (pristine) {\n        setPristine(false)\n      }\n    }\n  }, [mutators, pristine, selectedEntry])\n\n  const addressBook = useSelector(currentNetworkAddressBook)\n\n  const handleScan = (value: string, closeQrModal: () => void) => {\n    const scannedAddress = value.startsWith('ethereum:') ? value.replace('ethereum:', '') : value\n    const scannedName = addressBook.find(({ address }) => {\n      return sameAddress(scannedAddress, address)\n    })?.name\n\n    const addressErrorMessage = mustBeEthereumAddress(scannedAddress)\n    if (!addressErrorMessage) {\n      mutators?.setBeneficiary?.(scannedAddress)\n\n      setSelectedEntry({\n        name: scannedName,\n        address: scannedAddress,\n      })\n      setAddressErrorMsg('')\n    } else setAddressErrorMsg(addressErrorMessage)\n\n    closeQrModal()\n  }\n\n  const handleOnKeyDown = (e: KeyboardEvent<HTMLElement>): void => {\n    if (sameString(e.key, 'Tab')) {\n      return\n    }\n    setSelectedEntry(null)\n  }\n\n  const handleOnClick = () => {\n    setSelectedEntry(null)\n  }\n\n  return selectedEntry?.address ? (\n    <BeneficiaryInput\n      role=\"button\"\n      aria-pressed=\"false\"\n      tabIndex={0}\n      onKeyDown={handleOnKeyDown}\n      onClick={handleOnClick}\n    >\n      <PrefixedEthHashInfo\n        hash={selectedEntry.address}\n        name={selectedEntry.name}\n        showCopyBtn\n        showAvatar\n        textSize=\"lg\"\n        explorerUrl={getExplorerInfo(selectedEntry.address)}\n      />\n    </BeneficiaryInput>\n  ) : (\n    <>\n      <BeneficiaryInput>\n        <AddressBookInput\n          fieldMutator={mutators?.setBeneficiary}\n          pristine={pristine}\n          errorMsg={addressErrorMsg}\n          setSelectedEntry={setSelectedEntry}\n          setIsValidAddress={() => {}}\n          label=\"Beneficiary\"\n        />\n      </BeneficiaryInput>\n      <BeneficiaryScan>\n        <ScanQRWrapper handleScan={handleScan} />\n      </BeneficiaryScan>\n    </>\n  )\n}\n\nexport default Beneficiary\n","import { ReactElement } from 'react'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\n\nimport TokenSelectField from 'src/routes/safe/components/Balances/SendModal/screens/SendFunds/TokenSelectField'\nimport { extendedSafeTokensSelector } from 'src/routes/safe/container/selector'\n\nconst TokenInput = styled.div`\n  grid-area: tokenInput;\n`\n\nconst Token = (): ReactElement => {\n  const tokens = useSelector(extendedSafeTokensSelector)\n\n  return (\n    <TokenInput>\n      <TokenSelectField tokens={tokens} />\n    </TokenInput>\n  )\n}\n\nexport default Token\n","import { FormState, Mutator } from 'final-form'\nimport { ReactElement } from 'react'\nimport styled from 'styled-components'\n\nimport GnoForm from 'src/components/forms/GnoForm'\nimport { Modal } from 'src/components/Modal'\nimport { Amount, Beneficiary, ResetTime, Token } from 'src/routes/safe/components/Settings/SpendingLimit/FormFields'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport Hairline from 'src/components/layout/Hairline'\n\nconst FormContainer = styled.div`\n  padding: 24px 8px 24px 24px;\n  align-items: center;\n  display: grid;\n  grid-template-columns: 4fr 1fr;\n  grid-template-rows: 6fr;\n  gap: 16px 8px;\n  grid-template-areas:\n    'beneficiaryInput beneficiaryScan'\n    'tokenInput .'\n    'amountInput .'\n    'resetTimeLabel resetTimeLabel'\n    'resetTimeToggle resetTimeToggle'\n    'resetTimeOption resetTimeOption';\n`\n\nconst formMutators: Record<string, Mutator<{ beneficiary: { name: string } }>> = {\n  setBeneficiary: (args, state, utils) => {\n    utils.changeValue(state, 'beneficiary', () => args[0])\n  },\n}\n\ninterface NewSpendingLimitProps {\n  initialValues?: Record<string, string>\n  onCancel: () => void\n  onReview: (values) => void\n}\n\nconst canReview = ({\n  invalid,\n  submitting,\n  dirtyFieldsSinceLastSubmit,\n  values: { beneficiary, token, amount },\n}: FormState<{ beneficiary: string; token: string; amount: string }>): boolean =>\n  !(submitting || invalid || !beneficiary || !token || !amount || !dirtyFieldsSinceLastSubmit)\n\nconst Create = ({ initialValues, onCancel, onReview }: NewSpendingLimitProps): ReactElement => {\n  return (\n    <>\n      <ModalHeader onClose={onCancel} title=\"New spending limit\" subTitle=\"1 of 2\" />\n      <Hairline />\n      <GnoForm formMutators={formMutators} onSubmit={onReview} initialValues={initialValues}>\n        {(...args) => {\n          return (\n            <>\n              <FormContainer>\n                <Beneficiary />\n                <Token />\n                <Amount />\n                <ResetTime />\n              </FormContainer>\n\n              <Modal.Footer>\n                <Modal.Footer.Buttons\n                  cancelButtonProps={{ onClick: onCancel }}\n                  confirmButtonProps={{ disabled: !canReview(args[2]), text: 'Review' }}\n                />\n              </Modal.Footer>\n            </>\n          )\n        }}\n      </GnoForm>\n    </>\n  )\n}\n\nexport default Create\n","import { Text } from '@gnosis.pm/safe-react-components'\nimport { ReactElement, useEffect, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Col from 'src/components/layout/Col'\nimport Row from 'src/components/layout/Row'\nimport { Modal } from 'src/components/Modal'\nimport { createTransaction, CreateTransactionArgs } from 'src/logic/safe/store/actions/createTransaction'\nimport { SafeRecordProps, SpendingLimit } from 'src/logic/safe/store/models/safe'\nimport {\n  addSpendingLimitBeneficiaryMultiSendTx,\n  currentMinutes,\n  enableSpendingLimitModuleMultiSendTx,\n  getResetSpendingLimitTx,\n  setSpendingLimitMultiSendTx,\n  setSpendingLimitTx,\n  spendingLimitMultiSendTx,\n  SpendingLimitRow,\n} from 'src/logic/safe/utils/spendingLimits'\nimport { MultiSendTx } from 'src/logic/safe/transactions/multisend'\nimport { makeToken, Token } from 'src/logic/tokens/store/model/token'\nimport { fromTokenUnit, toTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\nimport { getResetTimeOptions } from 'src/routes/safe/components/Settings/SpendingLimit/FormFields/ResetTime'\nimport { AddressInfo, ResetTimeInfo, TokenInfo } from 'src/routes/safe/components/Settings/SpendingLimit/InfoDisplay'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport Hairline from 'src/components/layout/Hairline'\nimport { isModuleEnabled } from 'src/logic/safe/utils/modules'\nimport { SPENDING_LIMIT_MODULE_ADDRESS } from 'src/utils/constants'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport { TxModalWrapper } from 'src/routes/safe/components/Transactions/helpers/TxModalWrapper'\nimport { ActionCallback, CREATE } from 'src/routes/safe/components/Settings/SpendingLimit/NewLimitModal'\n\nconst useExistentSpendingLimit = ({\n  spendingLimits,\n  txToken,\n  values,\n}: {\n  spendingLimits?: SafeRecordProps['spendingLimits']\n  txToken: Token\n  values: ReviewSpendingLimitProps['values']\n}) => {\n  // undefined: before setting a value\n  // null: if no previous value\n  // SpendingLimit: if previous value exists\n  return useMemo<SpendingLimit | null>(() => {\n    // if `delegate` already exist, check what tokens were delegated to the _beneficiary_ `getTokens(safe, delegate)`\n    const currentDelegate = spendingLimits?.find(\n      ({ delegate, token }) => sameAddress(delegate, values.beneficiary) && sameAddress(token, values.token),\n    )\n\n    // let the user know that is about to replace an existent allowance\n    if (currentDelegate !== undefined) {\n      return {\n        ...currentDelegate,\n        amount: fromTokenUnit(currentDelegate.amount, txToken.decimals),\n      }\n    } else {\n      return null\n    }\n  }, [spendingLimits, txToken.decimals, values.beneficiary, values.token])\n}\n\ntype SpendingLimitsTxData = {\n  spendingLimitTxData: CreateTransactionArgs\n  transactions: MultiSendTx[]\n  spendingLimitArgs: {\n    beneficiary: string\n    token: string\n    spendingLimitInWei: string\n    resetTimeMin: number\n    resetBaseMin: number\n  }\n}\nconst calculateSpendingLimitsTxData = async (\n  safeAddress: string,\n  safeVersion: string,\n  connectedWalletAddress: string,\n  spendingLimits: SpendingLimit[] | null | undefined,\n  existentSpendingLimit: SpendingLimit | null,\n  txToken: Token,\n  values: Record<string, string>,\n  modules: string[],\n  txParameters?: TxParameters,\n): Promise<SpendingLimitsTxData> => {\n  const isSpendingLimitEnabled = isModuleEnabled(modules, SPENDING_LIMIT_MODULE_ADDRESS)\n  const transactions: MultiSendTx[] = []\n\n  // is spendingLimit module enabled? -> if not, create the tx to enable it, and encode it\n  if (!isSpendingLimitEnabled && safeAddress) {\n    const enableSpendingLimitTx = await enableSpendingLimitModuleMultiSendTx(\n      safeAddress,\n      safeVersion,\n      connectedWalletAddress,\n    )\n    transactions.push(enableSpendingLimitTx)\n  }\n\n  // does `delegate` already exist? (`getDelegates`, previously queried to build the table with allowances (??))\n  //                                  ^ - shall we rely on this or query the list of delegates once again?\n  const isDelegateAlreadyAdded =\n    spendingLimits?.some(({ delegate }) => sameAddress(delegate, values?.beneficiary)) ?? false\n\n  // if `delegate` does not exist, add it by calling `addDelegate(beneficiary)`\n  if (!isDelegateAlreadyAdded && values?.beneficiary) {\n    transactions.push(addSpendingLimitBeneficiaryMultiSendTx(values.beneficiary))\n  }\n\n  if (existentSpendingLimit && existentSpendingLimit.spent !== '0') {\n    transactions.push(getResetSpendingLimitTx(existentSpendingLimit.delegate, txToken.address))\n  }\n\n  // prepare the setAllowance tx\n  const startTime = currentMinutes() - 30\n  const spendingLimitArgs = {\n    beneficiary: values.beneficiary,\n    token: values.token,\n    spendingLimitInWei: toTokenUnit(values.amount, txToken.decimals),\n    resetTimeMin: values.withResetTime ? +values.resetTime : 0,\n    resetBaseMin: values.withResetTime ? startTime : 0,\n  }\n\n  let spendingLimitTxData\n  if (safeAddress) {\n    // if there's no tx for enable module or adding a delegate, then we avoid using multiSend Tx\n    if (transactions.length === 0) {\n      spendingLimitTxData = setSpendingLimitTx({ spendingLimitArgs, safeAddress })\n    } else {\n      const encodedTxForMultisend = setSpendingLimitMultiSendTx({ spendingLimitArgs, safeAddress })\n      transactions.push(encodedTxForMultisend)\n      spendingLimitTxData = spendingLimitMultiSendTx({ transactions, safeAddress })\n    }\n\n    if (txParameters) {\n      spendingLimitTxData.txNonce = txParameters.safeNonce\n      spendingLimitTxData.safeTxGas = txParameters.safeTxGas ? txParameters.safeTxGas : undefined\n      spendingLimitTxData.ethParameters = txParameters\n    }\n  }\n  return {\n    spendingLimitTxData,\n    transactions,\n    spendingLimitArgs,\n  }\n}\n\ninterface ReviewSpendingLimitProps {\n  onBack: ActionCallback\n  onClose: () => void\n  txToken: Token\n  values: Record<string, string>\n  existentSpendingLimit?: SpendingLimitRow\n}\n\nexport const ReviewSpendingLimits = ({ onBack, onClose, txToken, values }: ReviewSpendingLimitProps): ReactElement => {\n  const dispatch = useDispatch()\n\n  const {\n    address: safeAddress = '',\n    spendingLimits,\n    currentVersion: safeVersion = '',\n    modules,\n  } = useSelector(currentSafe) ?? {}\n  const connectedWalletAddress = useSelector(userAccountSelector)\n  const existentSpendingLimit = useExistentSpendingLimit({ spendingLimits, txToken, values })\n  const [estimateGasArgs, setEstimateGasArgs] = useState<Partial<CreateTransactionArgs>>({\n    to: '',\n    txData: '',\n  })\n\n  const safeModules = useMemo(() => modules?.map((pair) => pair[1]) || [], [modules])\n\n  useEffect(() => {\n    const calculateSpendingLimit = async () => {\n      const { spendingLimitTxData } = await calculateSpendingLimitsTxData(\n        safeAddress,\n        safeVersion,\n        connectedWalletAddress,\n        spendingLimits,\n        existentSpendingLimit,\n        txToken,\n        values,\n        safeModules,\n      )\n      setEstimateGasArgs(spendingLimitTxData)\n    }\n    calculateSpendingLimit()\n  }, [\n    safeAddress,\n    safeVersion,\n    connectedWalletAddress,\n    spendingLimits,\n    existentSpendingLimit,\n    txToken,\n    values,\n    safeModules,\n  ])\n\n  const handleSubmit = async (txParameters: TxParameters, delayExecution: boolean): Promise<void> => {\n    const { ethGasPrice, ethGasLimit, ethGasPriceInGWei } = txParameters\n    const advancedOptionsTxParameters = {\n      ...txParameters,\n      ethGasPrice,\n      ethGasPriceInGWei,\n      ethGasLimit,\n    }\n\n    if (safeAddress) {\n      const { spendingLimitTxData } = await calculateSpendingLimitsTxData(\n        safeAddress,\n        safeVersion,\n        connectedWalletAddress,\n        spendingLimits,\n        existentSpendingLimit,\n        txToken,\n        values,\n        safeModules,\n        advancedOptionsTxParameters,\n      )\n\n      dispatch(createTransaction({ ...spendingLimitTxData, delayExecution }))\n    }\n  }\n\n  const resetTimeLabel = useMemo(\n    () => (values.withResetTime ? getResetTimeOptions().find(({ value }) => value === values.resetTime)?.label : ''),\n    [values.resetTime, values.withResetTime],\n  )\n\n  const previousResetTime = (existentSpendingLimit: SpendingLimit) =>\n    getResetTimeOptions().find(({ value }) => value === (+existentSpendingLimit.resetTimeMin).toString())?.label ??\n    'One-time spending limit'\n\n  return (\n    <TxModalWrapper\n      txData={estimateGasArgs.txData || ''}\n      txTo={estimateGasArgs.to}\n      operation={estimateGasArgs.operation}\n      onSubmit={handleSubmit}\n      onBack={() => onBack({ values: {}, txToken: makeToken(), step: CREATE })}\n      submitText=\"Submit\"\n      isConfirmDisabled={existentSpendingLimit === undefined}\n    >\n      <ModalHeader onClose={onClose} title=\"New spending limit\" subTitle=\"2 of 2\" />\n      <Hairline />\n\n      <Modal.Body>\n        <Col margin=\"lg\">\n          <AddressInfo address={values.beneficiary} title=\"Beneficiary\" />\n        </Col>\n        <Col margin=\"lg\">\n          <TokenInfo\n            amount={fromTokenUnit(toTokenUnit(values.amount, txToken.decimals), txToken.decimals)}\n            title=\"Amount\"\n            token={txToken}\n          />\n          {existentSpendingLimit && (\n            <Text size=\"lg\" color=\"error\">\n              Previous Amount: {existentSpendingLimit.amount}\n            </Text>\n          )}\n        </Col>\n        <Col margin=\"lg\">\n          <ResetTimeInfo title=\"Reset Time\" label={resetTimeLabel} />\n          {existentSpendingLimit && (\n            <Row align=\"center\" margin=\"md\">\n              <Text size=\"lg\" color=\"error\">\n                Previous Reset Time: {previousResetTime(existentSpendingLimit)}\n              </Text>\n            </Row>\n          )}\n        </Col>\n\n        {existentSpendingLimit && (\n          <Col margin=\"md\">\n            <Text size=\"xl\" color=\"error\" center strong>\n              You are about to replace an existent spending limit\n            </Text>\n          </Col>\n        )}\n      </Modal.Body>\n    </TxModalWrapper>\n  )\n}\n","import { List } from 'immutable'\nimport { ReactElement, Reducer, useCallback, useReducer } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Modal } from 'src/components/Modal'\nimport { makeToken, Token } from 'src/logic/tokens/store/model/token'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { extendedSafeTokensSelector } from 'src/routes/safe/container/selector'\n\nimport Create from './Create'\nimport { ReviewSpendingLimits } from './Review'\n\nexport const CREATE = 'CREATE' as const\nexport const REVIEW = 'REVIEW' as const\n\ntype Step = typeof CREATE | typeof REVIEW\n\ntype State = {\n  step: Step\n  values: Record<string, string>\n  txToken: Token\n}\n\ntype Action = {\n  type: Step\n  newState: State\n  tokens: List<Token>\n}\n\nconst newLimitModalReducer = (state: State, action: Action): State => {\n  const { type, newState, tokens } = action\n\n  switch (type) {\n    case CREATE: {\n      return {\n        ...state,\n        step: CREATE,\n      }\n    }\n\n    case REVIEW: {\n      return {\n        ...state,\n        ...newState,\n        // we lookup into the list of tokens for the selected token info\n        txToken: tokens.find((token) => sameAddress(token.address, newState.values.token)) ?? state.txToken,\n        step: REVIEW,\n      }\n    }\n  }\n}\n\nexport type ActionCallback = (state: State) => void\ntype NewLimitModalHook = [State, { create: ActionCallback; review: ActionCallback }]\n\nconst useNewLimitModal = (initialStep: Step): NewLimitModalHook => {\n  // globally stored tokens\n  const tokens = useSelector(extendedSafeTokensSelector)\n\n  // setup the reducer with initial values\n  const [state, dispatch] = useReducer<Reducer<State, Action>, State>(\n    newLimitModalReducer,\n    {\n      step: initialStep,\n      txToken: makeToken(),\n      values: {},\n    },\n    (state) => state,\n  )\n\n  // define actions\n  const create = useCallback<ActionCallback>((newState) => dispatch({ type: CREATE, newState, tokens }), [tokens])\n  const review = useCallback<ActionCallback>((newState) => dispatch({ type: REVIEW, newState, tokens }), [tokens])\n\n  // returns state and dispatch\n  return [state, { create, review }]\n}\n\ninterface SpendingLimitModalProps {\n  close: () => void\n  open: boolean\n}\n\nexport const NewLimitModal = ({ close, open }: SpendingLimitModalProps): ReactElement => {\n  // state and dispatch\n  const [{ step, txToken, values }, { create, review }] = useNewLimitModal(CREATE)\n\n  const handleReview = async (values) => {\n    // if form is valid, we update the state to REVIEW and sets values\n    review({ step, txToken, values })\n  }\n\n  return (\n    <Modal\n      handleClose={close}\n      open={open}\n      title=\"New spending limit\"\n      description=\"set rules for specific beneficiaries to access funds from this Safe without having to collect all signatures\"\n    >\n      {step === CREATE && <Create initialValues={values} onCancel={close} onReview={handleReview} />}\n      {step === REVIEW && <ReviewSpendingLimits onBack={create} onClose={close} txToken={txToken} values={values} />}\n    </Modal>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/asset-amount.98054bf3.svg\";","export default __webpack_public_path__ + \"static/media/beneficiary.0beb8d31.svg\";","export default __webpack_public_path__ + \"static/media/time.31d09fca.svg\";","import { Text } from '@gnosis.pm/safe-react-components'\nimport { ReactElement } from 'react'\nimport styled from 'styled-components'\n\nimport Img from 'src/components/layout/Img'\nimport AssetAmount from './assets/asset-amount.svg'\nimport Beneficiary from './assets/beneficiary.svg'\nimport Time from './assets/time.svg'\n\nconst StepWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin-top: 20px;\n  max-width: 720px;\n  text-align: center;\n`\n\nconst Step = styled.div`\n  width: 24%;\n  min-width: 120px;\n  max-width: 164px;\n`\n\nconst StepsLine = styled.div`\n  height: 2px;\n  flex: 1;\n  background: #d4d5d3;\n  margin: 46px 0;\n`\n\nexport const NewLimitSteps = (): ReactElement => (\n  <StepWrapper>\n    <Step>\n      <Img alt=\"Select Beneficiary\" title=\"Beneficiary\" height={96} src={Beneficiary} />\n\n      <Text size=\"lg\" color=\"placeHolder\" strong center>\n        Select Beneficiary\n      </Text>\n\n      <Text size=\"lg\" color=\"placeHolder\" center>\n        Define beneficiary that will be able to use the allowance.\n      </Text>\n\n      <Text size=\"lg\" color=\"placeHolder\" center>\n        The beneficiary does not have to be an owner of this Safe\n      </Text>\n    </Step>\n\n    <StepsLine />\n\n    <Step>\n      <Img alt=\"Select asset and amount\" title=\"Asset and Amount\" height={96} src={AssetAmount} />\n\n      <Text size=\"lg\" color=\"placeHolder\" strong center>\n        Select asset and amount\n      </Text>\n\n      <Text size=\"lg\" color=\"placeHolder\" center>\n        You can set a spending limit for any asset stored in your Safe\n      </Text>\n    </Step>\n\n    <StepsLine />\n\n    <Step>\n      <Img alt=\"Select time\" title=\"Time\" height={96} src={Time} />\n\n      <Text size=\"lg\" color=\"placeHolder\" strong center>\n        Select time\n      </Text>\n\n      <Text size=\"lg\" color=\"placeHolder\" center>\n        You can choose to set a one-time spending limit or to have it automatically refill after a defined time-period\n      </Text>\n    </Step>\n  </StepWrapper>\n)\n","import { Button, Text, Title } from '@gnosis.pm/safe-react-components'\nimport { ReactElement, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\n\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Row from 'src/components/layout/Row'\nimport { currentSafeSpendingLimits } from 'src/logic/safe/store/selectors'\nimport { grantedSelector } from 'src/routes/safe/container/selector'\n\nimport { LimitsTable } from './LimitsTable'\nimport { getSpendingLimitData } from './LimitsTable/dataFetcher'\nimport { NewLimitModal } from './NewLimitModal'\nimport { NewLimitSteps } from './NewLimitSteps'\nimport { useStyles } from './style'\n\nconst InfoText = styled(Text)`\n  margin-top: 16px;\n`\n\nconst SpendingLimit = (): ReactElement => {\n  const classes = useStyles()\n  const granted = useSelector(grantedSelector)\n  const allowances = useSelector(currentSafeSpendingLimits)\n  const spendingLimitData = getSpendingLimitData(allowances)\n\n  const [showNewSpendingLimitModal, setShowNewSpendingLimitModal] = useState(false)\n  const openNewSpendingLimitModal = () => {\n    setShowNewSpendingLimitModal(true)\n  }\n  const closeNewSpendingLimitModal = () => {\n    setShowNewSpendingLimitModal(false)\n  }\n\n  return (\n    <>\n      <Block className={classes.container} grow=\"grow\">\n        <Title size=\"xs\" withoutMargin>\n          Spending limit\n        </Title>\n        <InfoText size=\"lg\">\n          You can set rules for specific beneficiaries to access funds from this Safe without having to collect all\n          signatures.\n        </InfoText>\n        {spendingLimitData?.length ? <LimitsTable data={spendingLimitData} /> : <NewLimitSteps />}\n      </Block>\n\n      {granted && (\n        <>\n          <Row align=\"end\" className={classes.buttonRow} grow>\n            <Col end=\"xs\">\n              <Button\n                className={classes.actionButton}\n                color=\"primary\"\n                size=\"md\"\n                data-testid=\"new-spending-limit-button\"\n                onClick={openNewSpendingLimitModal}\n                variant=\"contained\"\n              >\n                New spending limit\n              </Button>\n            </Col>\n          </Row>\n          {showNewSpendingLimitModal && <NewLimitModal close={closeNewSpendingLimitModal} open={true} />}\n        </>\n      )}\n    </>\n  )\n}\n\nexport default SpendingLimit\n"],"sourceRoot":""}
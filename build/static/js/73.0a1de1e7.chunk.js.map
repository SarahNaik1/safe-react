{"version":3,"sources":["routes/safe/components/Balances/SendModal/screens/ChooseTxType/style.ts","routes/safe/components/Balances/SendModal/screens/assets/collectibles.svg","routes/safe/components/Balances/SendModal/screens/assets/token.svg","routes/safe/components/Balances/SendModal/screens/ChooseTxType/index.tsx","routes/safe/components/Transactions/TxList/assets/custom.svg"],"names":["useStyles","makeStyles","createStyles","heading","padding","md","lg","justifyContent","boxSizing","height","manage","fontSize","marginTop","xs","disclaimer","marginBottom","paddingTop","textAlign","disclaimerText","closeIcon","width","buttonColumn","margin","firstButton","iconSmall","leftIcon","marginRight","sm","ChooseTxType","onClose","recipientAddress","recipientName","setActiveScreen","classes","featuresEnabled","useSelector","currentSafeFeaturesEnabled","erc721Enabled","includes","FEATURES","ERC721","contractInteractionEnabled","CONTRACT_INTERACTION","React","disableContractInteraction","setDisableContractInteraction","isCurrent","isContract","a","mustBeEthereumContractAddress","Row","align","className","grow","Paragraph","noMargin","weight","IconButton","disableRipple","onClick","Hairline","Col","layout","middle","PrefixedEthHashInfo","hash","name","showAvatar","showCopyBtn","explorerUrl","getExplorerInfo","Button","color","minHeight","minWidth","variant","testId","Img","alt","classNames","src","Token","Collectible","disabled","ContractInteractionIcon"],"mappings":"kUAGaA,EAAYC,YACvBC,YAAa,CACXC,QAAS,CACPC,QAAQ,GAAD,OAAKC,KAAL,YAAWC,MAClBC,eAAgB,gBAChBC,UAAW,aACXC,OAAQ,QAEVC,OAAQ,CACNC,SAAUL,KACVM,UAAU,GAAD,OAAKC,OAEhBC,WAAY,CACVC,aAAa,IAAD,OAAMV,MAClBW,WAAYX,KACZY,UAAW,UAEbC,eAAgB,CACdP,SAAUN,KACVU,aAAa,GAAD,OAAKV,OAEnBc,UAAW,CACTV,OAAQ,OACRW,MAAO,QAETC,aAAc,CACZC,OAAQ,iBAEVC,YAAa,CACXR,aAAc,IAEhBS,UAAW,CACTb,SAAU,IAEZc,SAAU,CACRC,YAAaC,S,UCtCJ,MAA0B,yCCA1B,MAA0B,kC,uBC+I1BC,UA9GM,SAAC,GAKwB,IAJ5CC,EAI2C,EAJ3CA,QACAC,EAG2C,EAH3CA,iBACAC,EAE2C,EAF3CA,cACAC,EAC2C,EAD3CA,gBAEMC,EAAUjC,IACVkC,EAAkBC,YAAYC,KAC9BC,EAAa,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAiBI,SAASC,WAASC,QACnDC,EAA0B,OAAGP,QAAH,IAAGA,OAAH,EAAGA,EAAiBI,SAASC,WAASG,sBACtE,EAAoEC,aAAiBb,GAArF,mBAAOc,EAAP,KAAmCC,EAAnC,KAiBA,OAfAF,aAAgB,WACd,IAAIG,GAAY,EACVC,EAAU,uCAAG,sBAAAC,EAAA,0DACblB,IAAoBgB,EADP,4BAEfD,EAFe,SAEwBI,YAA8BnB,GAFtD,+EAAH,qDAQhB,OAFAiB,IAEO,WACLD,GAAY,KAEb,CAAChB,IAGF,qCACE,eAACoB,EAAA,EAAD,CAAKC,MAAM,SAASC,UAAWnB,EAAQ9B,QAASkD,MAAI,EAApD,UACE,cAACC,EAAA,EAAD,CAAWF,UAAWnB,EAAQvB,OAAQ6C,UAAQ,EAACC,OAAO,SAAtD,kBAGA,cAACC,EAAA,EAAD,CAAYC,eAAa,EAACC,QAAS9B,EAAnC,SACE,cAAC,IAAD,CAAOuB,UAAWnB,EAAQd,iBAG9B,cAACyC,EAAA,EAAD,MACG9B,GACD,cAACoB,EAAA,EAAD,CAAKC,MAAM,SAAS7B,OAAO,KAA3B,SACE,eAACuC,EAAA,EAAD,CAAKT,UAAWnB,EAAQnB,WAAYgD,OAAO,SAASC,OAAO,KAA3D,UACE,cAACT,EAAA,EAAD,CAAWF,UAAWnB,EAAQf,eAAgBqC,UAAQ,EAAtD,iDAGA,cAACS,EAAA,EAAD,CACEC,KAAMnC,EACNoC,KAAMnC,EACNoC,YAAU,EACVC,aAAW,EACXC,YAAaC,YAAgBxC,UAKrC,cAACoB,EAAA,EAAD,CAAKC,MAAM,SAAX,SACE,eAACU,EAAA,EAAD,CAAKT,UAAWnB,EAAQZ,aAAcyC,OAAO,SAASC,OAAO,KAA7D,UACE,eAACQ,EAAA,EAAD,CACEnB,UAAWnB,EAAQV,YACnBiD,MAAM,UACNC,UAAW,GACXC,SAAU,IACVf,QAAS,kBAAM3B,EAAgB,cAC/B2C,QAAQ,YACRC,OAAO,uBAPT,UASE,cAACC,EAAA,EAAD,CAAKC,IAAI,aAAa1B,UAAW2B,IAAW9C,EAAQR,SAAUQ,EAAQT,WAAYwD,IAAKC,IATzF,gBAYC5C,GACC,eAACkC,EAAA,EAAD,CACEnB,UAAWnB,EAAQV,YACnBiD,MAAM,UACNC,UAAW,GACXC,SAAU,IACVf,QAAS,kBAAM3B,EAAgB,oBAC/B2C,QAAQ,YACRC,OAAO,6BAPT,UASE,cAACC,EAAA,EAAD,CACEC,IAAI,mBACJ1B,UAAW2B,IAAW9C,EAAQR,SAAUQ,EAAQT,WAChDwD,IAAKE,IAZT,sBAiBDzC,GACC,eAAC8B,EAAA,EAAD,CACEC,MAAM,UACNW,SAAUvC,EACV6B,UAAW,GACXC,SAAU,IACVf,QAAS,kBAAM3B,EAAgB,wBAC/B2C,QAAQ,WACRC,OAAO,iCAPT,UASE,cAACC,EAAA,EAAD,CACEC,IAAI,uBACJ1B,UAAW2B,IAAW9C,EAAQR,SAAUQ,EAAQT,WAChDwD,IAAKI,MAZT,oC,kCCxHG,QAA0B","file":"static/js/73.0a1de1e7.chunk.js","sourcesContent":["import { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { lg, md, sm, xs } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    heading: {\n      padding: `${md} ${lg}`,\n      justifyContent: 'space-between',\n      boxSizing: 'border-box',\n      height: '74px',\n    },\n    manage: {\n      fontSize: lg,\n      marginTop: `${xs}`,\n    },\n    disclaimer: {\n      marginBottom: `-${md}`,\n      paddingTop: md,\n      textAlign: 'center',\n    },\n    disclaimerText: {\n      fontSize: md,\n      marginBottom: `${md}`,\n    },\n    closeIcon: {\n      height: '35px',\n      width: '35px',\n    },\n    buttonColumn: {\n      margin: '52px 0 44px 0',\n    },\n    firstButton: {\n      marginBottom: 12,\n    },\n    iconSmall: {\n      fontSize: 16,\n    },\n    leftIcon: {\n      marginRight: sm,\n    },\n  }),\n)\n","export default __webpack_public_path__ + \"static/media/collectibles.93c16ba7.svg\";","export default __webpack_public_path__ + \"static/media/token.36f47a15.svg\";","import IconButton from '@material-ui/core/IconButton'\nimport Close from '@material-ui/icons/Close'\nimport classNames from 'classnames/bind'\nimport * as React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { mustBeEthereumContractAddress } from 'src/components/forms/validator'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Img from 'src/components/layout/Img'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { currentSafeFeaturesEnabled } from 'src/logic/safe/store/selectors'\nimport { useStyles } from 'src/routes/safe/components/Balances/SendModal/screens/ChooseTxType/style'\nimport ContractInteractionIcon from 'src/routes/safe/components/Transactions/TxList/assets/custom.svg'\n\nimport Collectible from '../assets/collectibles.svg'\nimport Token from '../assets/token.svg'\n\nimport { getExplorerInfo } from 'src/config'\nimport { FEATURES } from '@gnosis.pm/safe-react-gateway-sdk'\n\ntype ActiveScreen = 'sendFunds' | 'sendCollectible' | 'contractInteraction'\n\ninterface ChooseTxTypeProps {\n  onClose: () => void\n  recipientAddress?: string\n  recipientName?: string\n  setActiveScreen: React.Dispatch<React.SetStateAction<ActiveScreen>>\n}\n\nconst ChooseTxType = ({\n  onClose,\n  recipientAddress,\n  recipientName,\n  setActiveScreen,\n}: ChooseTxTypeProps): React.ReactElement => {\n  const classes = useStyles()\n  const featuresEnabled = useSelector(currentSafeFeaturesEnabled)\n  const erc721Enabled = featuresEnabled?.includes(FEATURES.ERC721)\n  const contractInteractionEnabled = featuresEnabled?.includes(FEATURES.CONTRACT_INTERACTION)\n  const [disableContractInteraction, setDisableContractInteraction] = React.useState(!!recipientAddress)\n\n  React.useEffect(() => {\n    let isCurrent = true\n    const isContract = async () => {\n      if (recipientAddress && isCurrent) {\n        setDisableContractInteraction(!!(await mustBeEthereumContractAddress(recipientAddress)))\n      }\n    }\n\n    isContract()\n\n    return () => {\n      isCurrent = false\n    }\n  }, [recipientAddress])\n\n  return (\n    <>\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\n          Send\n        </Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.closeIcon} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      {!!recipientAddress && (\n        <Row align=\"center\" margin=\"md\">\n          <Col className={classes.disclaimer} layout=\"column\" middle=\"xs\">\n            <Paragraph className={classes.disclaimerText} noMargin>\n              Please select what you will send to\n            </Paragraph>\n            <PrefixedEthHashInfo\n              hash={recipientAddress}\n              name={recipientName}\n              showAvatar\n              showCopyBtn\n              explorerUrl={getExplorerInfo(recipientAddress)}\n            />\n          </Col>\n        </Row>\n      )}\n      <Row align=\"center\">\n        <Col className={classes.buttonColumn} layout=\"column\" middle=\"xs\">\n          <Button\n            className={classes.firstButton}\n            color=\"primary\"\n            minHeight={52}\n            minWidth={240}\n            onClick={() => setActiveScreen('sendFunds')}\n            variant=\"contained\"\n            testId=\"modal-send-funds-btn\"\n          >\n            <Img alt=\"Send funds\" className={classNames(classes.leftIcon, classes.iconSmall)} src={Token} />\n            Send funds\n          </Button>\n          {erc721Enabled && (\n            <Button\n              className={classes.firstButton}\n              color=\"primary\"\n              minHeight={52}\n              minWidth={240}\n              onClick={() => setActiveScreen('sendCollectible')}\n              variant=\"contained\"\n              testId=\"modal-send-collectible-btn\"\n            >\n              <Img\n                alt=\"Send collectible\"\n                className={classNames(classes.leftIcon, classes.iconSmall)}\n                src={Collectible}\n              />\n              Send collectible\n            </Button>\n          )}\n          {contractInteractionEnabled && (\n            <Button\n              color=\"primary\"\n              disabled={disableContractInteraction}\n              minHeight={52}\n              minWidth={240}\n              onClick={() => setActiveScreen('contractInteraction')}\n              variant=\"outlined\"\n              testId=\"modal-contract-interaction-btn\"\n            >\n              <Img\n                alt=\"Contract Interaction\"\n                className={classNames(classes.leftIcon, classes.iconSmall)}\n                src={ContractInteractionIcon}\n              />\n              Contract interaction\n            </Button>\n          )}\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default ChooseTxType\n","export default __webpack_public_path__ + \"static/media/custom.6f7b401c.svg\";"],"sourceRoot":""}
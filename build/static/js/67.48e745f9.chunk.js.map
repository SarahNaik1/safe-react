{"version":3,"sources":["routes/safe/components/Transactions/helpers/TxModalWrapper/index.tsx","components/Divider/index.tsx","logic/hooks/useDebounce.tsx","utils/url.ts","routes/safe/components/Apps/components/ConfirmTxModal/SafeAppLoadError.tsx","components/DecodeTxs/index.tsx","utils/decodeTx.ts","routes/safe/components/Apps/components/ConfirmTxModal/ReviewConfirm.tsx","components/ModalTitle/index.tsx","routes/safe/components/Apps/components/ConfirmTxModal/DecodedTxDetail.tsx","routes/safe/components/Apps/components/ConfirmTxModal/index.tsx","routes/safe/components/Apps/communicator.ts","routes/safe/components/Apps/hooks/useSignMessageModal.ts","routes/safe/components/Apps/components/SignMessageModal/ReviewMessage.tsx","routes/safe/components/Apps/components/SignMessageModal/index.tsx","routes/safe/components/Apps/components/AppFrame.tsx","routes/safe/components/Apps/hooks/useIframeMessageHandler.ts","routes/safe/components/Apps/assets/addApp.svg","routes/safe/components/Apps/components/AppCard/skeleton.tsx","routes/safe/components/Apps/components/AppCard/index.tsx","routes/safe/components/Apps/components/SearchInputCard.tsx","routes/safe/components/Apps/components/NoAppsFound.tsx","routes/safe/components/Apps/components/AddAppForm/AppAgreement.tsx","routes/safe/components/Apps/components/AddAppForm/AppUrl.tsx","routes/safe/components/Apps/components/AddAppForm/FormButtons.tsx","routes/safe/components/Apps/components/AddAppForm/index.tsx","logic/safe/api/fetchSafeApps.ts","routes/safe/components/Apps/hooks/appList/useAppList.ts","routes/safe/components/Apps/hooks/appList/useRemoteSafeApps.ts","routes/safe/components/Apps/hooks/appList/useCustomSafeApps.ts","routes/safe/components/Apps/hooks/appList/usePinnedSafeApps.ts","routes/safe/components/Apps/components/PinnedAppsTutorial.tsx","routes/safe/components/Apps/components/AppsList.tsx","routes/safe/components/Apps/hooks/useAppsSearch.ts","routes/safe/components/Apps/components/LegalDisclaimer.tsx","routes/safe/components/Apps/hooks/useLegalConsent.ts","routes/safe/components/Apps/index.tsx","logic/hooks/useSafeAppUrl.tsx"],"names":["Container","styled","div","lg","md","TxModalWrapper","children","operation","txData","txValue","txTo","txType","onSubmit","onBack","submitText","isConfirmDisabled","useState","manualSafeTxGas","setManualSafeTxGas","manualGasPrice","setManualGasPrice","manualMaxPrioFee","setManualMaxPrioFee","manualGasLimit","setManualGasLimit","manualSafeNonce","setManualSafeNonce","executionApproved","setExecutionApproved","safeAddress","extractSafeAddress","isSpendingLimitTx","isSpendingLimit","useEstimateTransactionGas","txRecipient","txAmount","safeTxGas","gasCostFormatted","gasPriceFormatted","gasMaxPrioFeeFormatted","gasLimit","gasEstimation","txEstimationExecutionStatus","isCreation","isOffChainSignature","useEstimationStatus","submitStatus","setSubmitStatus","canTxExecute","useCanTxExecute","undefined","doExecute","onClose","txParameters","oldGasPrice","newGasPrice","ethGasPrice","oldGasLimit","newGasLimit","ethGasLimit","oldMaxPrioFee","newMaxPrioFee","ethMaxPrioFee","oldSafeTxGas","newSafeTxGas","newSafeNonce","safeNonce","newSafeNonceNumber","parseInt","isExecution","closeEditModalCallback","toggleEditMode","onChange","onEdit","isTransactionCreation","isTransactionExecution","Footer","withoutBorder","ButtonStatus","LOADING","Buttons","cancelButtonProps","onClick","text","confirmButtonProps","READY","logError","Errors","_802","onSubmitClick","status","disabled","EstimationStatus","testId","Wrapper","StyledDivider","DividerSRC","Divider","withArrow","type","size","useDebounce","value","delay","options","previousValue","useRef","current","setCurrent","debouncedCallback","useMemo","debounce","val","useEffect","cancel","isValidURL","url","protocolsAllowed","urlInfo","URL","includes","protocol","error","theme","margin","sm","IconText","FooterWrapper","SafeAppLoadError","onTxReject","requestId","color","cancelText","handleCancel","handleOk","okDisabled","okText","FlexWrapper","BasicTxInfoWrapper","TxList","colors","separator","TxListItem","ElementWrapper","getByteLength","data","Array","isArray","split","reduce","result","hex","hexToBytes","length","err","BasicTxInfo","recipientName","strong","getInteractionTitle","PrefixedEthHashInfo","hash","showAvatar","textSize","showCopyBtn","name","explorerUrl","getExplorerInfo","textToCopy","getParameterElement","parameter","index","valueElement","startsWith","endsWith","JSON","stringify","e","SingleTx","decodedData","onTxItemClick","iconSize","iconType","method","MultiSendTx","txs","get","map","tx","dataDecoded","DecodeTxs","fetchTxDecoder","encodedData","a","getDecodedData","GATEWAY_URL","_getChainId","DecodeTxsWrapper","StyledBlock","Block","ReviewConfirm","app","ethBalance","safeName","hidden","onUserConfirm","onReject","showDecodedTxData","isMultiSend","setDecodedData","dispatch","useDispatch","nativeCurrency","getNativeCurrency","isOwner","useSelector","grantedSelector","getMultisendContractAddress","to","encodeMultiSendCall","toBN","toString","Operation","DELEGATE","CALL","decodeTxData","res","handleUserConfirmation","safeTxHash","delayExecution","createTransaction","valueInWei","origin","id","navigateToTransactionsTab","txNonce","ethParameters","notifiedTransaction","TX_NOTIFICATION_TYPES","STANDARD_TX","ModalHeader","title","iconUrl","Hairline","symbol","fromTokenUnit","decimals","StyledParagraph","Paragraph","IconImg","img","TitleWrapper","StyledRow","Row","StyledClose","Close","GoBackWrapper","ModalTitle","goBack","align","grow","IconButton","alt","src","noMargin","weight","disableRipple","DecodedTxDetail","body","hideDecodedTxData","decodedTxData","parameters","p","ConfirmTxModal","props","decodedTxDetails","setDecodedTxDetails","invalidTransactions","some","t","test","mustBeEthereumAddress","isTxValid","rejectTransaction","Modal","description","open","isOpen","AppCommunicator","iframeRef","handlers","Map","on","handler","set","isValidMessage","msg","sentFromIframe","source","parent","window","knownMethod","Object","values","Methods","canHandleMessage","Boolean","send","sdkVersion","getSDKVersion","MessageFormatter","makeErrorResponse","makeResponse","contentWindow","postMessage","handleIncomingMessage","validMessage","hasHandler","response","message","trackError","_901","contexts","safeApp","request","clear","removeEventListener","this","addEventListener","INITIAL_MODAL_STATE","MessageTextArea","MuiTextField","InfoMessage","xs","ReviewMessage","utf8Message","handleTxRejection","rows","multiline","fullWidth","label","inputProps","placeholder","InputProps","disableUnderline","SignMessageModal","rest","web3","getWeb3ReadOnly","networkId","currentChainId","getSignMessageLibAddress","ZERO_ADDRESS","getSignMessageLibContractInstance","methods","signMessage","eth","accounts","hashMessage","encodeABI","readableData","isHex","isHexStrict","humanReadableMessage","hexToUtf8","convertToHumanReadableMessage","AppWrapper","StyledCard","Card","StyledIframe","iframe","isLoading","INITIAL_CONFIRM_TX_MODAL_STATE","params","safeAppWeb3Provider","Web3","providers","HttpProvider","getSafeAppsRpcServiceUrl","timeout","AppFrame","appUrl","currentSafe","address","owners","threshold","getChainInfo","chainId","chainName","shortName","state","addressBookEntryName","trackEvent","useAnalytics","confirmTransactionModal","setConfirmTransactionModal","appIsLoading","setAppIsLoading","getEmptySafeApp","setSafeApp","signMessageModalState","setSignMessageModalState","useCallback","useSignMessageModal","openSignMessageModal","closeSignMessageModal","timer","isLoadingSlow","setIsLoadingSlow","errorTimer","setAppLoadError","clearTimeouts","clearTimeout","setTimeout","SAFE_POLLING_INTERVAL","Error","openConfirmationModal","closeConfirmationModal","selectedApp","closeModal","useSnackbar","enqueueSnackbar","closeSnackbar","currentSafeWithNames","sendMessageToIframe","requestWithMessage","Math","trunc","performance","now","version","handleIframeMessage","messageId","messagePayload","SDK_MESSAGES","SEND_TRANSACTIONS","SAFE_APP_SDK_INITIALIZED","safeInfoMessage","INTERFACE_MESSAGES","ON_SAFE_INFO","network","getLegacyChainName","toLowerCase","envInfoMessage","ENV_INFO","txServiceUrl","getTxServiceUrl","console","onIframeMessage","useIframeMessageHandler","onIframeLoad","url1","url2","b","href","isSameURL","communicator","setCommunicator","communicatorInstance","initCommunicator","useAppCommunicator","getTxBySafeTxHash","fetchSafeTransaction","getSafeInfo","toUpperCase","getSafeBalances","currency","fetchTokenCurrenciesBalances","selectedCurrency","balances","rpcCall","Promise","resolve","reject","jsonrpc","call","sendTransactions","onUserTxConfirm","TRANSACTION_CONFIRMED","TRANSACTION_REJECTED","loadApp","getAppInfoFromUrl","_900","SAFE_EVENTS","SAFE_APP","style","flexDirection","frameBorder","ref","onLoad","allow","gradientSK","keyframes","AppIconSK","TitleSK","DescriptionSK","StyledAppCard","alpha","shadow","secondary","background","primary","IconBtn","AppContainer","motion","AppName","Title","AppDescription","Text","StyledLink","Link","setAppImageFallback","currentTarget","onerror","appsIconSvg","getPinLabel","pinned","AppCard","onPin","onRemove","FETCH_STATUS","fetchStatus","isAppLoading","layout","initial","opacity","animate","exit","content","onError","preventDefault","AddCustomAppCard","AddAppIcon","variant","SearchInputCard","onValueChange","Input","startAdornment","endAdornment","event","target","width","NoAppsFoundTextContainer","xxl","SButton","Button","NoAppsFound","query","onWalletConnectSearch","StyledCheckbox","Checkbox","AppAgreement","visited","useFormState","subscription","validate","agreementAccepted","required","Field","component","validateUrl","appUrlResolver","createDecorator","field","updates","isValidEnsName","getIpfsLinkFromEns","ensContent","AppInfoUpdater","onAppInfo","onLoading","useField","input","debouncedValue","updateAppInfo","appInfo","StyledAppUrlField","AppUrl","appList","composeValidators","uniqueApp","TextField","autoComplete","FormButtons","onCancel","valid","validating","isSubmitDisabled","fieldsVisited","isAppManifestValid","StyledTextFileAppName","AppInfo","AppDocsInfo","WrapperLoader","StyledLoader","Loader","INITIAL_VALUES","DEFAULT_APP_INFO","AddApp","onAddApp","setAppInfo","fetchError","setFetchError","history","useHistory","setIsLoading","handleSubmit","push","pathname","generateSafeRoute","SAFE_ROUTES","APPS","extractPrefixedSafeAddress","search","encodeURIComponent","_903","GnoForm","decorators","initialValues","Body","as","rel","Img","meta","fetchSafeAppsList","getSafeApps","client_url","location","useAppList","remoteSafeApps","setRemoteSafeApps","NOT_ASKED","setStatus","loadAppsList","SUCCESS","String","ERROR","_902","NOTIFICATIONS","SAFE_APPS_FETCH_ERROR_MSG","useRemoteSafeApps","remoteAppsFetchStatus","customSafeApps","setCustomSafeApps","loaded","setLoaded","updateCustomSafeApps","newCustomSafeApps","saveToStorage","APPS_STORAGE_KEY","fetchAppCallback","prev","prevAppsCopy","appIndex","findIndex","splice","loadCustomApps","loadFromStorage","storageAppList","serializedApps","trim","custom","forEach","then","appFromUrl","catch","useCustomSafeApps","pinnedSafeAppIds","updatePinnedSafeApps","loadPinnedAppIds","PINNED_SAFE_APP_IDS","pinnedAppIds","filteredPinnedAppsIds","filter","pinnedAppId","usePinnedSafeApps","remoteIsLoading","allApps","sort","localeCompare","customApps","persistedApp","pinnedSafeApps","addCustomApp","newList","removeApp","appId","newPersistedList","togglePin","appName","newPinnedIds","SAFE_APP_EVENTS","PIN","indexOf","UNPIN","StyledBookmarkIcon","BookmarkBorder","PinnedAppsTutorial","InfoIcon","centerCSS","css","LoadingContainer","CardsWrapper","ContentWrapper","SectionHeading","xl","CenterIconText","AppsList","appsPath","getShortName","appSearch","setAppSearch","apps","searchText","fuse","Fuse","keys","findAllMatches","item","useAppsSearch","appToRemove","setAppToRemove","useStateHandler","isAddAppModalOpen","openAddAppModal","toggle","closeAddAppModal","clickAway","noAppsFound","showCustomApps","showPinnedApps","handleAppPin","Col","start","replace","Collapse","defaultExpanded","AnimatePresence","encodeURI","pinnedApp","handleClose","Header","AddAppForm","LegalDisclaimer","onConfirm","APPS_LEGAL_CONSENT_RECEIVED","Apps","getAppUrl","useLocation","URLSearchParams","useSafeAppUrl","consentReceived","setConsentReceived","onConsentReceipt","useLegalConsent"],"mappings":"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","file":"static/js/67.48e745f9.chunk.js","sourcesContent":["import { ReactNode, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\nimport { extractSafeAddress } from 'src/routes/routes'\nimport { ReviewInfoText } from 'src/components/ReviewInfoText'\nimport ExecuteCheckbox from 'src/components/ExecuteCheckbox'\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { ButtonStatus, Modal } from 'src/components/Modal'\nimport { lg, md } from 'src/theme/variables'\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\nimport { isSpendingLimit } from 'src/routes/safe/components/Transactions/helpers/utils'\nimport useCanTxExecute from 'src/logic/hooks/useCanTxExecute'\n\ntype Props = {\n  children: ReactNode\n  operation?: number\n  txData: string\n  txValue?: string\n  txTo?: string\n  txType?: string\n  onSubmit: (txParams: TxParameters, delayExecution?: boolean) => void\n  onBack?: (...rest: any) => void\n  submitText?: string\n  isConfirmDisabled?: boolean\n}\n\nconst Container = styled.div`\n  padding: 0 ${lg} ${md};\n`\n\nexport const TxModalWrapper = ({\n  children,\n  operation,\n  txData,\n  txValue = '0',\n  txTo,\n  txType,\n  onSubmit,\n  onBack,\n  submitText,\n  isConfirmDisabled,\n}: Props): React.ReactElement => {\n  const [manualSafeTxGas, setManualSafeTxGas] = useState('0')\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\n  const [manualMaxPrioFee, setManualMaxPrioFee] = useState<string | undefined>()\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\n  const [manualSafeNonce, setManualSafeNonce] = useState<number | undefined>()\n  const [executionApproved, setExecutionApproved] = useState<boolean>(true)\n  const safeAddress = extractSafeAddress()\n  const isSpendingLimitTx = isSpendingLimit(txType)\n\n  const {\n    gasCostFormatted,\n    gasPriceFormatted,\n    gasMaxPrioFeeFormatted,\n    gasLimit,\n    gasEstimation,\n    txEstimationExecutionStatus,\n    isCreation,\n    isOffChainSignature,\n  } = useEstimateTransactionGas({\n    txData,\n    txRecipient: txTo || safeAddress,\n    txType,\n    txAmount: txValue,\n    safeTxGas: manualSafeTxGas,\n    manualGasPrice,\n    manualMaxPrioFee,\n    manualGasLimit,\n    manualSafeNonce,\n    operation,\n  })\n\n  const [submitStatus, setSubmitStatus] = useEstimationStatus(txEstimationExecutionStatus)\n\n  const canTxExecute = useCanTxExecute(undefined, manualSafeNonce)\n  const doExecute = executionApproved && canTxExecute\n\n  const onClose = (txParameters: TxParameters) => {\n    const oldGasPrice = gasPriceFormatted\n    const newGasPrice = txParameters.ethGasPrice\n    const oldGasLimit = gasLimit\n    const newGasLimit = txParameters.ethGasLimit\n    const oldMaxPrioFee = gasMaxPrioFeeFormatted\n    const newMaxPrioFee = txParameters.ethMaxPrioFee\n    const oldSafeTxGas = gasEstimation\n    const newSafeTxGas = txParameters.safeTxGas\n    const newSafeNonce = txParameters.safeNonce\n\n    if (oldGasPrice !== newGasPrice) {\n      setManualGasPrice(newGasPrice)\n    }\n\n    if (oldMaxPrioFee !== newMaxPrioFee) {\n      setManualMaxPrioFee(newMaxPrioFee)\n    }\n\n    if (oldGasLimit !== newGasLimit) {\n      setManualGasLimit(newGasLimit)\n    }\n\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\n      setManualSafeTxGas(newSafeTxGas)\n    }\n\n    if (newSafeNonce) {\n      const newSafeNonceNumber = parseInt(newSafeNonce, 10)\n      setManualSafeNonce(newSafeNonceNumber)\n    }\n  }\n\n  const onSubmitClick = (txParameters: TxParameters) => {\n    setSubmitStatus(ButtonStatus.LOADING)\n\n    if (!safeAddress) {\n      setSubmitStatus(ButtonStatus.READY)\n      logError(Errors._802)\n      return\n    }\n\n    onSubmit(txParameters, !doExecute)\n  }\n\n  return (\n    <EditableTxParameters\n      isOffChainSignature={isOffChainSignature}\n      isExecution={doExecute}\n      ethGasLimit={gasLimit}\n      ethGasPrice={gasPriceFormatted}\n      ethMaxPrioFee={gasMaxPrioFeeFormatted}\n      safeTxGas={gasEstimation}\n      closeEditModalCallback={onClose}\n    >\n      {(txParameters: TxParameters, toggleEditMode: () => unknown) => (\n        <>\n          {children}\n\n          <Container>\n            {!isSpendingLimitTx && canTxExecute && <ExecuteCheckbox onChange={setExecutionApproved} />}\n\n            {/* Tx Parameters */}\n            {/* FIXME TxParameters should be updated to be used with spending limits */}\n            {!isSpendingLimitTx && (\n              <TxParametersDetail\n                txParameters={txParameters}\n                onEdit={toggleEditMode}\n                isTransactionCreation={isCreation}\n                isTransactionExecution={doExecute}\n                isOffChainSignature={isOffChainSignature}\n              />\n            )}\n          </Container>\n\n          {!isSpendingLimitTx && (\n            <ReviewInfoText\n              gasCostFormatted={gasCostFormatted}\n              isCreation={isCreation}\n              isExecution={doExecute}\n              safeNonce={txParameters.safeNonce}\n              txEstimationExecutionStatus={txEstimationExecutionStatus}\n            />\n          )}\n\n          {/* Footer */}\n          <Modal.Footer withoutBorder={!isSpendingLimitTx && submitStatus !== ButtonStatus.LOADING}>\n            <Modal.Footer.Buttons\n              cancelButtonProps={{ onClick: onBack || onClose, text: 'Back' }}\n              confirmButtonProps={{\n                onClick: () => onSubmitClick(txParameters),\n                status: submitStatus,\n                disabled: isConfirmDisabled,\n                text: txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : submitText,\n                testId: 'submit-tx-btn',\n              }}\n            />\n          </Modal.Footer>\n        </>\n      )}\n    </EditableTxParameters>\n  )\n}\n","import { ReactElement } from 'react'\nimport styled from 'styled-components'\nimport { Icon, Divider as DividerSRC } from '@gnosis.pm/safe-react-components'\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 8px 0;\n\n  svg {\n    margin: 0 12px 0 4px;\n  }\n`\nconst StyledDivider = styled(DividerSRC)`\n  width: 100%;\n`\n\ntype Props = {\n  withArrow?: boolean\n}\n\nconst Divider = ({ withArrow }: Props): ReactElement => (\n  <Wrapper>\n    {withArrow && <Icon type=\"arrowDown\" size=\"md\" />}\n    <StyledDivider />\n  </Wrapper>\n)\n\nexport default Divider\n","import debounce from 'lodash/debounce'\nimport { useMemo, useEffect, useState, useRef } from 'react'\n\n/*\n  This code snippet is copied from https://github.com/gnbaron/use-lodash-debounce\n  with the sole intention to be able to tweak it if is needed and prevent from having\n  a new dependency for something relatively trivial\n*/\n\ninterface DebounceOptions {\n  leading: boolean\n  maxWait: number\n  trailing: boolean\n}\n\nexport const useDebounce = <T extends unknown>(value: T, delay = 0, options?: DebounceOptions): T => {\n  const previousValue = useRef(value)\n  const [current, setCurrent] = useState(value)\n  const debouncedCallback = useMemo(\n    () => debounce((val: T) => setCurrent(val), delay, options),\n    [setCurrent, delay, options],\n  )\n\n  useEffect(() => {\n    // does trigger the debounce timer initially\n    if (value !== previousValue.current) {\n      debouncedCallback(value)\n      previousValue.current = value\n      // cancel the debounced callback on clean up\n      return debouncedCallback.cancel\n    }\n  }, [debouncedCallback, value, previousValue])\n\n  return current\n}\n","export const isValidURL = (url: string, protocolsAllowed = ['https:', 'http:']): boolean => {\n  try {\n    const urlInfo = new URL(url)\n    return protocolsAllowed.includes(urlInfo.protocol)\n  } catch (error) {\n    return false\n  }\n}\n\nexport const isSameURL = (url1: string, url2: string): boolean => {\n  try {\n    const a = new URL(url1)\n    const b = new URL(url2)\n    return a.href === b.href\n  } catch (error) {\n    return false\n  }\n}\n","import { ReactElement } from 'react'\nimport { Icon, Text, Title, ModalFooterConfirmation } from '@gnosis.pm/safe-react-components'\nimport styled from 'styled-components'\nimport { ConfirmTxModalProps } from '.'\n\nconst Container = styled.div`\n  padding: ${({ theme }) => `${theme.margin.sm} ${theme.margin.lg}`};\n`\n\nconst IconText = styled.div`\n  display: flex;\n  align-items: center;\n\n  span {\n    margin-right: 4px;\n  }\n`\n\nconst FooterWrapper = styled.div`\n  margin-top: 15px;\n`\n\nexport const SafeAppLoadError = ({ onTxReject, onClose, requestId }: ConfirmTxModalProps): ReactElement => {\n  const handleTxRejection = () => {\n    onTxReject(requestId)\n    onClose()\n  }\n\n  return (\n    <Container>\n      <IconText>\n        <Icon color=\"error\" size=\"md\" type=\"info\" />\n        <Title size=\"xs\">Transaction error</Title>\n      </IconText>\n      <Text size=\"lg\">\n        This Safe App initiated a transaction which cannot be processed. Please get in touch with the developer of this\n        Safe App for more information.\n      </Text>\n\n      <FooterWrapper>\n        <ModalFooterConfirmation\n          cancelText=\"Cancel\"\n          handleCancel={() => handleTxRejection()}\n          handleOk={() => {}}\n          okDisabled={true}\n          okText=\"Submit\"\n        />\n      </FooterWrapper>\n    </Container>\n  )\n}\n","import { ReactElement } from 'react'\nimport styled from 'styled-components'\nimport { Transaction } from '@gnosis.pm/safe-apps-sdk-v1'\nimport {\n  DecodedDataResponse,\n  DecodedDataBasicParameter,\n  DecodedDataParameterValue,\n} from '@gnosis.pm/safe-react-gateway-sdk'\nimport get from 'lodash/get'\nimport { Text, CopyToClipboardBtn, IconText, FixedIcon } from '@gnosis.pm/safe-react-components'\nimport { hexToBytes } from 'web3-utils'\n\nimport { getExplorerInfo } from 'src/config'\nimport { DecodedTxDetail } from 'src/routes/safe/components/Apps/components/ConfirmTxModal'\nimport PrefixedEthHashInfo from '../PrefixedEthHashInfo'\nimport { getInteractionTitle } from 'src/routes/safe/components/Transactions/helpers/utils'\n\nconst FlexWrapper = styled.div<{ margin: number }>`\n  display: flex;\n  align-items: center;\n\n  > :nth-child(2) {\n    margin-left: ${({ margin }) => margin}px;\n  }\n`\n\nconst BasicTxInfoWrapper = styled.div`\n  margin-bottom: 15px;\n\n  > :nth-child(2) {\n    margin-bottom: 15px;\n  }\n`\n\nconst TxList = styled.div`\n  width: 100%;\n  max-height: 260px;\n  overflow-y: auto;\n  border-top: 2px solid ${({ theme }) => theme.colors.separator};\n`\n\nconst TxListItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  padding: 0 24px;\n  height: 50px;\n  border-bottom: 2px solid ${({ theme }) => theme.colors.separator};\n\n  :hover {\n    cursor: pointer;\n  }\n`\nconst ElementWrapper = styled.div`\n  margin-bottom: 15px;\n`\n\nexport const getByteLength = (data: string | string[]): number => {\n  try {\n    if (!Array.isArray(data)) {\n      data = data.split(',')\n    }\n    // Return the sum of the byte sizes of each hex string\n    return data.reduce((result, hex) => {\n      const bytes = hexToBytes(hex)\n      return result + bytes.length\n    }, 0)\n  } catch (err) {\n    return 0\n  }\n}\n\nexport const BasicTxInfo = ({\n  txRecipient,\n  txData,\n  txValue,\n  recipientName,\n}: {\n  txRecipient: string\n  txData: string\n  txValue: string\n  recipientName?: string\n}): ReactElement => {\n  return (\n    <BasicTxInfoWrapper>\n      {/* TO */}\n      <>\n        <Text size=\"lg\" strong>\n          {getInteractionTitle(txValue)}\n        </Text>\n        <PrefixedEthHashInfo\n          hash={txRecipient}\n          showAvatar\n          textSize=\"lg\"\n          showCopyBtn\n          name={recipientName}\n          explorerUrl={getExplorerInfo(txRecipient)}\n        />\n      </>\n      <>\n        {/* Data */}\n        <Text size=\"lg\" strong>\n          Data (hex encoded):\n        </Text>\n        <FlexWrapper margin={5}>\n          <Text size=\"lg\">{txData ? getByteLength(txData) : 0} bytes</Text>\n          <CopyToClipboardBtn textToCopy={txData} />\n        </FlexWrapper>\n      </>\n    </BasicTxInfoWrapper>\n  )\n}\n\nexport const getParameterElement = (parameter: DecodedDataBasicParameter, index: number): ReactElement => {\n  let valueElement\n\n  if (parameter.type === 'address') {\n    valueElement = (\n      <PrefixedEthHashInfo\n        hash={parameter.value}\n        showAvatar\n        textSize=\"lg\"\n        showCopyBtn\n        explorerUrl={getExplorerInfo(parameter.value)}\n      />\n    )\n  }\n\n  if (parameter.type.startsWith('bytes')) {\n    valueElement = (\n      <FlexWrapper margin={5}>\n        <Text size=\"lg\">{getByteLength(parameter.value)} bytes</Text>\n        <CopyToClipboardBtn textToCopy={parameter.value} />\n      </FlexWrapper>\n    )\n  }\n\n  if (!valueElement) {\n    let value = parameter.value\n    if (parameter.type.endsWith('[]')) {\n      try {\n        value = JSON.stringify(parameter.value)\n      } catch (e) {}\n    }\n    valueElement = <Text size=\"lg\">{value}</Text>\n  }\n\n  return (\n    <ElementWrapper key={index}>\n      <Text size=\"lg\" strong>\n        {parameter.name} ({parameter.type})\n      </Text>\n      {valueElement}\n    </ElementWrapper>\n  )\n}\n\nconst SingleTx = ({\n  decodedData,\n  onTxItemClick,\n}: {\n  decodedData: DecodedDataResponse | null\n  onTxItemClick: (decodedTxDetails: DecodedDataResponse) => void\n}): ReactElement | null => {\n  if (!decodedData) {\n    return null\n  }\n\n  return (\n    <TxList>\n      <TxListItem onClick={() => onTxItemClick(decodedData)}>\n        <IconText iconSize=\"sm\" iconType=\"code\" text=\"Contract interaction\" textSize=\"xl\" />\n\n        <FlexWrapper margin={20}>\n          <Text size=\"xl\">{decodedData.method}</Text>\n          <FixedIcon type=\"chevronRight\" />\n        </FlexWrapper>\n      </TxListItem>\n    </TxList>\n  )\n}\n\nconst MultiSendTx = ({\n  decodedData,\n  onTxItemClick,\n}: {\n  decodedData: DecodedDataResponse | null\n  onTxItemClick: (decodedTxDetails: DecodedDataParameterValue) => void\n}): ReactElement | null => {\n  const txs: DecodedDataParameterValue[] | undefined = get(decodedData, 'parameters[0].valueDecoded')\n\n  if (!txs) {\n    return null\n  }\n\n  return (\n    <TxList>\n      {txs.map((tx, index) => (\n        <TxListItem key={index} onClick={() => onTxItemClick(tx)}>\n          <IconText iconSize=\"sm\" iconType=\"code\" text=\"Contract interaction\" textSize=\"xl\" />\n\n          <FlexWrapper margin={20}>\n            {tx.dataDecoded && <Text size=\"xl\">{tx.dataDecoded.method}</Text>}\n            <FixedIcon type=\"chevronRight\" />\n          </FlexWrapper>\n        </TxListItem>\n      ))}\n    </TxList>\n  )\n}\n\ntype Props = {\n  txs: Transaction[]\n  decodedData: DecodedDataResponse | null\n  onTxItemClick: (decodedTxDetails: DecodedTxDetail) => void\n}\n\nexport const DecodeTxs = ({ txs, decodedData, onTxItemClick }: Props): ReactElement => {\n  return txs.length > 1 ? (\n    <MultiSendTx decodedData={decodedData} onTxItemClick={onTxItemClick} />\n  ) : (\n    <SingleTx decodedData={decodedData} onTxItemClick={onTxItemClick} />\n  )\n}\n","import { getDecodedData, DecodedDataResponse } from '@gnosis.pm/safe-react-gateway-sdk'\n\nimport { _getChainId } from 'src/config'\nimport { GATEWAY_URL } from './constants'\n\nexport const fetchTxDecoder = async (encodedData: string): Promise<DecodedDataResponse | null> => {\n  if (!encodedData?.length || encodedData === '0x') {\n    return null\n  }\n\n  try {\n    return await getDecodedData(GATEWAY_URL, _getChainId(), encodedData)\n  } catch (error) {\n    return null\n  }\n}\n","import { Operation } from '@gnosis.pm/safe-react-gateway-sdk'\nimport { Text } from '@gnosis.pm/safe-react-components'\nimport { ReactElement, useEffect, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { toBN } from 'web3-utils'\nimport { DecodedDataResponse } from '@gnosis.pm/safe-react-gateway-sdk'\n\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\nimport { getMultisendContractAddress } from 'src/logic/contracts/safeContracts'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { encodeMultiSendCall } from 'src/logic/safe/transactions/multisend'\nimport { getExplorerInfo, getNativeCurrency } from 'src/config'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport { lg, md } from 'src/theme/variables'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { BasicTxInfo, DecodeTxs } from 'src/components/DecodeTxs'\nimport { fetchTxDecoder } from 'src/utils/decodeTx'\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport Block from 'src/components/layout/Block'\nimport Hairline from 'src/components/layout/Hairline'\nimport Divider from 'src/components/Divider'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\n\nimport { ConfirmTxModalProps, DecodedTxDetail } from '.'\nimport { grantedSelector } from 'src/routes/safe/container/selector'\nimport { TxModalWrapper } from 'src/routes/safe/components/Transactions/helpers/TxModalWrapper'\n\nconst Container = styled.div`\n  max-width: 480px;\n  padding: ${md} ${lg} 0;\n`\n\nconst DecodeTxsWrapper = styled.div`\n  margin: 24px -24px;\n`\n\nconst StyledBlock = styled(Block)`\n  background-color: ${({ theme }) => theme.colors.separator};\n  width: fit-content;\n  padding: 5px 10px;\n  border-radius: 3px;\n  margin: 4px 0 0 40px;\n\n  display: flex;\n\n  > :nth-child(1) {\n    margin-right: 5px;\n  }\n`\n\ntype Props = ConfirmTxModalProps & {\n  onReject: () => void\n  showDecodedTxData: (decodedTxDetails: DecodedTxDetail) => void\n  hidden: boolean // used to prevent re-rendering the modal each time a tx is inspected\n}\n\nconst parseTxValue = (value: string | number): string => {\n  return toBN(value).toString()\n}\n\nexport const ReviewConfirm = ({\n  app,\n  txs,\n  safeAddress,\n  ethBalance,\n  safeName,\n  hidden,\n  onUserConfirm,\n  onClose,\n  onReject,\n  requestId,\n  showDecodedTxData,\n}: Props): ReactElement => {\n  const isMultiSend = txs.length > 1\n  const [decodedData, setDecodedData] = useState<DecodedDataResponse | null>(null)\n  const dispatch = useDispatch()\n  const nativeCurrency = getNativeCurrency()\n  const explorerUrl = getExplorerInfo(safeAddress)\n  const isOwner = useSelector(grantedSelector)\n\n  const txRecipient: string | undefined = useMemo(\n    () => (isMultiSend ? getMultisendContractAddress() : txs[0]?.to),\n    [txs, isMultiSend],\n  )\n  const txData: string | undefined = useMemo(\n    () => (isMultiSend ? encodeMultiSendCall(txs) : txs[0]?.data),\n    [txs, isMultiSend],\n  )\n  const txValue: string | undefined = useMemo(\n    () => (isMultiSend ? '0' : parseTxValue(txs[0]?.value)),\n    [txs, isMultiSend],\n  )\n  const operation = useMemo(() => (isMultiSend ? Operation.DELEGATE : Operation.CALL), [isMultiSend])\n\n  // Decode tx data.\n  useEffect(() => {\n    const decodeTxData = async () => {\n      const res = await fetchTxDecoder(txData)\n      setDecodedData(res)\n    }\n\n    decodeTxData()\n  }, [txData])\n\n  const handleUserConfirmation = (safeTxHash: string): void => {\n    onUserConfirm(safeTxHash, requestId)\n    onClose()\n  }\n\n  const confirmTransactions = (txParameters: TxParameters, delayExecution: boolean) => {\n    dispatch(\n      createTransaction(\n        {\n          safeAddress,\n          to: txRecipient,\n          valueInWei: txValue,\n          txData,\n          operation,\n          origin: app.id,\n          navigateToTransactionsTab: false,\n          txNonce: txParameters.safeNonce,\n          safeTxGas: txParameters.safeTxGas,\n          ethParameters: txParameters,\n          notifiedTransaction: TX_NOTIFICATION_TYPES.STANDARD_TX,\n          delayExecution,\n        },\n        handleUserConfirmation,\n        onReject,\n      ),\n    )\n  }\n\n  return (\n    <TxModalWrapper\n      txData={txData}\n      txValue={txValue}\n      operation={operation}\n      onSubmit={confirmTransactions}\n      isConfirmDisabled={!isOwner}\n      onBack={onReject}\n    >\n      <div hidden={hidden}>\n        <ModalHeader title={app.name} iconUrl={app.iconUrl} onClose={onReject} />\n\n        <Hairline />\n\n        <Container>\n          {/* Safe */}\n          <PrefixedEthHashInfo name={safeName} hash={safeAddress} showAvatar showCopyBtn explorerUrl={explorerUrl} />\n          <StyledBlock>\n            <Text size=\"md\">Balance:</Text>\n            <Text size=\"md\" strong>{`${ethBalance} ${nativeCurrency.symbol}`}</Text>\n          </StyledBlock>\n\n          <Divider withArrow />\n\n          {/* Txs decoded */}\n          <BasicTxInfo\n            txRecipient={txRecipient}\n            txData={txData}\n            txValue={fromTokenUnit(txValue, nativeCurrency.decimals)}\n          />\n\n          <DecodeTxsWrapper>\n            <DecodeTxs txs={txs} decodedData={decodedData} onTxItemClick={showDecodedTxData} />\n          </DecodeTxsWrapper>\n\n          {!isMultiSend && <Divider />}\n        </Container>\n      </div>\n    </TxModalWrapper>\n  )\n}\n","import styled from 'styled-components'\nimport IconButton from '@material-ui/core/IconButton'\nimport Close from '@material-ui/icons/Close'\nimport { Icon } from '@gnosis.pm/safe-react-components'\n\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { md, lg } from 'src/theme/variables'\nimport Row from 'src/components/layout/Row'\n\nconst StyledParagraph = styled(Paragraph)`\n  && {\n    font-size: ${lg};\n    white-space: nowrap;\n    max-width: 370px;\n    overflow: hidden;\n  }\n`\nconst IconImg = styled.img`\n  width: 20px;\n  margin-right: 10px;\n`\nconst TitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst StyledRow = styled(Row)`\n  padding: ${md} ${lg};\n  justify-content: space-between;\n  box-sizing: border-box;\n  max-height: 75px;\n`\n\nconst StyledClose = styled(Close)`\n  height: 35px;\n  width: 35px;\n`\n\nconst GoBackWrapper = styled.div`\n  margin-right: 15px;\n`\n\ntype Props = {\n  title: string\n  goBack?: () => void\n  iconUrl?: string\n  onClose?: () => void\n}\n\nconst ModalTitle = ({ goBack, iconUrl, title, onClose }: Props): React.ReactElement => {\n  return (\n    <StyledRow align=\"center\" grow>\n      <TitleWrapper>\n        {goBack && (\n          <GoBackWrapper>\n            <IconButton onClick={goBack}>\n              <Icon type=\"arrowLeft\" size=\"md\" />\n            </IconButton>\n          </GoBackWrapper>\n        )}\n        {iconUrl && <IconImg alt={title} src={iconUrl} />}\n        <StyledParagraph noMargin weight=\"bolder\" title={title}>\n          {title}\n        </StyledParagraph>\n      </TitleWrapper>\n      <IconButton disableRipple onClick={onClose}>\n        <StyledClose />\n      </IconButton>\n    </StyledRow>\n  )\n}\n\nexport default ModalTitle\n","import { ReactElement } from 'react'\nimport styled from 'styled-components'\nimport { DecodedDataParameterValue, DecodedDataResponse } from '@gnosis.pm/safe-react-gateway-sdk'\n\nimport { getNativeCurrency } from 'src/config'\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport { md, lg } from 'src/theme/variables'\nimport ModalTitle from 'src/components/ModalTitle'\nimport Hairline from 'src/components/layout/Hairline'\nimport { BasicTxInfo, getParameterElement } from 'src/components/DecodeTxs'\n\nconst Container = styled.div`\n  max-width: 480px;\n  padding: ${md} ${lg};\n  word-break: break-word;\n`\n\nfunction isDataDecodedParameterValue(arg: any): arg is DecodedDataParameterValue {\n  return arg.operation !== undefined\n}\n\ntype Props = {\n  hideDecodedTxData: () => void\n  onClose: () => void\n  decodedTxData: DecodedDataParameterValue | DecodedDataResponse\n}\n\nexport const DecodedTxDetail = ({ hideDecodedTxData, onClose, decodedTxData: tx }: Props): ReactElement => {\n  const nativeCurrency = getNativeCurrency()\n  let body\n  // If we are dealing with a multiSend\n  // decodedTxData is of type DataDecodedParameter\n  if (isDataDecodedParameterValue(tx)) {\n    const txValue = fromTokenUnit(tx.value, nativeCurrency.decimals)\n\n    body = (\n      <>\n        <BasicTxInfo txRecipient={tx.to} txData={tx.data} txValue={txValue} />\n        {tx.dataDecoded?.parameters.map((p, index) => getParameterElement(p, index))}\n      </>\n    )\n  } else {\n    // If we are dealing with a single tx\n    // decodedTxData is of type DecodedData\n    body = <>{tx.parameters.map((p, index) => getParameterElement(p, index))}</>\n  }\n\n  return (\n    <>\n      <ModalTitle\n        title={(tx as DecodedDataParameterValue).dataDecoded?.method || (tx as DecodedDataResponse).method}\n        onClose={onClose}\n        goBack={hideDecodedTxData}\n      />\n\n      <Hairline />\n\n      <Container>{body}</Container>\n    </>\n  )\n}\n","import { ReactElement, useState } from 'react'\nimport { Transaction } from '@gnosis.pm/safe-apps-sdk-v1'\nimport { RequestId } from '@gnosis.pm/safe-apps-sdk'\nimport { DecodedDataParameterValue, DecodedDataResponse } from '@gnosis.pm/safe-react-gateway-sdk'\n\nimport Modal from 'src/components/Modal'\nimport { SafeApp } from 'src/routes/safe/components/Apps/types'\nimport { TransactionParams } from 'src/routes/safe/components/Apps/components/AppFrame'\nimport { mustBeEthereumAddress } from 'src/components/forms/validator'\nimport { SafeAppLoadError } from './SafeAppLoadError'\nimport { ReviewConfirm } from './ReviewConfirm'\nimport { DecodedTxDetail } from './DecodedTxDetail'\n\nexport type ConfirmTxModalProps = {\n  isOpen: boolean\n  app: SafeApp\n  txs: Transaction[]\n  params?: TransactionParams\n  safeAddress: string\n  safeName: string\n  requestId: RequestId\n  ethBalance: string\n  onUserConfirm: (safeTxHash: string, requestId: RequestId) => void\n  onTxReject: (requestId: RequestId) => void\n  onClose: () => void\n}\n\nconst isTxValid = (t: Transaction): boolean => {\n  if (!['string', 'number'].includes(typeof t.value)) {\n    return false\n  }\n\n  if (typeof t.value === 'string' && !/^(0x)?[0-9a-f]+$/i.test(t.value)) {\n    return false\n  }\n\n  const isAddressValid = mustBeEthereumAddress(t.to) === undefined\n  return isAddressValid && !!t.data && typeof t.data === 'string'\n}\n\nexport type DecodedTxDetail = DecodedDataParameterValue | DecodedDataResponse | undefined\n\nexport const ConfirmTxModal = (props: ConfirmTxModalProps): ReactElement => {\n  const [decodedTxDetails, setDecodedTxDetails] = useState<DecodedTxDetail>()\n  const invalidTransactions = !props.txs.length || props.txs.some((t) => !isTxValid(t))\n\n  const showDecodedTxData = setDecodedTxDetails\n  const hideDecodedTxData = () => setDecodedTxDetails(undefined)\n\n  const rejectTransaction = () => {\n    props.onClose()\n    props.onTxReject(props.requestId)\n  }\n\n  const closeDecodedTxDetail = () => {\n    hideDecodedTxData()\n    rejectTransaction()\n  }\n\n  if (invalidTransactions) {\n    return (\n      <Modal description=\"Safe App transaction\" title=\"Safe App transaction\" open={props.isOpen}>\n        <SafeAppLoadError {...props} />\n      </Modal>\n    )\n  }\n\n  return (\n    <Modal description=\"Safe App transaction\" title=\"Safe App transaction\" open={props.isOpen}>\n      {decodedTxDetails && (\n        <DecodedTxDetail\n          onClose={closeDecodedTxDetail}\n          hideDecodedTxData={hideDecodedTxData}\n          decodedTxData={decodedTxDetails}\n        />\n      )}\n\n      <ReviewConfirm\n        {...props}\n        onReject={rejectTransaction}\n        showDecodedTxData={showDecodedTxData}\n        hidden={!!decodedTxDetails}\n      />\n    </Modal>\n  )\n}\n","import { MutableRefObject, useEffect, useState } from 'react'\nimport {\n  getSDKVersion,\n  SDKMessageEvent,\n  MethodToResponse,\n  Methods,\n  ErrorResponse,\n  MessageFormatter,\n  RequestId,\n} from '@gnosis.pm/safe-apps-sdk'\nimport { trackError, Errors } from 'src/logic/exceptions/CodedException'\nimport { SafeApp } from './types'\n\ntype MessageHandler = (\n  msg: SDKMessageEvent,\n) => void | MethodToResponse[Methods] | ErrorResponse | Promise<MethodToResponse[Methods] | ErrorResponse | void>\n\ntype LegacyMethods = 'getEnvInfo'\ntype SDKMethods = Methods | LegacyMethods\n\nclass AppCommunicator {\n  private iframeRef: MutableRefObject<HTMLIFrameElement | null>\n  private handlers = new Map<SDKMethods, MessageHandler>()\n  private app: SafeApp\n\n  constructor(iframeRef: MutableRefObject<HTMLIFrameElement | null>, app: SafeApp) {\n    this.iframeRef = iframeRef\n    this.app = app\n\n    window.addEventListener('message', this.handleIncomingMessage)\n  }\n\n  on = (method: SDKMethods, handler: MessageHandler): void => {\n    this.handlers.set(method, handler)\n  }\n\n  private isValidMessage = (msg: SDKMessageEvent): boolean => {\n    // @ts-expect-error .parent doesn't exist on some possible types\n    const sentFromIframe = msg.source.parent === window.parent\n    const knownMethod = Object.values(Methods).includes(msg.data.method)\n\n    return sentFromIframe && knownMethod\n  }\n\n  private canHandleMessage = (msg: SDKMessageEvent): boolean => {\n    return Boolean(this.handlers.get(msg.data.method))\n  }\n\n  send = (data: unknown, requestId: RequestId, error = false): void => {\n    const sdkVersion = getSDKVersion()\n    const msg = error\n      ? MessageFormatter.makeErrorResponse(requestId, data as string, sdkVersion)\n      : MessageFormatter.makeResponse(requestId, data, sdkVersion)\n\n    this.iframeRef.current?.contentWindow?.postMessage(msg, '*')\n  }\n\n  handleIncomingMessage = async (msg: SDKMessageEvent): Promise<void> => {\n    const validMessage = this.isValidMessage(msg)\n    const hasHandler = this.canHandleMessage(msg)\n\n    if (validMessage && hasHandler) {\n      const handler = this.handlers.get(msg.data.method)\n      try {\n        // @ts-expect-error Handler existence is checked in this.canHandleMessage\n        const response = await handler(msg)\n\n        // If response is not returned, it means the response will be send somewhere else\n        if (typeof response !== 'undefined') {\n          this.send(response, msg.data.id)\n        }\n      } catch (err) {\n        this.send(err.message, msg.data.id, true)\n        trackError(Errors._901, err.message, {\n          contexts: {\n            safeApp: this.app,\n            request: msg.data,\n          },\n        })\n      }\n    }\n  }\n\n  clear = (): void => {\n    window.removeEventListener('message', this.handleIncomingMessage)\n  }\n}\n\nconst useAppCommunicator = (\n  iframeRef: MutableRefObject<HTMLIFrameElement | null>,\n  app?: SafeApp,\n): AppCommunicator | undefined => {\n  const [communicator, setCommunicator] = useState<AppCommunicator | undefined>(undefined)\n  useEffect(() => {\n    let communicatorInstance\n    const initCommunicator = (iframeRef: MutableRefObject<HTMLIFrameElement>, app: SafeApp) => {\n      communicatorInstance = new AppCommunicator(iframeRef, app)\n      setCommunicator(communicatorInstance)\n    }\n\n    if (app) {\n      initCommunicator(iframeRef as MutableRefObject<HTMLIFrameElement>, app)\n    }\n\n    return () => {\n      communicatorInstance?.clear()\n    }\n  }, [app, iframeRef])\n\n  return communicator\n}\n\nexport { useAppCommunicator }\n","import { useState, useCallback } from 'react'\n\ntype StateType = { isOpen: boolean; message: string; requestId: string }\n\nconst INITIAL_MODAL_STATE: StateType = {\n  isOpen: false,\n  message: '',\n  requestId: '',\n}\n\ntype ReturnType = [StateType, (message: string, requestId: string) => void, () => void]\n\nexport const useSignMessageModal = (): ReturnType => {\n  const [signMessageModalState, setSignMessageModalState] = useState<StateType>(INITIAL_MODAL_STATE)\n\n  const openSignMessageModal = useCallback((message: string, requestId: string) => {\n    setSignMessageModalState({\n      ...INITIAL_MODAL_STATE,\n      isOpen: true,\n      message,\n      requestId,\n    })\n  }, [])\n\n  const closeSignMessageModal = useCallback(() => {\n    setSignMessageModalState(INITIAL_MODAL_STATE)\n  }, [])\n\n  return [signMessageModalState, openSignMessageModal, closeSignMessageModal]\n}\n","import { Operation } from '@gnosis.pm/safe-react-gateway-sdk'\nimport { Icon, Text } from '@gnosis.pm/safe-react-components'\nimport MuiTextField from '@material-ui/core/TextField'\nimport { ReactElement } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\n\nimport ModalTitle from 'src/components/ModalTitle'\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { getExplorerInfo, getNativeCurrency } from 'src/config'\nimport { lg, md } from 'src/theme/variables'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { BasicTxInfo } from 'src/components/DecodeTxs'\nimport Block from 'src/components/layout/Block'\nimport Divider from 'src/components/Divider'\nimport { SignMessageModalProps } from '.'\nimport Hairline from 'src/components/layout/Hairline'\nimport { grantedSelector } from 'src/routes/safe/container/selector'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { TxModalWrapper } from 'src/routes/safe/components/Transactions/helpers/TxModalWrapper'\n\nconst Container = styled.div`\n  max-width: 480px;\n  padding: ${md} ${lg} 0;\n`\n\nconst StyledBlock = styled(Block)`\n  background-color: ${({ theme }) => theme.colors.separator};\n  width: fit-content;\n  padding: 5px 10px;\n  border-radius: 3px;\n  margin: 4px 0 0 40px;\n\n  display: flex;\n\n  > :nth-child(1) {\n    margin-right: 5px;\n  }\n`\n\nconst MessageTextArea = styled(MuiTextField)`\n  &.MuiFormControl-root {\n    padding-bottom: ${({ theme }) => theme.margin.md};\n  }\n`\n\nconst InfoMessage = styled(Paragraph)`\n  display: flex;\n  align-items: center;\n\n  > span:first-child {\n    margin-right: ${({ theme }) => theme.margin.xs};\n  }\n`\n\ntype Props = Omit<SignMessageModalProps, 'message' | 'isOpen'> & {\n  txData: string\n  txRecipient: string\n  utf8Message: string\n}\n\nexport const ReviewMessage = ({\n  app,\n  safeAddress,\n  ethBalance,\n  safeName,\n  onUserConfirm,\n  onClose,\n  onTxReject,\n  requestId,\n  utf8Message,\n  txData,\n  txRecipient,\n}: Props): ReactElement => {\n  const dispatch = useDispatch()\n  const explorerUrl = getExplorerInfo(safeAddress)\n  const nativeCurrency = getNativeCurrency()\n  const isOwner = useSelector(grantedSelector)\n\n  const handleTxRejection = () => {\n    onTxReject(requestId)\n    onClose()\n  }\n\n  const handleUserConfirmation = (safeTxHash: string): void => {\n    onUserConfirm(safeTxHash, requestId)\n    onClose()\n  }\n\n  const confirmTransactions = (txParameters: TxParameters, delayExecution: boolean) => {\n    dispatch(\n      createTransaction(\n        {\n          safeAddress,\n          to: txRecipient,\n          valueInWei: '0',\n          txData,\n          operation: Operation.DELEGATE,\n          origin: app.id,\n          navigateToTransactionsTab: false,\n          txNonce: txParameters.safeNonce,\n          safeTxGas: txParameters.safeTxGas,\n          ethParameters: txParameters,\n          notifiedTransaction: TX_NOTIFICATION_TYPES.STANDARD_TX,\n          delayExecution,\n        },\n        handleUserConfirmation,\n        handleTxRejection,\n      ),\n    )\n  }\n\n  return (\n    <TxModalWrapper\n      txData={txData}\n      txTo={txRecipient}\n      onSubmit={confirmTransactions}\n      onBack={handleTxRejection}\n      operation={Operation.DELEGATE}\n      isConfirmDisabled={!isOwner}\n    >\n      <ModalTitle title={app.name} iconUrl={app.iconUrl} onClose={handleTxRejection} />\n\n      <Hairline />\n\n      <Container>\n        {/* Safe */}\n        <PrefixedEthHashInfo name={safeName} hash={safeAddress} showAvatar showCopyBtn explorerUrl={explorerUrl} />\n        <StyledBlock>\n          <Text size=\"md\">Balance:</Text>\n          <Text size=\"md\" strong>{`${ethBalance} ${nativeCurrency.symbol}`}</Text>\n        </StyledBlock>\n\n        <Divider withArrow />\n\n        <BasicTxInfo txRecipient={txRecipient} txData={txData} txValue=\"0\" recipientName=\"SignMessageLib\" />\n\n        <Text size=\"lg\" strong>\n          Signing message:\n        </Text>\n        <MessageTextArea\n          rows=\"2\"\n          multiline\n          disabled\n          fullWidth\n          label=\"Message to sign\"\n          inputProps={{\n            type: 'text',\n            value: utf8Message,\n            name: 'Message to sign',\n            onChange: () => {},\n            placeholder: '',\n          }}\n          InputProps={{\n            disableUnderline: true,\n          }}\n        />\n        <InfoMessage>\n          <Icon size=\"md\" type=\"info\" color=\"warning\" />\n          Signing a message with the Gnosis Safe requires a transaction on the blockchain\n        </InfoMessage>\n      </Container>\n    </TxModalWrapper>\n  )\n}\n","import { RequestId } from '@gnosis.pm/safe-apps-sdk'\nimport { ReactElement } from 'react'\nimport { useSelector } from 'react-redux'\nimport { hexToUtf8, isHexStrict } from 'web3-utils'\n\nimport { getWeb3ReadOnly } from 'src/logic/wallets/getWeb3'\nimport { ZERO_ADDRESS } from 'src/logic/wallets/ethAddresses'\nimport { getSignMessageLibContractInstance, getSignMessageLibAddress } from 'src/logic/contracts/safeContracts'\nimport Modal from 'src/components/Modal'\nimport { SafeApp } from 'src/routes/safe/components/Apps/types'\nimport { ReviewMessage } from './ReviewMessage'\nimport { currentChainId } from 'src/logic/config/store/selectors'\n\nexport type SignMessageModalProps = {\n  isOpen: boolean\n  app: SafeApp\n  message: string\n  safeAddress: string\n  safeName: string\n  requestId: RequestId\n  ethBalance: string\n  onUserConfirm: (safeTxHash: string, requestId: RequestId) => void\n  onTxReject: (requestId: RequestId) => void\n  onClose: () => void\n}\n\nconst convertToHumanReadableMessage = (message: string): string => {\n  const isHex = isHexStrict(message.toString())\n\n  let humanReadableMessage = message\n  if (isHex) {\n    try {\n      humanReadableMessage = hexToUtf8(message)\n    } catch (e) {\n      // do nothing\n    }\n  }\n\n  return humanReadableMessage\n}\n\nexport const SignMessageModal = ({ message, isOpen, ...rest }: SignMessageModalProps): ReactElement => {\n  const web3 = getWeb3ReadOnly()\n  const networkId = useSelector(currentChainId)\n  const txRecipient = getSignMessageLibAddress(networkId) || ZERO_ADDRESS\n  const txData = getSignMessageLibContractInstance(web3, networkId)\n    .methods.signMessage(web3.eth.accounts.hashMessage(message))\n    .encodeABI()\n\n  const readableData = convertToHumanReadableMessage(message)\n\n  return (\n    <Modal description=\"Safe App transaction\" title=\"Safe App transaction\" open={isOpen}>\n      <ReviewMessage {...rest} txRecipient={txRecipient} txData={txData} utf8Message={readableData} />\n    </Modal>\n  )\n}\n","import { ReactElement, useState, useRef, useCallback, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Loader, Card, Title } from '@gnosis.pm/safe-react-components'\nimport {\n  GetBalanceParams,\n  GetTxBySafeTxHashParams,\n  MethodToResponse,\n  RPCPayload,\n  Methods,\n  SignMessageParams,\n  RequestId,\n} from '@gnosis.pm/safe-apps-sdk'\n\nimport { useSelector } from 'react-redux'\nimport { INTERFACE_MESSAGES, Transaction, LowercaseNetworks } from '@gnosis.pm/safe-apps-sdk-v1'\nimport Web3 from 'web3'\n\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { getChainInfo, getSafeAppsRpcServiceUrl, getTxServiceUrl } from 'src/config'\nimport { isSameURL } from 'src/utils/url'\nimport { useAnalytics, SAFE_EVENTS } from 'src/utils/googleAnalytics'\nimport { LoadingContainer } from 'src/components/LoaderContainer/index'\nimport { SAFE_POLLING_INTERVAL } from 'src/utils/constants'\nimport { ConfirmTxModal } from './ConfirmTxModal'\nimport { useIframeMessageHandler } from '../hooks/useIframeMessageHandler'\nimport { getAppInfoFromUrl, getEmptySafeApp, getLegacyChainName } from '../utils'\nimport { SafeApp } from '../types'\nimport { useAppCommunicator } from '../communicator'\nimport { fetchTokenCurrenciesBalances } from 'src/logic/safe/api/fetchTokenCurrenciesBalances'\nimport { fetchSafeTransaction } from 'src/logic/safe/transactions/api/fetchSafeTransaction'\nimport { logError, Errors } from 'src/logic/exceptions/CodedException'\nimport { addressBookEntryName } from 'src/logic/addressBook/store/selectors'\nimport { useSignMessageModal } from '../hooks/useSignMessageModal'\nimport { SignMessageModal } from './SignMessageModal'\n\nconst AppWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  margin: 0 -16px;\n`\n\nconst StyledCard = styled(Card)`\n  flex-grow: 1;\n  padding: 0;\n  border-radius: 0;\n`\n\nconst StyledIframe = styled.iframe<{ isLoading: boolean }>`\n  height: 100%;\n  width: 100%;\n  overflow: auto;\n  box-sizing: border-box;\n  display: ${({ isLoading }) => (isLoading ? 'none' : 'block')};\n`\n\nexport type TransactionParams = {\n  safeTxGas?: number\n}\n\ntype ConfirmTransactionModalState = {\n  isOpen: boolean\n  txs: Transaction[]\n  requestId: RequestId\n  params?: TransactionParams\n}\n\ntype Props = {\n  appUrl: string\n}\n\nconst APP_LOAD_ERROR_TIMEOUT = 30000\n\nconst INITIAL_CONFIRM_TX_MODAL_STATE: ConfirmTransactionModalState = {\n  isOpen: false,\n  txs: [],\n  requestId: '',\n  params: undefined,\n}\n\nconst safeAppWeb3Provider = new Web3.providers.HttpProvider(getSafeAppsRpcServiceUrl(), {\n  timeout: 10_000,\n})\n\nconst URL_NOT_PROVIDED_ERROR = 'App url No provided or it is invalid.'\nconst APP_LOAD_ERROR = 'There was an error loading the Safe App. There might be a problem with the App provider.'\n\nconst AppFrame = ({ appUrl }: Props): ReactElement => {\n  const { address: safeAddress, ethBalance, owners, threshold } = useSelector(currentSafe)\n  const { nativeCurrency, chainId, chainName, shortName } = getChainInfo()\n  const safeName = useSelector((state) => addressBookEntryName(state, { address: safeAddress }))\n  const { trackEvent } = useAnalytics()\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n  const [confirmTransactionModal, setConfirmTransactionModal] =\n    useState<ConfirmTransactionModalState>(INITIAL_CONFIRM_TX_MODAL_STATE)\n  const [appIsLoading, setAppIsLoading] = useState<boolean>(true)\n  const [safeApp, setSafeApp] = useState<SafeApp>(() => getEmptySafeApp(appUrl))\n  const [signMessageModalState, openSignMessageModal, closeSignMessageModal] = useSignMessageModal()\n  const timer = useRef<number>()\n  const [isLoadingSlow, setIsLoadingSlow] = useState<boolean>(false)\n  const errorTimer = useRef<number>()\n  const [, setAppLoadError] = useState<boolean>(false)\n\n  useEffect(() => {\n    const clearTimeouts = () => {\n      clearTimeout(timer.current)\n      clearTimeout(errorTimer.current)\n    }\n\n    if (appIsLoading) {\n      timer.current = window.setTimeout(() => {\n        setIsLoadingSlow(true)\n      }, SAFE_POLLING_INTERVAL)\n      errorTimer.current = window.setTimeout(() => {\n        setAppLoadError(() => {\n          throw Error(APP_LOAD_ERROR)\n        })\n      }, APP_LOAD_ERROR_TIMEOUT)\n    } else {\n      clearTimeouts()\n      setIsLoadingSlow(false)\n    }\n\n    return () => {\n      clearTimeouts()\n    }\n  }, [appIsLoading])\n\n  const openConfirmationModal = useCallback(\n    (txs: Transaction[], params: TransactionParams | undefined, requestId: RequestId) =>\n      setConfirmTransactionModal({\n        isOpen: true,\n        txs,\n        requestId,\n        params,\n      }),\n    [setConfirmTransactionModal],\n  )\n  const closeConfirmationModal = useCallback(\n    () => setConfirmTransactionModal(INITIAL_CONFIRM_TX_MODAL_STATE),\n    [setConfirmTransactionModal],\n  )\n\n  const { sendMessageToIframe } = useIframeMessageHandler(\n    safeApp,\n    openConfirmationModal,\n    closeConfirmationModal,\n    iframeRef,\n  )\n\n  const onIframeLoad = useCallback(() => {\n    const iframe = iframeRef.current\n    if (!iframe || !isSameURL(iframe.src, appUrl as string)) {\n      return\n    }\n\n    setAppIsLoading(false)\n    sendMessageToIframe({\n      messageId: INTERFACE_MESSAGES.ON_SAFE_INFO,\n      data: {\n        safeAddress: safeAddress as string,\n        // FIXME `network` is deprecated. we should find how many apps are still using it\n        network: getLegacyChainName(chainName, chainId).toLowerCase() as LowercaseNetworks,\n        ethBalance: ethBalance as string,\n      },\n    })\n  }, [chainName, chainId, ethBalance, safeAddress, appUrl, sendMessageToIframe])\n\n  const communicator = useAppCommunicator(iframeRef, safeApp)\n\n  useEffect(() => {\n    communicator?.on('getEnvInfo', () => ({\n      txServiceUrl: getTxServiceUrl(),\n    }))\n\n    communicator?.on(Methods.getTxBySafeTxHash, async (msg) => {\n      const { safeTxHash } = msg.data.params as GetTxBySafeTxHashParams\n\n      const tx = await fetchSafeTransaction(safeTxHash)\n\n      return tx\n    })\n\n    communicator?.on(Methods.getSafeInfo, () => ({\n      safeAddress,\n      // FIXME `network` is deprecated. we should find how many apps are still using it\n      // Apps using this property expect this to be in UPPERCASE\n      network: getLegacyChainName(chainName, chainId).toUpperCase(),\n      chainId: parseInt(chainId, 10),\n      owners,\n      threshold,\n    }))\n\n    communicator?.on(Methods.getSafeBalances, async (msg) => {\n      const { currency = 'usd' } = msg.data.params as GetBalanceParams\n\n      const balances = await fetchTokenCurrenciesBalances({ safeAddress, selectedCurrency: currency })\n\n      return balances\n    })\n\n    communicator?.on(Methods.rpcCall, async (msg) => {\n      const params = msg.data.params as RPCPayload\n\n      try {\n        const response = new Promise<MethodToResponse['rpcCall']>((resolve, reject) => {\n          safeAppWeb3Provider.send(\n            {\n              jsonrpc: '2.0',\n              method: params.call,\n              params: params.params,\n              id: '1',\n            },\n            (err, res) => {\n              if (err || res?.error) {\n                reject(err || res?.error)\n              }\n\n              resolve(res?.result)\n            },\n          )\n        })\n\n        return response\n      } catch (err) {\n        return err\n      }\n    })\n\n    communicator?.on(Methods.sendTransactions, (msg) => {\n      // @ts-expect-error explore ways to fix this\n      openConfirmationModal(msg.data.params.txs as Transaction[], msg.data.params.params, msg.data.id)\n    })\n\n    communicator?.on(Methods.signMessage, async (msg) => {\n      const { message } = msg.data.params as SignMessageParams\n\n      openSignMessageModal(message, msg.data.id)\n    })\n\n    communicator?.on(Methods.getChainInfo, async () => {\n      return {\n        chainName,\n        chainId,\n        shortName,\n        nativeCurrency,\n      }\n    })\n  }, [\n    communicator,\n    openConfirmationModal,\n    safeAddress,\n    owners,\n    threshold,\n    openSignMessageModal,\n    nativeCurrency,\n    chainId,\n    chainName,\n    shortName,\n  ])\n\n  const onUserTxConfirm = (safeTxHash: string, requestId: RequestId) => {\n    // Safe Apps SDK V1 Handler\n    sendMessageToIframe(\n      { messageId: INTERFACE_MESSAGES.TRANSACTION_CONFIRMED, data: { safeTxHash } },\n      confirmTransactionModal.requestId,\n    )\n\n    // Safe Apps SDK V2 Handler\n    communicator?.send({ safeTxHash }, requestId as string)\n  }\n\n  const onTxReject = (requestId: RequestId) => {\n    // Safe Apps SDK V1 Handler\n    sendMessageToIframe(\n      { messageId: INTERFACE_MESSAGES.TRANSACTION_REJECTED, data: {} },\n      confirmTransactionModal.requestId,\n    )\n\n    // Safe Apps SDK V2 Handler\n    communicator?.send('Transaction was rejected', requestId as string, true)\n  }\n\n  useEffect(() => {\n    if (!appUrl) {\n      throw Error(URL_NOT_PROVIDED_ERROR)\n    }\n\n    const loadApp = async () => {\n      try {\n        const app = await getAppInfoFromUrl(appUrl)\n        setSafeApp(app)\n      } catch (err) {\n        logError(Errors._900, `${appUrl}, ${err.message}`)\n      }\n    }\n\n    loadApp()\n  }, [appUrl])\n\n  //track GA\n  useEffect(() => {\n    if (safeApp) {\n      trackEvent({ ...SAFE_EVENTS.SAFE_APP, label: safeApp.name })\n    }\n  }, [safeApp, trackEvent])\n\n  return (\n    <AppWrapper>\n      <StyledCard>\n        {appIsLoading && (\n          <LoadingContainer style={{ flexDirection: 'column' }}>\n            {isLoadingSlow && <Title size=\"xs\">The Safe App is taking too long to load, consider refreshing.</Title>}\n            <Loader size=\"md\" />\n          </LoadingContainer>\n        )}\n\n        <StyledIframe\n          isLoading={appIsLoading}\n          frameBorder=\"0\"\n          id={`iframe-${appUrl}`}\n          ref={iframeRef}\n          src={appUrl}\n          title={safeApp.name}\n          onLoad={onIframeLoad}\n          allow=\"camera\"\n        />\n      </StyledCard>\n\n      <ConfirmTxModal\n        isOpen={confirmTransactionModal.isOpen}\n        app={safeApp as SafeApp}\n        safeAddress={safeAddress}\n        ethBalance={ethBalance as string}\n        safeName={safeName as string}\n        txs={confirmTransactionModal.txs}\n        onClose={closeConfirmationModal}\n        requestId={confirmTransactionModal.requestId}\n        onUserConfirm={onUserTxConfirm}\n        params={confirmTransactionModal.params}\n        onTxReject={onTxReject}\n      />\n\n      <SignMessageModal\n        isOpen={signMessageModalState.isOpen}\n        app={safeApp as SafeApp}\n        safeAddress={safeAddress}\n        ethBalance={ethBalance as string}\n        safeName={safeName as string}\n        onClose={closeSignMessageModal}\n        requestId={signMessageModalState.requestId}\n        message={signMessageModalState.message}\n        onUserConfirm={onUserTxConfirm}\n        onTxReject={onTxReject}\n      />\n    </AppWrapper>\n  )\n}\n\nexport default AppFrame\n","import { useSnackbar } from 'notistack'\nimport {\n  InterfaceMessageIds,\n  InterfaceMessageToPayload,\n  SDKMessageIds,\n  SDKMessageToPayload,\n  SDK_MESSAGES,\n  INTERFACE_MESSAGES,\n  RequestId,\n  Transaction,\n  LowercaseNetworks,\n} from '@gnosis.pm/safe-apps-sdk-v1'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useEffect, useCallback, MutableRefObject } from 'react'\n\nimport { getChainInfo, getTxServiceUrl } from 'src/config/'\nimport { currentSafeWithNames } from 'src/logic/safe/store/selectors'\nimport { TransactionParams } from '../components/AppFrame'\nimport { SafeApp } from 'src/routes/safe/components/Apps/types'\nimport { getLegacyChainName } from '../utils'\n\ntype InterfaceMessageProps<T extends InterfaceMessageIds> = {\n  messageId: T\n  data: InterfaceMessageToPayload[T]\n}\n\ntype ReturnType = {\n  sendMessageToIframe: <T extends InterfaceMessageIds>(message: InterfaceMessageProps<T>, requestId?: RequestId) => void\n}\n\nconst useIframeMessageHandler = (\n  selectedApp: SafeApp | undefined,\n  openConfirmationModal: (txs: Transaction[], params: TransactionParams | undefined, requestId: RequestId) => void,\n  closeModal: () => void,\n  iframeRef: MutableRefObject<HTMLIFrameElement | null>,\n): ReturnType => {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar()\n  const { address: safeAddress, ethBalance, name: safeName } = useSelector(currentSafeWithNames)\n  const dispatch = useDispatch()\n  const { chainId, chainName } = getChainInfo()\n\n  const sendMessageToIframe = useCallback(\n    function <T extends InterfaceMessageIds>(message: InterfaceMessageProps<T>, requestId?: RequestId) {\n      const requestWithMessage = {\n        ...message,\n        requestId: requestId || Math.trunc(window.performance.now()),\n        version: '0.4.2',\n      }\n\n      if (iframeRef && selectedApp) {\n        iframeRef.current?.contentWindow?.postMessage(requestWithMessage, selectedApp.url)\n      }\n    },\n    [iframeRef, selectedApp],\n  )\n\n  useEffect(() => {\n    const handleIframeMessage = (\n      messageId: SDKMessageIds,\n      messagePayload: SDKMessageToPayload[typeof messageId],\n      requestId: RequestId,\n    ): void => {\n      if (!messageId) {\n        return\n      }\n\n      switch (messageId) {\n        // typescript doesn't narrow type in switch/case statements\n        // issue: https://github.com/microsoft/TypeScript/issues/20375\n        // possible solution: https://stackoverflow.com/a/43879897/7820085\n        case SDK_MESSAGES.SEND_TRANSACTIONS: {\n          if (messagePayload) {\n            openConfirmationModal(\n              messagePayload as SDKMessageToPayload[typeof SDK_MESSAGES.SEND_TRANSACTIONS],\n              undefined,\n              requestId,\n            )\n          }\n          break\n        }\n\n        case SDK_MESSAGES.SAFE_APP_SDK_INITIALIZED: {\n          const safeInfoMessage = {\n            messageId: INTERFACE_MESSAGES.ON_SAFE_INFO,\n            data: {\n              safeAddress: safeAddress as string,\n              network: getLegacyChainName(chainName, chainId).toLowerCase() as LowercaseNetworks,\n              ethBalance: ethBalance as string,\n            },\n          }\n          const envInfoMessage = {\n            messageId: INTERFACE_MESSAGES.ENV_INFO,\n            data: {\n              txServiceUrl: getTxServiceUrl(),\n            },\n          }\n\n          sendMessageToIframe(safeInfoMessage)\n          sendMessageToIframe(envInfoMessage)\n          break\n        }\n        default: {\n          console.error(`ThirdPartyApp: A message was received with an unknown message id ${messageId}.`)\n          break\n        }\n      }\n    }\n    const onIframeMessage = async (\n      message: MessageEvent<{\n        requestId: RequestId\n        messageId: SDKMessageIds\n        data: SDKMessageToPayload[SDKMessageIds]\n      }>,\n    ) => {\n      if (message.origin === window.origin) {\n        return\n      }\n      if (!selectedApp?.url.includes(message.origin)) {\n        console.error(`ThirdPartyApp: A message was received from an unknown origin ${message.origin}`)\n        return\n      }\n      handleIframeMessage(message.data.messageId, message.data.data, message.data.requestId)\n    }\n\n    window.addEventListener('message', onIframeMessage)\n    return () => {\n      window.removeEventListener('message', onIframeMessage)\n    }\n  }, [\n    chainName,\n    chainId,\n    closeModal,\n    closeSnackbar,\n    dispatch,\n    enqueueSnackbar,\n    ethBalance,\n    openConfirmationModal,\n    safeAddress,\n    safeName,\n    selectedApp,\n    sendMessageToIframe,\n  ])\n\n  return {\n    sendMessageToIframe,\n  }\n}\n\nexport { useIframeMessageHandler }\n","export default __webpack_public_path__ + \"static/media/addApp.8e52bdd5.svg\";","import styled, { keyframes } from 'styled-components'\n\nconst gradientSK = keyframes`\n  0% {\n    background-position: 0% 54%;\n  }\n  50% {\n    background-position: 100% 47%;\n  }\n  100% {\n    background-position: 0% 54%;\n  }\n`\n\nexport const AppIconSK = styled.div`\n  height: 60px;\n  width: 60px;\n  border-radius: 30px;\n  margin: 0 auto;\n  background-color: lightgrey;\n  background: linear-gradient(84deg, lightgrey, transparent);\n  background-size: 400% 400%;\n  animation: ${gradientSK} 1.5s ease infinite;\n`\nexport const TitleSK = styled.div`\n  height: 24px;\n  width: 160px;\n  margin: 24px auto;\n  background-color: lightgrey;\n  background: linear-gradient(84deg, lightgrey, transparent);\n  background-size: 400% 400%;\n  animation: ${gradientSK} 1.5s ease infinite;\n`\nexport const DescriptionSK = styled.div`\n  height: 16px;\n  width: 200px;\n  background-color: lightgrey;\n  background: linear-gradient(84deg, lightgrey, transparent);\n  background-size: 400% 400%;\n  animation: ${gradientSK} 1.5s ease infinite;\n`\n","import { SyntheticEvent } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport Bookmark from '@material-ui/icons/Bookmark'\nimport BookmarkBorder from '@material-ui/icons/BookmarkBorder'\nimport { alpha } from '@material-ui/core/styles/colorManipulator'\nimport IconButton from '@material-ui/core/IconButton'\nimport { Title, Text, Button, Card, Icon } from '@gnosis.pm/safe-react-components'\nimport { motion } from 'framer-motion'\nimport AddAppIcon from 'src/routes/safe/components/Apps/assets/addApp.svg'\nimport { FETCH_STATUS } from 'src/utils/requests'\nimport { SafeApp } from '../../types'\n\nimport appsIconSvg from 'src/assets/icons/apps.svg'\nimport { AppIconSK, DescriptionSK, TitleSK } from './skeleton'\n\nconst StyledAppCard = styled(Card)`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: space-evenly;\n  box-shadow: 1px 2px 10px 0 ${({ theme }) => alpha(theme.colors.shadow.color, 0.18)};\n  height: 232px !important;\n  box-sizing: border-box;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.secondary};\n\n  :hover {\n    box-shadow: 1px 2px 16px 0 ${({ theme }) => alpha(theme.colors.shadow.color, 0.35)};\n    transition: box-shadow 0.3s ease-in-out;\n    background-color: ${({ theme }) => theme.colors.background};\n    cursor: pointer;\n\n    h5 {\n      color: ${({ theme }) => theme.colors.primary};\n    }\n  }\n`\n\nconst IconBtn = styled(IconButton)`\n  &.MuiButtonBase-root {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    z-index: 10;\n    padding: 5px;\n    opacity: 0;\n\n    transition: opacity 0.2s ease-in-out;\n  }\n\n  svg {\n    width: 16px;\n    height: 16px;\n  }\n`\n\nconst AppContainer = styled(motion.div)`\n  position: relative;\n\n  &:hover {\n    ${IconBtn} {\n      opacity: 1;\n    }\n  }\n`\n\nconst IconImg = styled.img<{ size: 'md' | 'lg'; src: string | undefined }>`\n  width: ${({ size }) => (size === 'md' ? '60px' : '102px')};\n  height: ${({ size }) => (size === 'md' ? '60px' : '92px')};\n  margin-top: ${({ size }) => (size === 'md' ? '0' : '-16px')};\n  object-fit: contain;\n`\n\nconst AppName = styled(Title)`\n  text-align: center;\n  margin: 16px 0 9px 0;\n`\n\nconst AppDescription = styled(Text)`\n  text-align: center;\n  height: 72px;\n  line-height: 24px;\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n`\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n`\n\nconst setAppImageFallback = (error: SyntheticEvent<HTMLImageElement, Event>): void => {\n  error.currentTarget.onerror = null\n  error.currentTarget.src = appsIconSvg\n}\n\nconst isAppLoading = (app: SafeApp) => FETCH_STATUS.LOADING === app.fetchStatus\nconst getPinLabel = (name: string, pinned: boolean) => (pinned ? `Unpin ${name}` : `Pin ${name}`)\n\ntype Shared = {\n  className?: string\n  app: SafeApp\n  iconSize?: 'md' | 'lg'\n  to: string\n  pinned?: boolean\n}\n\ntype CustomAppProps = Shared & { onRemove?: (app: SafeApp) => void; onPin?: undefined }\ntype RemoteAppProps = Shared & { onPin?: (app: SafeApp) => void; onRemove?: undefined }\ntype Props = CustomAppProps | RemoteAppProps\n\nconst AppCard = ({ app, iconSize = 'md', to, onPin, onRemove, pinned = false }: Props): React.ReactElement => {\n  if (isAppLoading(app)) {\n    return (\n      <AppContainer layout initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n        <StyledAppCard>\n          <AppIconSK />\n          <TitleSK />\n          <DescriptionSK />\n          <DescriptionSK />\n        </StyledAppCard>\n      </AppContainer>\n    )\n  }\n\n  const content = (\n    <>\n      <StyledAppCard>\n        <IconImg alt={`${app.name || 'App'} Logo`} src={app.iconUrl} onError={setAppImageFallback} size={iconSize} />\n        <AppName size=\"xs\">{app.name}</AppName>\n        <AppDescription size=\"lg\">{app.description} </AppDescription>\n      </StyledAppCard>\n      {onPin && (\n        <IconBtn\n          aria-label={getPinLabel(app.name, pinned)}\n          title={getPinLabel(app.name, pinned)}\n          onClick={(e) => {\n            // prevent triggering the link event\n            e.preventDefault()\n\n            onPin(app)\n          }}\n        >\n          {pinned ? <Bookmark /> : <BookmarkBorder />}\n        </IconBtn>\n      )}\n\n      {onRemove && (\n        <IconBtn\n          aria-label=\"Remove an app\"\n          title=\"Remove app\"\n          onClick={(e) => {\n            e.preventDefault()\n\n            onRemove(app)\n          }}\n        >\n          <Icon size=\"sm\" type=\"delete\" color=\"error\" />\n        </IconBtn>\n      )}\n    </>\n  )\n\n  return (\n    <AppContainer layout initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n      <StyledLink to={to}>{content}</StyledLink>\n    </AppContainer>\n  )\n}\n\nconst AddCustomAppCard = ({ onClick }: { onClick: () => void }): React.ReactElement => (\n  <AppContainer layout initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }} onClick={onClick}>\n    <StyledAppCard>\n      <IconImg alt=\"PlayStation gamepad symbols\" src={AddAppIcon} onError={setAppImageFallback} size=\"lg\" />\n      <Button size=\"md\" color=\"primary\" variant=\"contained\" onClick={onClick}>\n        Add custom app\n      </Button>\n    </StyledAppCard>\n  </AppContainer>\n)\n\nexport { AppCard, AddCustomAppCard }\n","import React from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport Input from '@material-ui/core/Input'\nimport SearchIcon from '@material-ui/icons/Search'\nimport ClearIcon from '@material-ui/icons/Clear'\nimport styled from 'styled-components'\nimport { Card } from '@gnosis.pm/safe-react-components'\n\nconst Container = styled(Card)`\n  width: 100%;\n  box-sizing: border-box;\n`\n\ntype Props = {\n  value: string\n  onValueChange: (value: string) => void\n}\n\nconst SearchInputCard = ({ value, onValueChange }: Props): React.ReactElement => (\n  <Container>\n    <Input\n      inputProps={{\n        'aria-label': 'search',\n      }}\n      startAdornment={<SearchIcon />}\n      endAdornment={\n        value && (\n          <IconButton aria-label=\"Clear the search\" onClick={() => onValueChange('')}>\n            <ClearIcon />\n          </IconButton>\n        )\n      }\n      onChange={(event: React.ChangeEvent<HTMLInputElement>) => onValueChange(event.target.value)}\n      placeholder=\"e.g Compound\"\n      value={value}\n      style={{ width: '100%' }}\n    />\n  </Container>\n)\n\nexport { SearchInputCard }\n","import { Text, Button } from '@gnosis.pm/safe-react-components'\nimport styled from 'styled-components'\n\nconst NoAppsFoundTextContainer = styled.div`\n  max-width: 650px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: ${({ theme }) => theme.margin.xxl};\n  margin-bottom: ${({ theme }) => theme.margin.xxl};\n\n  & > p {\n    text-align: center;\n  }\n`\n\nconst SButton = styled(Button)`\n  margin-top: ${({ theme }) => theme.margin.md};\n  max-width: 300px;\n`\n\ntype Props = {\n  query: string\n  onWalletConnectSearch: () => void\n}\n\nconst NoAppsFound = ({ query, onWalletConnectSearch }: Props): React.ReactElement => (\n  <NoAppsFoundTextContainer>\n    <Text size=\"xl\">\n      No apps found matching <b>{query}</b>. Connect to dApps that haven&apos;t yet been integrated with the Safe using\n      the WalletConnect App.\n    </Text>\n    <SButton onClick={onWalletConnectSearch} size=\"md\">\n      Search WalletConnect\n    </SButton>\n  </NoAppsFoundTextContainer>\n)\n\nexport { NoAppsFound }\n","import { Checkbox, Text } from '@gnosis.pm/safe-react-components'\n\nimport { useFormState } from 'react-final-form'\nimport styled from 'styled-components'\n\nimport { required } from 'src/components/forms/validator'\nimport Field from 'src/components/forms/Field'\n\nconst StyledCheckbox = styled(Checkbox)`\n  margin: 0;\n`\n\nconst AppAgreement = (): React.ReactElement => {\n  const { visited } = useFormState({ subscription: { visited: true } })\n\n  // trick to prevent having the field validated by default. Not sure why this happens in this form\n  const validate = !visited?.agreementAccepted ? undefined : required\n\n  return (\n    <Field\n      component={StyledCheckbox}\n      label={<Text size=\"xl\">This app is not a Gnosis product and I agree to use this app at my own risk.</Text>}\n      name=\"agreementAccepted\"\n      type=\"checkbox\"\n      validate={validate}\n    />\n  )\n}\n\nexport default AppAgreement\n","import { useEffect } from 'react'\nimport { TextField } from '@gnosis.pm/safe-react-components'\nimport createDecorator from 'final-form-calculate'\nimport { useField, useFormState } from 'react-final-form'\nimport styled from 'styled-components'\n\nimport { SafeApp } from 'src/routes/safe/components/Apps/types'\nimport { getAppInfoFromUrl, getIpfsLinkFromEns, uniqueApp } from 'src/routes/safe/components/Apps/utils'\nimport { composeValidators, required } from 'src/components/forms/validator'\nimport Field from 'src/components/forms/Field'\nimport { isValidURL } from 'src/utils/url'\nimport { isValidEnsName } from 'src/logic/wallets/ethAddresses'\nimport { useDebounce } from 'src/logic/hooks/useDebounce'\n\nconst validateUrl = (url: string): string | undefined => (isValidURL(url) ? undefined : 'Invalid URL')\n\nexport const appUrlResolver = createDecorator({\n  field: 'appUrl',\n  updates: {\n    appUrl: async (appUrl: string): Promise<string | undefined> => {\n      const ensContent = !isValidURL(appUrl) && isValidEnsName(appUrl) && (await getIpfsLinkFromEns(appUrl))\n\n      if (ensContent) {\n        return ensContent\n      }\n\n      return appUrl\n    },\n  },\n})\n\ntype AppInfoUpdaterProps = {\n  onAppInfo: (appInfo: SafeApp) => unknown\n  onLoading: (isLoading: boolean) => unknown\n  onError: (error: Error) => unknown\n}\n\nexport const AppInfoUpdater = ({ onAppInfo, onLoading, onError }: AppInfoUpdaterProps): null => {\n  const {\n    input: { value: appUrl },\n  } = useField('appUrl', { subscription: { value: true } })\n\n  const debouncedValue = useDebounce(appUrl, 500)\n\n  useEffect(() => {\n    const updateAppInfo = async () => {\n      onLoading(true)\n\n      try {\n        const appInfo = await getAppInfoFromUrl(debouncedValue)\n        onAppInfo({ ...appInfo })\n      } catch (error) {\n        onError?.(error)\n      }\n\n      onLoading(false)\n    }\n\n    if (isValidURL(debouncedValue)) {\n      updateAppInfo()\n    }\n  }, [debouncedValue, onAppInfo, onError, onLoading])\n\n  return null\n}\n\nconst StyledAppUrlField = styled(Field)`\n  && {\n    width: 100%;\n  }\n`\n\nconst AppUrl = ({ appList }: { appList: SafeApp[] }): React.ReactElement => {\n  const { visited } = useFormState({ subscription: { visited: true } })\n\n  // trick to prevent having the field validated by default. Not sure why this happens in this form\n  const validate = !visited?.appUrl ? undefined : composeValidators(required, validateUrl, uniqueApp(appList))\n\n  return (\n    <StyledAppUrlField\n      label=\"App URL\"\n      name=\"appUrl\"\n      placeholder=\"App URL\"\n      type=\"text\"\n      component={TextField}\n      validate={validate}\n      autoComplete=\"off\"\n    />\n  )\n}\n\nexport default AppUrl\n","import { ReactElement, useMemo } from 'react'\nimport { useFormState } from 'react-final-form'\n\nimport { Modal } from 'src/components/Modal'\nimport { isAppManifestValid } from 'src/routes/safe/components/Apps/utils'\nimport { SafeApp } from '../../types'\n\ninterface Props {\n  appInfo: SafeApp\n  onCancel: () => void\n}\n\nexport const FormButtons = ({ appInfo, onCancel }: Props): ReactElement => {\n  const { valid, validating, visited } = useFormState({\n    subscription: { valid: true, validating: true, visited: true },\n  })\n\n  const isSubmitDisabled = useMemo(() => {\n    // if non visited, fields were not evaluated yet. Then, the default value is considered invalid\n    const fieldsVisited = visited?.agreementAccepted && visited?.appUrl\n\n    // @ts-expect-error adding this because isAppManifestValid only checks name and description which are both present in the SafeApp type\n    return validating || !valid || !fieldsVisited || !isAppManifestValid(appInfo)\n  }, [validating, valid, visited, appInfo])\n\n  return (\n    <Modal.Footer.Buttons\n      cancelButtonProps={{ onClick: onCancel }}\n      confirmButtonProps={{ disabled: isSubmitDisabled, text: 'Add' }}\n    />\n  )\n}\n","import { Icon, Link, Loader, Text, TextField } from '@gnosis.pm/safe-react-components'\nimport { useState, ReactElement, useCallback, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { SafeApp } from 'src/routes/safe/components/Apps/types'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport Img from 'src/components/layout/Img'\nimport { Modal } from 'src/components/Modal'\nimport AppAgreement from './AppAgreement'\nimport AppUrl, { AppInfoUpdater, appUrlResolver } from './AppUrl'\nimport { FormButtons } from './FormButtons'\nimport { getEmptySafeApp } from 'src/routes/safe/components/Apps/utils'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { generateSafeRoute, extractPrefixedSafeAddress, SAFE_ROUTES } from 'src/routes/routes'\n\nconst FORM_ID = 'add-apps-form'\n\nconst StyledTextFileAppName = styled(TextField)`\n  && {\n    width: 385px;\n    .MuiFormLabel-root {\n      &.Mui-disabled {\n        color: rgba(0, 0, 0, 0.54);\n        &.Mui-error {\n          color: ${(props) => props.theme.colors.error};\n        }\n      }\n    }\n    .MuiInputBase-root {\n      .MuiFilledInput-input {\n        color: rgba(0, 0, 0, 0.54);\n      }\n      &:before {\n        border-bottom-style: inset;\n      }\n    }\n  }\n`\n\nconst AppInfo = styled.div`\n  display: flex;\n  margin: 36px 0 24px 0;\n\n  img {\n    margin-right: 10px;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  inline-size: fit-content;\n`\n\nconst AppDocsInfo = styled.div`\n  display: flex;\n  margin-bottom: 24px;\n  flex-direction: column;\n  svg {\n    position: relative;\n    top: 4px;\n    left: 4px;\n  }\n`\n\nconst WrapperLoader = styled.div`\n  height: 55px;\n  width: 65px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledLoader = styled(Loader)`\n  margin-right: 15px;\n`\n\ninterface AddAppFormValues {\n  appUrl: string\n  agreementAccepted: boolean\n}\n\nconst INITIAL_VALUES: AddAppFormValues = {\n  appUrl: '',\n  agreementAccepted: false,\n}\n\nconst DEFAULT_APP_INFO = getEmptySafeApp()\n\nconst CUSTOM_SAFE_APPS_LINK = 'https://docs.gnosis-safe.io/build/sdks/safe-apps'\n\ninterface AddAppProps {\n  appList: SafeApp[]\n  closeModal: () => void\n  onAddApp: (app: SafeApp) => void\n}\n\nconst AddApp = ({ appList, closeModal, onAddApp }: AddAppProps): ReactElement => {\n  const [appInfo, setAppInfo] = useState<SafeApp>(DEFAULT_APP_INFO)\n  const [fetchError, setFetchError] = useState<string | undefined>()\n  const history = useHistory()\n  const [isLoading, setIsLoading] = useState(false)\n\n  const handleSubmit = useCallback(async () => {\n    onAddApp(appInfo)\n    history.push({\n      pathname: generateSafeRoute(SAFE_ROUTES.APPS, extractPrefixedSafeAddress()),\n      search: `?appUrl=${encodeURIComponent(appInfo.url)}`,\n    })\n  }, [history, appInfo, onAddApp])\n\n  useEffect(() => {\n    if (isLoading) {\n      setFetchError(undefined)\n    }\n  }, [isLoading])\n\n  const onError = useCallback(\n    (error: Error) => {\n      setFetchError(error.message)\n      logError(Errors._903, error.message)\n      setAppInfo(DEFAULT_APP_INFO)\n    },\n    [setAppInfo],\n  )\n\n  return (\n    <GnoForm decorators={[appUrlResolver]} initialValues={INITIAL_VALUES} onSubmit={handleSubmit} testId={FORM_ID}>\n      {() => (\n        <>\n          <Modal.Body>\n            <AppDocsInfo>\n              <Text size=\"xl\" as=\"span\" color=\"secondary\">\n                Safe Apps are third-party extensions.\n              </Text>\n              <StyledLink\n                href={CUSTOM_SAFE_APPS_LINK}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                title=\"Learn more about building Safe Apps\"\n              >\n                <Text size=\"xl\" as=\"span\" color=\"primary\">\n                  Learn more about building Safe Apps.\n                </Text>\n                <Icon size=\"sm\" type=\"externalLink\" color=\"primary\" />\n              </StyledLink>\n            </AppDocsInfo>\n            <AppUrl appList={appList} />\n            {/* Fetch app from url and return a SafeApp */}\n            <AppInfoUpdater onAppInfo={setAppInfo} onLoading={setIsLoading} onError={onError} />\n            <AppInfo>\n              {isLoading ? (\n                <WrapperLoader>\n                  <StyledLoader size=\"sm\" />\n                </WrapperLoader>\n              ) : (\n                <Img alt=\"Token image\" width={55} src={appInfo.iconUrl} />\n              )}\n              <StyledTextFileAppName\n                label=\"App name\"\n                disabled\n                meta={{ error: fetchError }}\n                value={isLoading ? 'Loading...' : appInfo.name === DEFAULT_APP_INFO.name ? '' : appInfo.name}\n                onChange={() => {}}\n              />\n            </AppInfo>\n            <AppAgreement />\n          </Modal.Body>\n          <Modal.Footer>\n            <FormButtons appInfo={appInfo} onCancel={closeModal} />\n          </Modal.Footer>\n        </>\n      )}\n    </GnoForm>\n  )\n}\n\nexport default AddApp\n","import { getSafeApps, SafeAppData } from '@gnosis.pm/safe-react-gateway-sdk'\n\nimport { _getChainId } from 'src/config'\nimport { GATEWAY_URL } from 'src/utils/constants'\n\nexport const fetchSafeAppsList = async (): Promise<SafeAppData[]> => {\n  return getSafeApps(GATEWAY_URL, _getChainId(), {\n    client_url: window.location.origin,\n  })\n}\n","import { useCallback, useMemo } from 'react'\n\nimport { SafeApp } from '../../types'\nimport { useCustomSafeApps } from './useCustomSafeApps'\nimport { useRemoteSafeApps } from './useRemoteSafeApps'\nimport { usePinnedSafeApps } from './usePinnedSafeApps'\nimport { FETCH_STATUS } from 'src/utils/requests'\nimport { SAFE_APP_EVENTS, useAnalytics } from 'src/utils/googleAnalytics'\n\ntype UseAppListReturnType = {\n  allApps: SafeApp[]\n  appList: SafeApp[]\n  customApps: SafeApp[]\n  pinnedSafeApps: SafeApp[]\n  togglePin: (app: SafeApp) => void\n  removeApp: (appId: string) => void\n  addCustomApp: (app: SafeApp) => void\n  isLoading: boolean\n}\n\nconst useAppList = (): UseAppListReturnType => {\n  const { remoteSafeApps, status: remoteAppsFetchStatus } = useRemoteSafeApps()\n  const { customSafeApps, updateCustomSafeApps } = useCustomSafeApps()\n  const { pinnedSafeAppIds, updatePinnedSafeApps } = usePinnedSafeApps(remoteSafeApps, remoteAppsFetchStatus)\n  const remoteIsLoading = remoteAppsFetchStatus === FETCH_STATUS.LOADING\n\n  const { trackEvent } = useAnalytics()\n\n  const allApps = useMemo(() => {\n    const allApps = [...remoteSafeApps, ...customSafeApps]\n    return allApps.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))\n  }, [remoteSafeApps, customSafeApps])\n\n  const appList = useMemo(() => {\n    return remoteSafeApps.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))\n  }, [remoteSafeApps])\n\n  const customApps = useMemo(\n    () =>\n      // Filter out custom apps that are now part of the production app list\n      customSafeApps\n        .filter((persistedApp) => !remoteSafeApps.some((app) => app.url === persistedApp.url))\n        .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase())),\n    [customSafeApps, remoteSafeApps],\n  )\n\n  const pinnedSafeApps = useMemo(\n    () => appList.filter((app) => pinnedSafeAppIds.includes(app.id)),\n    [pinnedSafeAppIds, appList],\n  )\n\n  const addCustomApp = useCallback(\n    (app: SafeApp): void => {\n      const newList = [...customSafeApps, app]\n      updateCustomSafeApps(newList)\n    },\n    [updateCustomSafeApps, customSafeApps],\n  )\n\n  const removeApp = useCallback(\n    (appId: string): void => {\n      const newPersistedList = customSafeApps.filter(({ id }) => id !== appId)\n      updateCustomSafeApps(newPersistedList)\n    },\n    [updateCustomSafeApps, customSafeApps],\n  )\n\n  const togglePin = useCallback(\n    (app: SafeApp): void => {\n      const { id: appId, name: appName } = app\n      const newPinnedIds = [...pinnedSafeAppIds]\n      const isAppPinned = pinnedSafeAppIds.includes(appId)\n\n      if (isAppPinned) {\n        trackEvent({ ...SAFE_APP_EVENTS.PIN, label: appName })\n        newPinnedIds.splice(newPinnedIds.indexOf(appId), 1)\n      } else {\n        trackEvent({ ...SAFE_APP_EVENTS.UNPIN, label: appName })\n        newPinnedIds.push(appId)\n      }\n\n      updatePinnedSafeApps(newPinnedIds)\n    },\n    [trackEvent, updatePinnedSafeApps, pinnedSafeAppIds],\n  )\n\n  return {\n    allApps,\n    appList,\n    customApps,\n    pinnedSafeApps,\n    removeApp,\n    togglePin,\n    addCustomApp,\n    isLoading: remoteIsLoading,\n  }\n}\n\nexport { useAppList }\n","import { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { logError, Errors } from 'src/logic/exceptions/CodedException'\nimport enqueueSnackbar from 'src/logic/notifications/store/actions/enqueueSnackbar'\nimport { NOTIFICATIONS } from 'src/logic/notifications'\nimport { FETCH_STATUS } from 'src/utils/requests'\nimport { SafeApp } from '../../types'\nimport { fetchSafeAppsList } from 'src/logic/safe/api/fetchSafeApps'\n\ntype ReturnType = {\n  remoteSafeApps: SafeApp[]\n  status: FETCH_STATUS\n}\n\nconst useRemoteSafeApps = (): ReturnType => {\n  const [remoteSafeApps, setRemoteSafeApps] = useState<SafeApp[]>([])\n  const [status, setStatus] = useState<FETCH_STATUS>(FETCH_STATUS.NOT_ASKED)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const loadAppsList = async () => {\n      setStatus(FETCH_STATUS.LOADING)\n      try {\n        const result = await fetchSafeAppsList()\n\n        if (result?.length) {\n          setRemoteSafeApps(result.map((app) => ({ ...app, fetchStatus: FETCH_STATUS.SUCCESS, id: String(app.id) })))\n          setStatus(FETCH_STATUS.SUCCESS)\n        } else {\n          throw new Error('Empty apps array 🤬')\n        }\n      } catch (e) {\n        setStatus(FETCH_STATUS.ERROR)\n        logError(Errors._902, e.message)\n        dispatch(enqueueSnackbar(NOTIFICATIONS.SAFE_APPS_FETCH_ERROR_MSG))\n      }\n    }\n\n    loadAppsList()\n  }, [dispatch])\n\n  return { remoteSafeApps, status }\n}\n\nexport { useRemoteSafeApps }\n","import { useState, useEffect, useCallback } from 'react'\nimport { loadFromStorage, saveToStorage } from 'src/utils/storage'\nimport { logError, Errors } from 'src/logic/exceptions/CodedException'\nimport { FETCH_STATUS } from 'src/utils/requests'\nimport { APPS_STORAGE_KEY, getAppInfoFromUrl, getEmptySafeApp } from '../../utils'\nimport { StoredSafeApp, SafeApp } from '../../types'\n\ntype ReturnType = {\n  customSafeApps: SafeApp[]\n  loaded: boolean\n  updateCustomSafeApps: (newCustomSafeApps: SafeApp[]) => void\n}\n\ntype CustomSafeApp = StoredSafeApp\n\n/* \n  This hook is used to manage the list of custom safe apps.\n  What it does:\n  1. Loads a list of custom safe apps from local storage\n  2. Does some backward compatibility checks (supported app networks, etc)\n  3. Tries to fetch the app info (manifest.json) from the app url\n*/\nconst useCustomSafeApps = (): ReturnType => {\n  const [customSafeApps, setCustomSafeApps] = useState<SafeApp[]>([])\n  const [loaded, setLoaded] = useState(false)\n\n  const updateCustomSafeApps = useCallback((newCustomSafeApps: SafeApp[]) => {\n    setCustomSafeApps(newCustomSafeApps)\n    saveToStorage(\n      APPS_STORAGE_KEY,\n      newCustomSafeApps.map(({ url }) => ({ url })),\n    )\n  }, [])\n\n  useEffect(() => {\n    const fetchAppCallback = (res: SafeApp, error = false) => {\n      setCustomSafeApps((prev) => {\n        const prevAppsCopy = [...prev]\n        const appIndex = prevAppsCopy.findIndex((a) => a.url === res.url)\n\n        if (error) {\n          prevAppsCopy.splice(appIndex, 1)\n        } else {\n          prevAppsCopy[appIndex] = { ...res, fetchStatus: FETCH_STATUS.SUCCESS }\n        }\n\n        return prevAppsCopy\n      })\n    }\n\n    const loadCustomApps = async () => {\n      // recover apps from storage (third-party apps added by the user)\n      const storageAppList = (await loadFromStorage<CustomSafeApp[]>(APPS_STORAGE_KEY)) || []\n      // if the app does not expose supported networks, include them. (backward compatible)\n      const serializedApps = storageAppList.map(\n        (app): SafeApp => ({\n          ...getEmptySafeApp(),\n          ...app,\n          url: app.url.trim(),\n          id: app.url.trim(),\n          custom: true,\n        }),\n      )\n      setCustomSafeApps(serializedApps)\n      setLoaded(true)\n\n      serializedApps.forEach((app) => {\n        getAppInfoFromUrl(app.url)\n          .then((appFromUrl) => {\n            fetchAppCallback({ ...appFromUrl, custom: true })\n          })\n          .catch((err) => {\n            fetchAppCallback(app, true)\n            logError(Errors._900, `${app.url}, ${err.message}`)\n          })\n      })\n    }\n\n    loadCustomApps()\n  }, [])\n\n  return { customSafeApps, loaded, updateCustomSafeApps }\n}\n\nexport { useCustomSafeApps }\n","import { useState, useEffect } from 'react'\nimport { loadFromStorage, saveToStorage } from 'src/utils/storage'\nimport { PINNED_SAFE_APP_IDS } from '../../utils'\nimport { FETCH_STATUS } from 'src/utils/requests'\nimport { SafeApp } from '../../types'\n\ntype ReturnType = {\n  pinnedSafeAppIds: string[]\n  loaded: boolean\n  updatePinnedSafeApps: (newPinnedSafeAppIds: string[]) => void\n}\n\nconst usePinnedSafeApps = (remoteSafeApps: SafeApp[], remoteAppsFetchStatus: FETCH_STATUS): ReturnType => {\n  const [pinnedSafeAppIds, updatePinnedSafeApps] = useState<string[]>([])\n  const [loaded, setLoaded] = useState(false)\n\n  useEffect(() => {\n    const loadPinnedAppIds = async () => {\n      const pinnedAppIds = (await loadFromStorage<string[]>(PINNED_SAFE_APP_IDS)) || []\n\n      const isRemoteSafeAppsListLoaded = remoteAppsFetchStatus === FETCH_STATUS.SUCCESS\n      if (isRemoteSafeAppsListLoaded) {\n        // we remove pinned Safe Apps that are not included in the remote list, see #2847\n        const filteredPinnedAppsIds = pinnedAppIds.filter((pinnedAppId) =>\n          remoteSafeApps.some((app) => app.id === pinnedAppId),\n        )\n        updatePinnedSafeApps(filteredPinnedAppsIds)\n        setLoaded(true)\n      }\n    }\n\n    loadPinnedAppIds()\n  }, [remoteAppsFetchStatus, remoteSafeApps])\n\n  // we only update pinned apps in the localStorage when remote Apps are loaded\n  useEffect(() => {\n    const isRemoteSafeAppsListLoaded = remoteAppsFetchStatus === FETCH_STATUS.SUCCESS\n    if (isRemoteSafeAppsListLoaded) {\n      saveToStorage(PINNED_SAFE_APP_IDS, pinnedSafeAppIds)\n    }\n  }, [pinnedSafeAppIds, remoteAppsFetchStatus])\n\n  return { pinnedSafeAppIds, loaded, updatePinnedSafeApps }\n}\n\nexport { usePinnedSafeApps }\n","import { Text } from '@gnosis.pm/safe-react-components'\nimport Card from '@material-ui/core/Card'\nimport BookmarkBorder from '@material-ui/icons/BookmarkBorder'\n\nimport styled from 'styled-components'\nimport InfoIcon from 'src/assets/icons/info.svg'\nimport Img from 'src/components/layout/Img'\n\nconst NoAppsFoundTextContainer = styled(Card)`\n  display: flex;\n  margin-top: ${({ theme }) => theme.margin.md};\n  margin-bottom: ${({ theme }) => theme.margin.md};\n  box-shadow: 1px 2px 10px 0 rgba(212, 212, 211, 0.59);\n  box-sizing: border-box;\n  max-width: 100%;\n  padding: 52px 54px;\n  justify-content: center;\n  gap: ${({ theme }) => theme.margin.sm};\n`\n\nconst StyledBookmarkIcon = styled(BookmarkBorder)`\n  height: 16px;\n  vertical-align: middle;\n`\n\nconst PinnedAppsTutorial = (): React.ReactElement => (\n  <NoAppsFoundTextContainer>\n    <Img alt=\"Info\" src={InfoIcon} />\n    <Text size=\"xl\">\n      Simply hover over an app and click on the\n      <StyledBookmarkIcon />\n      to bookmark the app here for convenient access\n    </Text>\n  </NoAppsFoundTextContainer>\n)\n\nexport { PinnedAppsTutorial }\n","import { IconText, Loader, Menu, Text, Breadcrumb, BreadcrumbElement } from '@gnosis.pm/safe-react-components'\nimport { useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport { motion, AnimatePresence } from 'framer-motion'\n\nimport Collapse from 'src/components/Collapse'\nimport Col from 'src/components/layout/Col'\nimport { Modal } from 'src/components/Modal'\nimport { AppCard, AddCustomAppCard } from 'src/routes/safe/components/Apps/components/AppCard'\nimport { useStateHandler } from 'src/logic/hooks/useStateHandler'\nimport { SearchInputCard } from './SearchInputCard'\nimport { NoAppsFound } from './NoAppsFound'\nimport { SafeApp } from '../types'\nimport AddAppForm from './AddAppForm'\nimport { useAppList } from '../hooks/appList/useAppList'\nimport { useAppsSearch } from '../hooks/useAppsSearch'\nimport { generateSafeRoute, extractSafeAddress, SAFE_ROUTES } from 'src/routes/routes'\nimport { getShortName } from 'src/config'\nimport { PinnedAppsTutorial } from './PinnedAppsTutorial'\n\nexport const PINNED_APPS_LIST_TEST_ID = 'safe_apps__pinned-apps-container'\nexport const ALL_APPS_LIST_TEST_ID = 'safe_apps__all-apps-container'\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`\n\nconst centerCSS = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst LoadingContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  ${centerCSS};\n`\n\nconst CardsWrapper = styled(motion.div)`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(243px, 1fr));\n  column-gap: 20px;\n  row-gap: 20px;\n  justify-content: space-evenly;\n`\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  align-items: center;\n`\n\nconst SectionHeading = styled(Text)`\n  width: 100%;\n  margin: ${({ theme }) => `${theme.margin.xl} 0 ${theme.margin.md} 0`};\n`\n\nconst CenterIconText = styled(IconText)`\n  justify-content: center;\n  margin: 16px 55px 20px 0;\n`\n\nconst AppsList = (): React.ReactElement => {\n  const safeAddress = extractSafeAddress()\n  const appsPath = generateSafeRoute(SAFE_ROUTES.APPS, {\n    shortName: getShortName(),\n    safeAddress,\n  })\n  const [appSearch, setAppSearch] = useState('')\n  const { allApps, appList, removeApp, isLoading, pinnedSafeApps, togglePin, customApps, addCustomApp } = useAppList()\n  const apps = useAppsSearch(appList, appSearch)\n  const [appToRemove, setAppToRemove] = useState<SafeApp | null>(null)\n  const { open: isAddAppModalOpen, toggle: openAddAppModal, clickAway: closeAddAppModal } = useStateHandler()\n  const noAppsFound = apps.length === 0 && appSearch\n  const showCustomApps = !!customApps.length && !appSearch\n  const showPinnedApps = !appSearch\n\n  const handleAppPin = (app: SafeApp) => {\n    togglePin(app)\n  }\n\n  if (isLoading || !safeAddress) {\n    return (\n      <LoadingContainer>\n        <Loader size=\"md\" />\n      </LoadingContainer>\n    )\n  }\n\n  return (\n    <Wrapper>\n      <Menu>\n        <Col start=\"sm\" xs={12}>\n          <Breadcrumb>\n            <BreadcrumbElement iconType=\"apps\" text=\"Apps\" />\n          </Breadcrumb>\n        </Col>\n      </Menu>\n      <ContentWrapper>\n        <SearchInputCard value={appSearch} onValueChange={(value) => setAppSearch(value.replace(/\\s{2,}/g, ' '))} />\n\n        {showPinnedApps && (\n          <Collapse\n            title={\n              <Text color=\"placeHolder\" strong size=\"md\">\n                BOOKMARKED APPS\n              </Text>\n            }\n            defaultExpanded\n          >\n            {pinnedSafeApps.length === 0 && <PinnedAppsTutorial />}\n            <AnimatePresence>\n              <CardsWrapper data-testid={PINNED_APPS_LIST_TEST_ID}>\n                {pinnedSafeApps.map((a) => (\n                  <AppCard\n                    to={`${appsPath}?appUrl=${encodeURI(a.url)}`}\n                    key={a.id}\n                    app={a}\n                    pinned\n                    onPin={handleAppPin}\n                  />\n                ))}\n              </CardsWrapper>\n            </AnimatePresence>\n          </Collapse>\n        )}\n\n        {showCustomApps && (\n          <Collapse\n            title={\n              <Text color=\"placeHolder\" strong size=\"md\">\n                CUSTOM APPS\n              </Text>\n            }\n            defaultExpanded\n          >\n            <AnimatePresence>\n              <CardsWrapper>\n                {customApps.map((a) => (\n                  <AppCard to={`${appsPath}?appUrl=${encodeURI(a.url)}`} key={a.id} app={a} onRemove={setAppToRemove} />\n                ))}\n              </CardsWrapper>\n            </AnimatePresence>\n          </Collapse>\n        )}\n\n        <SectionHeading color=\"placeHolder\" strong size=\"md\">\n          {appSearch ? 'SEARCH RESULTS' : 'ALL APPS'}\n        </SectionHeading>\n        {noAppsFound && <NoAppsFound query={appSearch} onWalletConnectSearch={() => setAppSearch('WalletConnect')} />}\n        <AnimatePresence>\n          <CardsWrapper data-testid={ALL_APPS_LIST_TEST_ID}>\n            {!appSearch && <AddCustomAppCard onClick={openAddAppModal} />}\n            {apps.map((a) => (\n              <AppCard\n                to={`${appsPath}?appUrl=${encodeURIComponent(a.url)}`}\n                key={a.id}\n                app={a}\n                onPin={handleAppPin}\n                pinned={pinnedSafeApps.some((pinnedApp) => pinnedApp.id === a.id)}\n              />\n            ))}\n          </CardsWrapper>\n        </AnimatePresence>\n      </ContentWrapper>\n\n      <CenterIconText\n        color=\"secondary\"\n        iconSize=\"sm\"\n        iconType=\"info\"\n        text=\"These are third-party apps, which means they are not owned, controlled, maintained or audited by Gnosis. Interacting with the apps is at your own risk. Any communication within the Apps is for informational purposes only and must not be construed as investment advice to engage in any transaction.\"\n        textSize=\"sm\"\n      />\n\n      {isAddAppModalOpen && (\n        <Modal title=\"Add app\" description=\"Add a custom app to the list of apps\" handleClose={closeAddAppModal}>\n          <Modal.Header onClose={closeAddAppModal}>\n            <Modal.Header.Title>Add custom app</Modal.Header.Title>\n          </Modal.Header>\n          <AddAppForm closeModal={closeAddAppModal} appList={allApps} onAddApp={addCustomApp} />\n        </Modal>\n      )}\n\n      {appToRemove && (\n        <Modal title=\"Remove app\" description=\"Confirm for the app removal\" handleClose={() => setAppToRemove(null)}>\n          <Modal.Header onClose={() => setAppToRemove(null)}>\n            <Modal.Header.Title>Remove app</Modal.Header.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Text size=\"xl\">\n              This action will remove{' '}\n              <Text size=\"xl\" strong as=\"span\">\n                {appToRemove.name}\n              </Text>{' '}\n              from the interface\n            </Text>\n          </Modal.Body>\n          <Modal.Footer>\n            <Modal.Footer.Buttons\n              cancelButtonProps={{ onClick: () => setAppToRemove(null) }}\n              confirmButtonProps={{\n                color: 'error',\n                onClick: () => {\n                  removeApp(appToRemove.id)\n                  setAppToRemove(null)\n                },\n                text: 'Remove',\n              }}\n            />\n          </Modal.Footer>\n        </Modal>\n      )}\n    </Wrapper>\n  )\n}\n\nexport default AppsList\n","import { useMemo } from 'react'\nimport Fuse from 'fuse.js'\nimport { SafeApp } from 'src/routes/safe/components/Apps/types'\n\nconst useAppsSearch = (apps: SafeApp[], searchText: string): SafeApp[] => {\n  const fuse = useMemo(\n    () =>\n      new Fuse(apps, {\n        keys: ['name', 'description'],\n        // https://fusejs.io/api/options.html#threshold\n        // Very naive explanation: threshold represents how accurate the search results should be. The default is 0.6\n        // I tested it and found it to make the search results more accurate when the threshold is 0.2\n        // 0 - 1, where 0 is the exact match and 1 matches anything\n        threshold: 0.2,\n        findAllMatches: true,\n      }),\n    [apps],\n  )\n\n  const results = useMemo(\n    () => (searchText ? fuse.search(searchText).map((result) => result.item) : apps),\n    [fuse, apps, searchText],\n  )\n\n  return results\n}\n\nexport { useAppsSearch }\n","import { FixedDialog, Text } from '@gnosis.pm/safe-react-components'\n\ninterface OwnProps {\n  onCancel: () => void\n  onConfirm: () => void\n}\n\nconst LegalDisclaimer = ({ onCancel, onConfirm }: OwnProps): JSX.Element => (\n  <FixedDialog\n    body={\n      <>\n        <Text size=\"md\">\n          You are now accessing third-party apps, which we do not own, control, maintain or audit. We are not liable for\n          any loss you may suffer in connection with interacting with the apps, which is at your own risk. You must read\n          our Terms, which contain more detailed provisions binding on you relating to the apps.\n        </Text>\n        <br />\n        <Text size=\"md\">\n          I have read and understood the{' '}\n          <a href=\"https://gnosis-safe.io/terms\" rel=\"noopener noreferrer\" target=\"_blank\">\n            Terms\n          </a>{' '}\n          and this Disclaimer, and agree to be bound by them.\n        </Text>\n      </>\n    }\n    onCancel={onCancel}\n    onConfirm={onConfirm}\n    title=\"Disclaimer\"\n  />\n)\n\nexport default LegalDisclaimer\n","import { useState, useEffect, useCallback } from 'react'\nimport { loadFromStorage, saveToStorage } from 'src/utils/storage'\n\nconst APPS_LEGAL_CONSENT_RECEIVED = 'APPS_LEGAL_CONSENT_RECEIVED'\n\nconst useLegalConsent = (): { consentReceived: boolean | undefined; onConsentReceipt: () => void } => {\n  const [consentReceived, setConsentReceived] = useState<boolean | undefined>()\n\n  useEffect(() => {\n    setConsentReceived(loadFromStorage(APPS_LEGAL_CONSENT_RECEIVED) || false)\n  }, [])\n\n  const onConsentReceipt = useCallback((): void => {\n    setConsentReceived(true)\n    saveToStorage(APPS_LEGAL_CONSENT_RECEIVED, true)\n  }, [])\n\n  return { consentReceived, onConsentReceipt }\n}\n\nexport { useLegalConsent }\n","import { useHistory } from 'react-router-dom'\n\nimport { useSafeAppUrl } from 'src/logic/hooks/useSafeAppUrl'\nimport AppFrame from 'src/routes/safe/components/Apps/components/AppFrame'\nimport AppsList from 'src/routes/safe/components/Apps/components/AppsList'\nimport LegalDisclaimer from 'src/routes/safe/components/Apps/components/LegalDisclaimer'\nimport { useLegalConsent } from 'src/routes/safe/components/Apps/hooks/useLegalConsent'\n\nconst Apps = (): React.ReactElement => {\n  const history = useHistory()\n  const { getAppUrl } = useSafeAppUrl()\n  const url = getAppUrl()\n  const { consentReceived, onConsentReceipt } = useLegalConsent()\n\n  const goBack = () => history.goBack()\n\n  if (url) {\n    if (!consentReceived) {\n      return <LegalDisclaimer onCancel={goBack} onConfirm={onConsentReceipt} />\n    }\n\n    return <AppFrame appUrl={url} />\n  } else {\n    return <AppsList />\n  }\n}\n\nexport default Apps\n","import { useLocation } from 'react-router-dom'\nimport { useCallback } from 'react'\n\ntype AppUrlReturnType = {\n  getAppUrl: () => string | null\n}\n\nexport const useSafeAppUrl = (): AppUrlReturnType => {\n  const { search } = useLocation()\n\n  const getAppUrl = useCallback(() => {\n    const query = new URLSearchParams(search)\n    return query.get('appUrl')\n  }, [search])\n\n  return {\n    getAppUrl,\n  }\n}\n"],"sourceRoot":""}